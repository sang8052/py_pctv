{"version":3,"file":"index.min.js","sources":["../../xgplayer-streaming-shared/src/utils.js","../../xgplayer-streaming-shared/src/buffer.js","../../xgplayer-streaming-shared/src/error.js","../../xgplayer-streaming-shared/src/env.js","../../xgplayer-streaming-shared/src/logger.js","../../xgplayer-streaming-shared/src/mse.js","../../xgplayer-streaming-shared/src/net/types.js","../../xgplayer-streaming-shared/src/net/error.js","../../xgplayer-streaming-shared/src/is.js","../../xgplayer-streaming-shared/src/net/helper.js","../../xgplayer-streaming-shared/src/event.js","../../../node_modules/eventemitter3/index.js","../../xgplayer-streaming-shared/src/net/fetch.js","../../xgplayer-streaming-shared/src/net/xhr.js","../../xgplayer-streaming-shared/src/net/task.js","../../xgplayer-streaming-shared/src/streaming-helper.js","../../xgplayer-streaming-shared/src/net/index.js","../../xgplayer-streaming-shared/src/net/config.js","../../xgplayer-streaming-shared/src/services/gap.js","../../xgplayer-streaming-shared/src/services/sei.js","../../xgplayer-streaming-shared/src/services/bandwidth.js","../../xgplayer-streaming-shared/src/services/stats.js","../../xgplayer-transmuxer/src/model/types.js","../../xgplayer-transmuxer/src/model/video-track.js","../../xgplayer-transmuxer/src/model/audio-track.js","../../xgplayer-transmuxer/src/model/video-sample.js","../../xgplayer-transmuxer/src/model/audio-sample.js","../../xgplayer-transmuxer/src/model/metadata-track.js","../../xgplayer-transmuxer/src/utils/exp-golomb.js","../../xgplayer-transmuxer/src/utils/logger.js","../../xgplayer-transmuxer/src/utils/utf8.js","../../xgplayer-transmuxer/src/utils/env.js","../../xgplayer-transmuxer/src/utils/index.js","../../xgplayer-transmuxer/src/codec/nalu.js","../../xgplayer-transmuxer/src/codec/avc.js","../../xgplayer-transmuxer/src/codec/aac.js","../../xgplayer-transmuxer/src/codec/hevc.js","../../xgplayer-transmuxer/src/flv/fixer.js","../../xgplayer-transmuxer/src/flv/amf.js","../../xgplayer-transmuxer/src/flv/index.js","../../xgplayer-transmuxer/src/mpeg-ts/fixer.js","../../xgplayer-transmuxer/src/mpeg-ts/index.js","../../xgplayer-transmuxer/src/mp4/mp4-parser.js","../../xgplayer-transmuxer/src/mp4/fmp4-demuxer.js","../../xgplayer-transmuxer/src/mp4/buffer.js","../../xgplayer-transmuxer/src/mp4/mp4.js","../../xgplayer-transmuxer/src/mp4/logger.js","../../../node_modules/crypto-es/lib/md5.js","../../xgplayer-transmuxer/src/mp4/fmp4-remuxer.js","../../../node_modules/crypto-es/lib/core.js","../../../node_modules/crypto-es/lib/enc-base64.js","../../../node_modules/crypto-es/lib/evpkdf.js","../../../node_modules/crypto-es/lib/cipher-core.js","../../../node_modules/crypto-es/lib/aes.js","../../../node_modules/crypto-es/lib/mode-ctr.js","../src/hls/buffer-service/decrypt/index.js","../src/hls/constants.js","../src/hls/buffer-service/transmuxer/index.js","../src/hls/buffer-service/index.js","../src/hls/manifest-loader/parser/model.js","../src/hls/manifest-loader/parser/utils.js","../src/hls/manifest-loader/parser/master.js","../src/hls/manifest-loader/parser/media.js","../src/hls/manifest-loader/parser/index.js","../src/hls/manifest-loader/index.js","../src/hls/utils.js","../src/hls/playlist/stream.js","../src/hls/playlist/index.js","../src/hls/segment-loader/index.js","../src/hls/index.js","../src/hls/config.js","../src/plugin-extension.js","../src/plugin.js"],"sourcesContent":["export function createPublicPromise () {\n  let res, rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n  promise.used = false\n  promise.resolve = (...args) => {\n    promise.used = true\n    return res(...args)\n  }\n  promise.reject = (...args) => {\n    promise.used = true\n    return rej(...args)\n  }\n  return promise\n}\n\nexport function nowTime () {\n  try {\n    return parseInt(performance.now(), 10)\n  } catch (e) {\n    return new Date().getTime()\n  }\n}\n","export class Buffer {\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static start (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n    // Edge bug: https://bit.ly/2JYLPeB\n    if (buf.length === 1 && buf.start(0) < 0) return 0\n\n    return buf.start(0)\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static end (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n\n    return buf.end(buf.length - 1)\n  }\n\n  /**\n   * @param {{buffered?: TimeRanges}} b\n   * @returns {TimeRanges | void}\n   */\n  static get (b) {\n    if (!b) return\n    try {\n      return b.buffered\n    } catch (error) {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {[number,number][]}\n   */\n  static buffers (buf, maxHole) {\n    if (!buf || !buf.length) return []\n\n    const buffers = []\n    for (let i = 0, l = buf.length; i < l; i++) {\n      const bufLen = buffers.length\n      if (!bufLen || !maxHole) {\n        buffers.push([buf.start(i), buf.end(i)])\n      } else {\n        const last = buffers[bufLen - 1]\n        const lastEnd = last[1]\n        const start = buf.start(i)\n        if (start - lastEnd <= maxHole) {\n          const end = buf.end(i)\n          if (end > lastEnd) {\n            last[1] = end\n          }\n        } else {\n          buffers.push([buf.start(i), buf.end(i)])\n        }\n      }\n    }\n    return buffers\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {{buffers:[number,number][],length:number}}\n   */\n  static totalLength (buffers) {\n    if (!buffers || !buffers.length) return 0\n    return buffers.reduce((a, c) => (a += (c[1] - c[0])), 0)\n  }\n\n  /**\n   *\n   * @param {TimeRanges} buf\n   * @param {number} [pos=0]\n   * @param {number} [maxHole=0]\n   * @returns {{start:number,end:number,buffers:[number,number][],remaining:number,index?:number,nextStart?:number,nextEnd?:number,prevStart?:number,prevEnd?:number}}\n   */\n  static info (buf, pos = 0, maxHole = 0) {\n    if (!buf || !buf.length) return { start: 0, end: 0, buffers: [] }\n\n    let start = 0\n    let end = 0\n    let index = 0\n    let nextStart = 0\n    let nextEnd = 0\n    let prevStart = 0\n    let prevEnd = 0\n    const buffers = Buffer.buffers(buf, maxHole)\n\n    for (let i = 0, l = buffers.length; i < l; i++) {\n      const item = buffers[i]\n      if (pos + maxHole >= item[0] && pos <= item[1]) {\n        start = item[0]\n        end = item[1]\n        index = i\n      } else if (pos + maxHole < item[0]) {\n        nextStart = item[0]\n        nextEnd = item[1]\n        break\n      } else if (pos + maxHole > item[1]) {\n        prevStart = item[0]\n        prevEnd = item[1]\n      }\n    }\n\n    return {\n      start,\n      end,\n      index,\n      buffers,\n      nextStart,\n      nextEnd,\n      prevStart,\n      prevEnd,\n      currentTime: pos,\n      behind: pos - start,\n      remaining: end ? end - pos : 0,\n      length: Buffer.totalLength && Buffer.totalLength(buffers)\n    }\n  }\n}\n","export const ERR = {\n  MANIFEST: 'manifest',\n  NETWORK: 'network',\n  NETWORK_TIMEOUT: 'network_timeout',\n  NETWORK_FORBIDDEN:'network_forbidden',\n  NETWORK_NOTFOUND: 'network_notfound',\n  NETWROK_RANGE_NOT_SATISFIABLE:'network_range_not_satisfiable',\n  DEMUX: 'demux',\n  REMUX: 'remux',\n  MEDIA: 'media',\n  DRM: 'drm',\n  OTHER: 'other',\n  RUNTIME:'runtime',\n\n  SUB_TYPES: {\n    FLV: 'FLV',\n    HLS: 'HLS',\n    MP4: 'MP4',\n    FMP4: 'FMP4',\n    MSE_ADD_SB: 'MSE_ADD_SB',\n    MSE_APPEND_BUFFER: 'MSE_APPEND_BUFFER',\n    MSE_OTHER: 'MSE_OTHER',\n    MSE_FULL: 'MSE_FULL',\n    OPTION: 'OPTION',\n    DASH:'DASH',\n    LICENSE:'LICENSE',\n    CUSTOM_LICENSE:'CUSTOM_LICENSE',\n    MSE_HIJACK:'MSE_HIJACK',\n    EME_HIJACK:'EME_HIJACK',\n    SIDX:'SIDX',\n    NO_CANPLAY_ERROR:'NO_CANPLAY_ERROR',\n    BUFFERBREAK_ERROR:'BUFFERBREAK_ERROR',\n    WAITING_TIMEOUT_ERROR: 'WAITING_TIMEOUT_ERROR',\n    MEDIA_ERR_ABORTED:'MEDIA_ERR_ABORTED',\n    MEDIA_ERR_NETWORK:'MEDIA_ERR_NETWORK',\n    MEDIA_ERR_DECODE:'MEDIA_ERR_DECODE',\n    MEDIA_ERR_SRC_NOT_SUPPORTED:'MEDIA_ERR_SRC_NOT_SUPPORTED',\n    MEDIA_ERR_CODEC_NOT_SUPPORTED:'MEDIA_ERR_CODEC_NOT_SUPPORTED',\n    MEDIA_ERR_URL_EMPTY:'MEDIA_ERR_URL_EMPTY'\n  }\n}\n\nexport const ERR_CODE = {\n  [ERR.MANIFEST]: {\n    HLS: 1100,\n    DASH:1200\n  },\n  [ERR.NETWORK]: 2100,\n  [ERR.NETWORK_TIMEOUT]: 2101,\n  [ERR.NETWORK_FORBIDDEN]:2103,\n  [ERR.NETWORK_NOTFOUND]:2104,\n  [ERR.NETWROK_RANGE_NOT_SATISFIABLE]:2116,\n  [ERR.DEMUX]: {\n    FLV: 3100,\n    HLS: 3200,\n    MP4: 3300,\n    FMP4: 3400,\n    SIDX: 3410\n  },\n  [ERR.REMUX]: {\n    FMP4: 4100,\n    MP4: 4200\n  },\n  [ERR.MEDIA]: {\n    MEDIA_ERR_ABORTED: 5101,\n    MEDIA_ERR_NETWORK: 5102,\n    MEDIA_ERR_DECODE: 5103,\n    MEDIA_ERR_SRC_NOT_SUPPORTED: 5104,\n    MEDIA_ERR_CODEC_NOT_SUPPORTED: 5105,\n    MEDIA_ERR_URL_EMPTY: 5106,\n    MSE_ADD_SB: 5200,\n    MSE_APPEND_BUFFER: 5201,\n    MSE_OTHER: 5202,\n    MSE_FULL: 5203,\n    MSE_HIJACK:5204,\n    EME_HIJACK:5301\n  },\n  [ERR.DRM]:{\n    LICENSE:7100,\n    CUSTOM_LICENSE:7200\n  },\n  [ERR.OTHER]: 8000,\n  [ERR.RUNTIME]:{\n    NO_CANPLAY_ERROR:9001,\n    BUFFERBREAK_ERROR:9002,\n    WAITING_TIMEOUT_ERROR:9003\n  }\n}\n\n\n\nexport class StreamingError extends Error {\n  constructor (type, subType, origin, payload, msg) {\n    super(msg || origin?.message)\n    this.errorType = type === ERR.NETWORK_TIMEOUT ? ERR.NETWORK : type\n    this.originError = origin\n    this.ext = payload\n    this.errorCode = ERR_CODE[type][subType] || ERR_CODE[type]\n    this.errorMessage = this.message\n    if (!this.errorCode) {\n      this.errorType = ERR.OTHER\n      this.errorCode = ERR_CODE[this.errorType]\n    }\n  }\n\n  static create (type, subType, origin, payload, msg) {\n    if (type instanceof StreamingError) {\n      return type\n    } else if (type instanceof Error) {\n      origin = type\n      type = ''\n    }\n\n    if (!type) type = ERR.OTHER\n\n    return new StreamingError(type, subType, origin, payload, msg)\n  }\n\n  static network (error) {\n    return new StreamingError(\n      error?.isTimeout ? ERR.NETWORK_TIMEOUT : ERR.NETWORK,\n      null,\n      error instanceof Error ? error : null,\n      {\n        url: error?.url,\n        response: error?.response,\n        httpCode: error?.response?.status\n      }\n    )\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n","\nexport const LogCacheLevel = {\n  'DEBUG': 1,\n  'LOG': 2,\n  'WARN': 3,\n  'ERROR': 4\n}\nconst LOG_MAX_SIZE = 200 * 1024\nconst SIMPLE_TYPE = ['Boolean', 'Number' ,'String', 'Undefined','Null', 'Date','Object']\nexport class Logger {\n  constructor (name,config) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    this.logCacheLevel = config?.logCacheLevel || 3\n    this.logMaxSize = config?.logMaxSize || LOG_MAX_SIZE\n    this.logSize = 0\n    this.logTextArray = []\n  }\n\n  debug (...args) {\n    this.logCache(LogCacheLevel.DEBUG,...args)\n    if (Logger.disabled) return\n    console.debug(this._prefix, nowTime(), ...args)\n  }\n\n  log (...args) {\n    this.logCache(LogCacheLevel.LOG,...args)\n    if (Logger.disabled) return\n    console.log(this._prefix, nowTime(), ...args)\n  }\n\n  warn (...args) {\n    this.logCache(LogCacheLevel.WARN,...args)\n    if (Logger.disabled) return\n    console.warn(this._prefix, nowTime(), ...args)\n  }\n\n  error (...args) {\n    this.logCache(LogCacheLevel.ERROR,...args)\n    if (Logger.disabled) return\n    console.error(this._prefix, nowTime(), ...args)\n  }\n\n  logCache (logCacheLevel, ...logText) {\n    if (logCacheLevel < this.logCacheLevel) return\n    let text = ''\n    try {\n      const finLogText = logText.map( item => logable(item))\n      text = this._prefix + nowTime() + (JSON.stringify(finLogText))\n    } catch (e) {\n      return\n    }\n    if (logCacheLevel >= this.logCacheLevel) {\n      this.logSize += text.length\n      this.logTextArray.push(text)\n    }\n    if (this.logSize > this.logMaxSize) {\n      const delLog = this.logTextArray.shift()\n      this.logSize -= delLog.length\n    }\n  }\n\n  getLogCache () {\n    const logText = this.logTextArray.join('\\n')\n    this.reset()\n    return logText\n  }\n\n  reset () {\n    this.logTextArray = []\n    this.logSize = 0\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n\n  setLogLevel (val) {\n    this.logCacheLevel = val\n  }\n}\nfunction nowTime () {\n  return new Date().toLocaleString()\n}\n\nfunction reduceDepth (val) {\n  if (typeof val !== 'object') {\n    return val\n  }\n  const objType = Object.prototype.toString.call(val).slice(8, -1)\n  switch (objType) {\n    case 'Array':\n    case 'Uint8Array':\n    case 'ArrayBuffer':\n\n      return objType + '[' + val.length + ']'\n    case 'Object':\n      return '{}'\n    default:\n      return objType\n  }\n}\n\nfunction logable (obj, maxDepth, depth) {\n  if (!depth) depth = 1\n  if (!maxDepth) maxDepth = 2\n  const result = {}\n\n  if (!obj || typeof obj !== 'object') {\n    return obj\n  }\n\n  const objType = Object.prototype.toString.call(obj).slice(8, -1)\n  if (!SIMPLE_TYPE.includes(objType)) {\n    return objType\n  }\n\n  if (depth > maxDepth) {\n    return undefined\n  }\n\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (depth === maxDepth) {\n        result[key] = reduceDepth(obj[key])\n      } else if (typeof obj[key] === 'object') {\n        result[key] = logable(obj[key], maxDepth, depth + 1)\n      } else {\n        result[key] = obj[key]\n      }\n    }\n  }\n  return result\n}\n\n","/* eslint-disable no-undef */\nimport { createPublicPromise, nowTime } from './utils'\nimport { Buffer } from './buffer'\nimport { StreamingError, ERR } from './error'\nimport { isBrowser } from './env'\nimport { Logger } from './logger'\n\nfunction getMediaSource () {\n  try {\n    return isBrowser ? window.MediaSource : null\n  } catch (e) {}\n}\n\nconst MediaSource = getMediaSource()\n\n/** @enum {string} */\nexport const MSEErrorType = {\n  UPDATE_ERROR: 'updateError'\n}\n\nconst OP_NAME = {\n  APPEND: 'appendBuffer',\n  REMOVE: 'removeBuffer',\n  UPDATE_DURATION:'updateDuration'\n}\n\nexport class MSEError extends Error {\n  /**\n   * @param {MSEErrorType} type\n   * @param {any} [msg]\n   */\n  constructor (type, msg) {\n    super(msg || type)\n    this.type = type\n    this.msg = msg\n  }\n}\n\nexport class MSE {\n  /** @type { HTMLMediaElement | null } */\n  media = null\n\n  /** @type { MediaSource | null } */\n  mediaSource = null\n\n  _openPromise = createPublicPromise()\n\n  _queue = Object.create(null)\n\n  _sourceBuffer = Object.create(null)\n\n  static VIDEO = 'video'\n\n  static AUDIO = 'audio'\n\n  _mseFullFlag = {}\n\n  _st = 0\n\n  _opst = 0\n\n  _logger = null\n\n  _config = null\n  _url = null\n\n\n  static getDefaultConfig () {\n    return {\n      openLog: false\n    }\n  }\n\n  /**\n   * @param {HTMLMediaElement} [media]\n   */\n  constructor (media, config) {\n    this._config = Object.assign(MSE.getDefaultConfig(), config)\n    if (media) this.bindMedia(media)\n    this._logger = new Logger('MSE')\n    if (this._config.openLog) {\n      Logger.enable()\n    }\n  }\n\n  get isOpened () {\n    return this.mediaSource?.readyState === 'open'\n  }\n\n  get url () {\n    return this._url\n  }\n\n  get duration () {\n    return this.mediaSource?.duration || -1\n  }\n\n  get isEnded () {\n    return this.mediaSource ? this.mediaSource.readyState === 'ended' : false\n  }\n\n  isFull (type) {\n    return type ? this._mseFullFlag[type] : this._mseFullFlag[MSE.VIDEO]\n  }\n\n  /**\n   * @param { number } duration\n   * @return { Promise }\n   */\n  updateDuration (duration) {\n    const isReduceDuration = this.mediaSource && this.mediaSource.duration > duration\n    if (this.mediaSource && this.mediaSource.duration > duration) {\n      let bufferEnd = 0\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          bufferEnd = Math.max(this.bufferEnd(k) || 0, bufferEnd)\n        } catch (error) {\n          // ignore\n        }\n      })\n      if (duration < bufferEnd) {\n        // 设置值比bufferEnd值小，会导致异常\n        return Promise.resolve()\n      }\n    }\n\n    return this._enqueueBlockingOp(() => {\n      if (this.isEnded) {\n        this._logger.debug('[debug mse] setDuration ended')\n        return\n      }\n      if (this.mediaSource) {\n        this.mediaSource.duration = duration\n        this._logger.debug('[debug mse] setDuration')\n      }\n    }, OP_NAME.UPDATE_DURATION, {isReduceDuration})\n  }\n\n  /** @return { Promise } */\n  open () {\n    if (this._openPromise.used && !this.isOpened && this.mediaSource) {\n      const ms = this.mediaSource\n      const onOpen = () => {\n        const costtime = nowTime() - this._st\n        this._logger.debug('MSE OPEN', costtime)\n        ms.removeEventListener('sourceopen', onOpen)\n        this._openPromise.resolve({costtime})\n      }\n      ms.addEventListener('sourceopen', onOpen)\n      this._openPromise = createPublicPromise()\n    }\n\n    return this._openPromise\n  }\n\n  /**\n   * @param { HTMLMediaElement } media\n   * @return { Promise }\n   */\n  async bindMedia (media) {\n    if (this.mediaSource || this.media) await this.unbindMedia()\n    if (!media || !MediaSource) throw new Error('Param media or MediaSource does not exist')\n    this.media = media\n    const ms = this.mediaSource = new MediaSource()\n    this._st = nowTime()\n\n    const onOpen = () => {\n      const costtime = nowTime() - this._st\n      this._logger.debug('MSE OPEN')\n      ms.removeEventListener('sourceopen', onOpen)\n      URL.revokeObjectURL(media.src)\n      this._openPromise.resolve({costtime})\n    }\n    ms.addEventListener('sourceopen', onOpen)\n    this._url = URL.createObjectURL(ms)\n    media.src = this._url\n    return this._openPromise\n  }\n\n  /** @return { Promise } */\n  async unbindMedia () {\n    if (!this._openPromise.used) this._openPromise.resolve()\n    const ms = this.mediaSource\n\n    if (ms) {\n      Object.keys(this._queue).forEach((t) => {\n        const queue = this._queue[t]\n        if (queue) {\n          queue.forEach(x => x.promise?.resolve?.())\n        }\n      })\n\n      const hasMetadata = !!this.media && this.media.readyState >= 1\n      const mseOpen = ms.readyState === 'open'\n\n      if (hasMetadata && mseOpen) {\n        try {\n          ms.endOfStream()\n        } catch (error) {\n          // ignore\n        }\n      }\n\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          ms.removeSourceBuffer(this._sourceBuffer[k])\n        } catch (error) {\n          // ignore\n        }\n      })\n    }\n\n    if (this.media) {\n      this.media.removeAttribute('src')\n      try {\n        this.media.load()\n      } catch (error) {\n        // ignore\n      }\n      this.media = null\n    }\n\n    this.mediaSource = null\n    this._openPromise = createPublicPromise()\n    this._queue = Object.create(null)\n    this._sourceBuffer = Object.create(null)\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   */\n  createSource (type, mimeType) {\n    if (this._sourceBuffer[type] || !this.mediaSource) return\n    let sb\n    try {\n      sb = this._sourceBuffer[type] = this.mediaSource.addSourceBuffer(mimeType)\n    } catch (error) {\n      throw new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_ADD_SB, error)\n    }\n    sb.mimeType = mimeType\n    sb.addEventListener('updateend', this._onSBUpdateEnd.bind(this, type))\n    sb.addEventListener('error', this._onSBUpdateError.bind(this, type))\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  changeType (type, mimeType) {\n    const sb = this._sourceBuffer[type]\n    if (!this.mediaSource || !sb || sb.mimeType === mimeType) return Promise.resolve()\n\n    if (typeof sb.changeType !== 'function') return Promise.reject()\n\n    return this._enqueueOp(type, () => {\n      sb.changeType(mimeType)\n      sb.mimeType = mimeType\n      this._onSBUpdateEnd(type)\n    }, 'changeType', {mimeType})\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  createOrChangeSource (type, mimeType) {\n    this.createSource(type, mimeType)\n    return this.changeType(type, mimeType)\n  }\n\n  /**\n   * @param { string } type\n   * @param { BufferSource } buffer\n   * @return { Promise }\n   */\n  append (type, buffer, context) {\n    if (!buffer || !buffer.byteLength) {\n      return Promise.resolve()\n    }\n\n    if (!this._sourceBuffer[type]) return Promise.resolve()\n\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      this._logger.debug('MSE APPEND START', context)\n      this._opst = nowTime()\n      this._sourceBuffer[type]?.appendBuffer(buffer)\n    }, OP_NAME.APPEND, context)\n\n  }\n\n  /**\n   * @param { string } type\n   * @param { number } startTime\n   * @param { number } endTime\n   * @return { Promise }\n   */\n  remove (type, startTime, endTime, context) {\n    // if (Object.keys(this._sourceBuffer).length === 1) return Promise.resolve()\n    let isInsertHead = false\n    if (this._mseFullFlag[type]) {\n      isInsertHead = true\n    }\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      const sb = this._sourceBuffer[type]\n      if (startTime >= endTime || !sb) {\n        this._onSBUpdateEnd(type)\n        return\n      }\n      this._opst = nowTime()\n      this._logger.debug('MSE REMOVE START', type, startTime, endTime, context)\n      sb.remove(startTime, endTime)\n    }, OP_NAME.REMOVE, context, isInsertHead)\n  }\n\n  clearBuffer (startTime, endTime) {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      p = this.remove(k, startTime, endTime)\n    })\n    return p || Promise.resolve()\n  }\n\n  clearAllBuffer () {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      const sb = this._sourceBuffer[k]\n      p = this.remove(k, 0, Buffer.end(Buffer.get(sb)))\n    })\n    return p\n  }\n\n  clearOpQueues (type, allClear) {\n    this._logger.debug('MSE clearOpQueue START')\n    const queue = this._queue[type]\n    if (allClear && queue) {\n      this._queue[type] = []\n      return\n    }\n    if (!queue || !queue[type] || queue.length < 5) return\n    const initOpque = []\n    queue.forEach(op => {\n      if (op.context && op.context.isinit) {\n        initOpque.push(op)\n      }\n    })\n    this._queue[type] = queue.slice(0, 2)\n    initOpque.length > 0 && this._queue[type].push(...initOpque)\n  }\n\n  /**\n   * @param {EndOfStreamError} [reason]\n   * @returns {Promise}\n   */\n  endOfStream (reason) {\n    if (!this.mediaSource || this.mediaSource.readyState !== 'open') return Promise.resolve()\n    return this._enqueueBlockingOp(() => {\n      const ms = this.mediaSource\n      if (!ms || ms.readyState !== 'open') return\n      this._logger.debug('MSE endOfStream START')\n      if (reason) {\n        ms.endOfStream(reason)\n      } else {\n        ms.endOfStream()\n      }\n    }, 'endOfStream')\n  }\n\n  setLiveSeekableRange (start, end) {\n    const ms = this.mediaSource\n    if (start < 0 || end < start || !ms?.setLiveSeekableRange || ms.readyState !== 'open') return\n    ms.setLiveSeekableRange(start, end)\n  }\n\n  /**\n   * @param {string} type\n   * @returns {?SourceBuffer}\n   */\n  getSourceBuffer (type) {\n    return this._sourceBuffer[type]\n  }\n\n  /**\n   * @param { string } type\n   * @return { TimeRanges | void }\n   */\n  buffered (type) {\n    return Buffer.get(this._sourceBuffer[type])\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferStart (type) {\n    return Buffer.start(this.buffered(type))\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferEnd (type) {\n    return Buffer.end(this.buffered(type))\n  }\n\n  _enqueueOp (type, exec, opName, context, isInsertHead) {\n    if (!this.mediaSource) return Promise.resolve()\n    const queue = this._queue[type] = this._queue[type] || []\n    const op = {\n      exec,\n      promise: createPublicPromise(),\n      opName,\n      context\n    }\n\n    if (isInsertHead) {\n      queue.splice(0, 0, op)\n      this._mseFullFlag[type] = false\n      this._startQueue(type)\n    } else {\n      queue.push(op)\n    }\n\n    if (this.isOpened || this.isEnded) {\n      if (queue.length === 1) {\n        this._startQueue(type)\n      }\n    } else {\n      this._openPromise.then(() => {\n        if (queue.length === 1) {\n          this._startQueue(type)\n        }\n      })\n    }\n\n\n    return op.promise\n  }\n\n  async _enqueueBlockingOp (exec, opName, context) {\n    if (!this.mediaSource) return Promise.resolve()\n    const types = Object.keys(this._sourceBuffer)\n    if (!types.length) {\n      return exec()\n    }\n\n    const waiters = []\n    types.forEach(t => {\n      const queue = this._queue[t]\n      const prom = createPublicPromise()\n      waiters.push(prom)\n      queue.push({exec: () => {\n        prom.resolve()}, promise: prom, opName, context})\n      if (queue.length === 1) {\n        this._startQueue(t)\n      }\n    })\n\n    return Promise.all(waiters).then(() => {\n      try {\n        return exec()\n      } finally {\n        types.forEach(t => {\n          const queue = this._queue[t]\n          const sb = this._sourceBuffer[t]\n          queue?.shift()\n          if (!sb || !sb.updating) {\n            this._startQueue(t)\n          }\n        })\n      }\n    })\n  }\n\n  _startQueue (type) {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op && !this._mseFullFlag[type]) {\n        try {\n          op.exec()\n        } catch (error) {\n          if (error && error.message && error.message.indexOf('SourceBuffer is full') >= 0) {\n            this._mseFullFlag[type] = true\n            this._logger.error('[MSE error],  context,', op.context, ' ,name,', op.opName, ',err,SourceBuffer is full')\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_FULL, error))\n          } else {\n            this._logger.error(error)\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_OTHER, error))\n            queue.shift()\n            this._startQueue(type)\n          }\n        }\n      }\n    }\n  }\n\n  _onSBUpdateEnd = (type) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (!(op?.opName === OP_NAME.UPDATE_DURATION)) {\n        queue.shift()\n      }\n      if (op) {\n        const costtime = nowTime() - this._opst\n        this._logger.debug('UpdateEnd', op.opName, costtime, op.context)\n        op.promise.resolve({name: op.opName, context: op.context, costtime})\n        this._startQueue(type)\n      }\n    }\n  }\n\n  _onSBUpdateError = (type, event) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op) {\n        this._logger.error('UpdateError', type, op.opName, op.context)\n        op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_APPEND_BUFFER, event))\n        // Do not shift from queue, 'updateend' event will fire next\n      }\n    }\n  }\n\n  /**\n   * @param {string} [mime='video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"']\n   * @returns {boolean}\n   */\n  static isSupported (mime = 'video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"') {\n    if (!MediaSource) return false\n    try {\n      return MediaSource.isTypeSupported(mime)\n    } catch (error) {\n      this._logger.error(mime, error)\n      return false\n    }\n  }\n\n  setTimeoffset (type, timestampOffset, context) {\n    return this._enqueueOp(type, () => {\n      if (timestampOffset < 0) {\n        timestampOffset += 0.001\n      }\n      this._sourceBuffer[type].timestampOffset = timestampOffset\n      this._onSBUpdateEnd(type)\n    }, 'setTimeoffset', context)\n  }\n\n  /** *重置decode时间戳 */\n  abort (type, context) {\n    if (!this.isOpened) {\n      return Promise.resolve()\n    }\n    return this._enqueueOp(type, () => {\n      this._sourceBuffer[type].abort()\n      this._onSBUpdateEnd(type)\n    }, 'abort', context)\n  }\n}\n","export const LoaderType = {\n  FETCH: 'fetch',\n  XHR: 'xhr'\n}\n\nexport const ResponseType = {\n  ARRAY_BUFFER: 'arraybuffer',\n  TEXT: 'text',\n  JSON: 'json'\n}\n","import { LoaderType } from './types'\n\nexport class NetError extends Error {\n  retryCount = 0\n  isTimeout = false\n  loaderType = LoaderType.FETCH\n  startTime = 0\n  endTime = 0\n  options = {}\n\n  constructor (url, request, response, msg) {\n    super(msg)\n    this.url = url\n    this.request = request\n    this.response = response\n  }\n}\n","const toString = Object.prototype.toString\n\nexport function isObject (a) {\n  return a !== null && typeof a === 'object'\n}\n\nexport function isPlainObject (val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(val)\n  return prototype === null || prototype === Object.prototype\n}\n\nexport function isDate (a) {\n  return toString.call(a) === '[object Date]'\n}\n\nexport function isNumber (n) {\n  return typeof n === 'number' && !Number.isNaN(n)\n}\n","import { isDate, isObject } from '../is'\n\nexport function getRangeValue (value) {\n  if (!value || value[0] === null || value[0] === undefined || (value[0] === 0 && (value[1] === null || value[1] === undefined))) {\n    return\n  }\n  let ret = 'bytes=' + value[0] + '-'\n  if (value[1]) ret += value[1]\n  return ret\n}\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\nexport function setUrlParams (url, params) {\n  if (!url) return\n  if (!params) return url\n  let v\n  const str = Object.keys(params).map(k => {\n    v = params[k]\n    if (v === null || v === undefined) return\n    if (Array.isArray(v)) {\n      k = k + '[]'\n    } else {\n      v = [v]\n    }\n\n    return v.map(x => {\n      if (isDate(x)) {\n        x = x.toISOString()\n      } else if (isObject(x)) {\n        x = JSON.stringify(x)\n      }\n      return `${encode(k)}=${encode(x)}`\n    }).join('&')\n  }).filter(Boolean).join('&')\n\n  if (str) {\n    const hashIndex = url.indexOf('#')\n    if (hashIndex !== -1) {\n      url = url.slice(0, hashIndex)\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + str\n  }\n\n  return url\n}\n\nexport function createResponse (\n  data,\n  done,\n  response,\n  contentLength,\n  age,\n  startTime,\n  firstByteTime,\n  index,\n  range,\n  vid,\n  priOptions\n) {\n  age = (age !== null && age !== undefined) ? parseFloat(age) : null\n  contentLength = parseInt(contentLength || '0', 10)\n  if (Number.isNaN(contentLength)) contentLength = 0\n  const options = { range, vid, index, contentLength, age, startTime, firstByteTime, endTime: Date.now(), priOptions }\n  return { data, done, options, response }\n}\n\nexport function calculateSpeed (byteLen, millisec) {\n  return Math.round(byteLen * 8 * 1000 / millisec / 1024)\n}\n","export const EVENT = {\n  ERROR: 'error',\n\n  TTFB: 'core.ttfb',\n  LOAD_START: 'core.loadstart',\n  LOAD_RESPONSE_HEADERS: 'core.loadresponseheaders',\n  LOAD_COMPLETE: 'core.loadcomplete',\n  LOAD_RETRY: 'core.loadretry',\n  SOURCEBUFFER_CREATED: 'core.sourcebuffercreated',\n  ANALYZE_DURATION_EXCEEDED: 'core.analyzedurationexceeded',\n  REMOVE_BUFFER: 'core.removebuffer',\n  BUFFEREOS: 'core.buffereos',\n  KEYFRAME: 'core.keyframe',\n  METADATA_PARSED: 'core.metadataparsed',\n  SEI: 'core.sei',\n  SEI_IN_TIME: 'core.seiintime',\n  FLV_SCRIPT_DATA: 'core.flvscriptdata',\n  LOWDECODE: 'core.lowdecode',\n  SWITCH_URL_SUCCESS: 'core.switchurlsuccess',\n  SWITCH_URL_FAILED: 'core.switchurlfailed',\n  SPEED: 'core.speed',\n  HLS_MANIFEST_LOADED: 'core.hlsmanifestloaded',\n  HLS_LEVEL_LOADED: 'core.hlslevelloaded',\n  DEMUXED_TRACK:'core.demuxedtrack',\n\n  STREAM_EXCEPTION: 'core.streamexception',\n  LARGE_AV_FIRST_FRAME_GAP_DETECT: 'LARGE_AV_FIRST_FRAME_GAP_DETECT',\n  LARGE_VIDEO_DTS_GAP_DETECT: 'LARGE_VIDEO_DTS_GAP_DETECT',\n  LARGE_AUDIO_DTS_GAP_DETECT: 'LARGE_AUDIO_DTS_GAP_DETECT',\n  AUDIO_GAP_DETECT: 'AUDIO_GAP_DETECT',\n  AUDIO_OVERLAP_DETECT: 'AUDIO_OVERLAP_DETECT',\n  MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT: 'MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT',\n  REAL_TIME_SPEED: 'real_time_speed'\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nconst CACHESIZE = 2 * 1024 * 1024\nexport class FetchLoader extends EventEmitter {\n  _abortController = null\n  _timeoutTimer = null\n  _reader = null\n  _response = null\n  _aborted = false\n  _index = -1\n  _range = null\n  _receivedLength = 0\n  _running = false\n  _logger = null\n  _vid = ''\n  _onProcessMinLen = 0\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n  constructor () {\n    super()\n  }\n\n  load ({\n    url,\n    vid,\n    timeout, // ms\n    responseType,\n    onProgress,\n    index,\n    onTimeout,\n    onCancel,\n    range,\n    transformResponse,\n    request,\n    params,\n    logger,\n\n    method,\n    headers,\n    body,\n    mode,\n    credentials,\n    cache,\n    redirect,\n    referrer,\n    referrerPolicy,\n    onProcessMinLen,\n    priOptions\n  }) {\n    this._logger = logger\n    this._aborted = false\n    this._onProcessMinLen = onProcessMinLen\n    this._onCancel = onCancel\n    this._abortController = typeof AbortController !== 'undefined' && new AbortController()\n    this._running = true\n    this._index = index\n    this._range = range || [0, 0]\n    this._vid = vid || url\n    this._priOptions = priOptions || {}\n    const init = {\n      method,\n      headers,\n      body,\n      mode,\n      credentials,\n      cache,\n      redirect,\n      referrer,\n      referrerPolicy,\n      signal: this._abortController?.signal\n    }\n\n    let isTimeout = false\n    clearTimeout(this._timeoutTimer)\n\n    url = setUrlParams(url, params)\n\n    const rangeValue = getRangeValue(range)\n    if (rangeValue) {\n      if (request) {\n        headers = request.headers\n      } else {\n        headers = init.headers = init.headers || (Headers ? new Headers() : {})\n      }\n      if (Headers && headers instanceof Headers) {\n        headers.append('Range', rangeValue)\n      } else {\n        headers.Range = rangeValue\n      }\n    }\n\n    if (timeout) {\n      this._timeoutTimer = setTimeout(() => {\n        isTimeout = true\n        this.cancel()\n        if (onTimeout) {\n          const error = new NetError(url, init, null, 'timeout')\n          error.isTimeout = true\n          onTimeout(error, {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n      }, timeout)\n    }\n\n    const startTime = Date.now()\n    this._logger.debug('[fetch load start], index,', index, ',range,', range)\n    return new Promise((resolve, reject) => {\n      fetch(request || url, request ? undefined : init).then(async (response) => {\n        clearTimeout(this._timeoutTimer)\n        this._response = response\n        if (this._aborted || !this._running) return\n        if (transformResponse) {\n          response = transformResponse(response, url) || response\n        }\n        if (!response.ok) {\n          throw new NetError(url, init, response, 'bad network response')\n        }\n\n        const firstByteTime = Date.now()\n        let data\n        if (responseType === ResponseType.TEXT) {\n          data = await response.text()\n          this._running = false\n        } else if (responseType === ResponseType.JSON) {\n          data = await response.json()\n          this._running = false\n        } else {\n          if (onProgress) {\n            this.resolve = resolve\n            this.reject = reject\n            this._loadChunk(response, onProgress, startTime, firstByteTime)\n            return\n          } else {\n            data = await response.arrayBuffer()\n            data = new Uint8Array(data)\n            this._running = false\n            const costTime = Date.now() - startTime\n            const speed = calculateSpeed(data.byteLength, costTime)\n            this.emit(EVENT.REAL_TIME_SPEED, {speed,len: data.byteLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n          }\n        }\n        this._logger.debug('[fetch load end], index,', index, ',range,', range)\n        resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          startTime,\n          firstByteTime,\n          index,\n          range,\n          this._vid,\n          this._priOptions\n        ))\n      }).catch((error) => {\n        clearTimeout(this._timeoutTimer)\n        this._running = false\n        if (this._aborted && !isTimeout) return\n        error = error instanceof NetError ? error : new NetError(url, init, null, error?.message)\n        error.startTime = startTime\n        error.endTime = Date.now()\n        error.isTimeout = isTimeout\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        reject(error)\n      })\n    })\n  }\n\n  async cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._running = false\n    if (this._response) {\n      try {\n        // await this._response.body.cancel()\n        if (this._reader) {\n          await this._reader.cancel()\n        }\n      } catch (error) {\n        // ignore\n      }\n      this._response = this._reader = null\n    }\n\n    if (this._abortController) {\n      try {\n        this._abortController.abort()\n      } catch (error) {\n        // ignore\n      }\n      this._abortController = null\n    }\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n  }\n\n  _loadChunk (response, onProgress, st, firstByteTime) {\n    if (!response.body || !response.body.getReader) {\n      this._running = false\n      const err = new NetError(response.url, '', response, 'onProgress of bad response.body.getReader')\n      err.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      this.reject(err)\n      return\n    }\n    if (this._onProcessMinLen > 0) {\n      this._cache = new Uint8Array(CACHESIZE)\n      this._writeIdx = 0\n    }\n    const reader = this._reader = response.body.getReader()\n    let data\n\n    let startTime\n    let endTime\n    const pump = async () => {\n      startTime = Date.now()\n      try {\n        data = await reader.read()\n        endTime = Date.now()\n      } catch (e) {\n        // request aborted\n        endTime = Date.now()\n        if (!this._aborted) {\n          this._running = false\n          e.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n          this.reject(e)\n        }\n        return\n      }\n      const startRange = this._range?.length > 0 ? this._range[0] : 0\n      const startByte = startRange + this._receivedLength\n      if (this._aborted) {\n        this._running = false\n        onProgress(undefined, false, { range: [startByte, startByte], vid: this._vid, index: this._index, startTime, endTime, st, firstByteTime, priOptions:this._priOptions }, response)\n        return\n      }\n      const curLen = data.value ? data.value.byteLength : 0\n      this._receivedLength += curLen\n      this._logger.debug('【fetchLoader,onProgress call】,task,', this._range, ', start,', startByte, ', end,', startRange + this._receivedLength, ', done,', data.done)\n      let retData\n      if (this._onProcessMinLen > 0) {\n        if (this._writeIdx + curLen >= this._onProcessMinLen || data.done) {\n          retData = new Uint8Array(this._writeIdx + curLen)\n          retData.set(this._cache.slice(0, this._writeIdx), 0)\n          curLen > 0 && retData.set(data.value, this._writeIdx)\n          this._writeIdx = 0\n          this._logger.debug('【fetchLoader,onProgress enough】,done,', data.done, ',len,', retData.byteLength, ', writeIdx,', this._writeIdx)\n        } else {\n          if (curLen > 0 && this._writeIdx + curLen < CACHESIZE) {\n            this._cache.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            this._logger.debug('【fetchLoader,onProgress cache】,len,', curLen, ', writeIdx,', this._writeIdx)\n          } else if (curLen > 0) {\n            const temp = new Uint8Array(this._writeIdx + curLen + 2048)\n            this._logger.debug('【fetchLoader,onProgress extra start】,size,', this._writeIdx + curLen + 2048, ', datalen,', curLen, ', writeIdx,', this._writeIdx)\n            temp.set(this._cache.slice(0, this._writeIdx), 0)\n            curLen > 0 && temp.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            delete this._cache\n            this._cache = temp\n            this._logger.debug('【fetchLoader,onProgress extra end】,len,', curLen, ', writeIdx,', this._writeIdx)\n          }\n        }\n      } else {\n        retData = data.value\n      }\n      if (retData && retData.byteLength > 0 || data.done) {\n        onProgress(retData, data.done, {\n          range: [this._range[0] + this._receivedLength - (retData ? retData.byteLength : 0), this._range[0] + this._receivedLength],\n          vid: this._vid,\n          index: this._index,\n          startTime,\n          endTime,\n          st,\n          firstByteTime,\n          priOptions:this._priOptions\n        }, response)\n      }\n      if (!data.done) {\n        pump()\n      } else {\n        const costTime = Date.now() - st\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed,len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n        this._running = false\n        this._logger.debug('[fetchLoader onProgress end],task,', this._range, ',done,', data.done)\n        this.resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          st,\n          firstByteTime,\n          this._index,\n          this._range,\n          this._vid,\n          this._priOptions\n        ))\n      }\n    }\n    pump()\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  static isSupported () {\n    return !!(typeof fetch !== 'undefined')\n  }\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nexport class XhrLoader extends EventEmitter {\n\n  _xhr = null\n  _aborted = false\n  _timeoutTimer = null\n  _range = null\n  _receivedLength = 0\n  _url = null\n  _onProgress = null\n  _index = -1\n  _headers = null\n  // _chunkSizeKBList = [\n  //   128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\n  // ]\n\n  _currentChunkSizeKB = 384\n  _timeout = null\n  _xhr = null\n  _withCredentials = null\n  _startTime = -1\n  // _speedSampler = new SpeedSampler()\n  _loadCompleteResolve = null\n  _loadCompleteReject = null\n  _runing = false\n  _logger = false\n  _vid = ''\n  _responseType\n  _credentials\n  _method\n  _transformResponse\n  _firstRtt\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n\n  constructor () {\n    super()\n  }\n\n  load (req) {\n    clearTimeout(this._timeoutTimer)\n    this._logger = req.logger\n    this._range = req.range\n    this._onProgress = req.onProgress\n    this._index = req.index\n    this._headers = req.headers\n    this._withCredentials = req.credentials === 'include' || req.credentials === 'same-origin'\n    this._body = req.body || null\n    req.method && (this._method = req.method)\n    this._timeout = req.timeout || null\n    this._runing = true\n    this._vid = req.vid || req.url\n    this._responseType = req.responseType\n    this._firstRtt = -1\n    this._onTimeout = req.onTimeout\n    this._onCancel = req.onCancel\n    this._request = req.request\n    this._priOptions = req.priOptions || {}\n    this._logger.debug('【xhrLoader task】, range', this._range)\n\n    this._url = setUrlParams(req.url, req.params)\n\n    const startTime = Date.now()\n    return new Promise((resolve, reject) => {\n      this._loadCompleteResolve = resolve\n      this._loadCompleteReject = reject\n      this._startLoad()\n    }).catch((error) => {\n      clearTimeout(this._timeoutTimer)\n      this._runing = false\n      if (this._aborted) return\n      error = error instanceof NetError ? error : new NetError(this._url, this._request)\n      error.startTime = startTime\n      error.endTime = Date.now()\n      error.options = {index: this._index, vid: this._vid, priOptions: this._priOptions}\n      throw error\n    })\n  }\n\n  _startLoad () {\n    let range = null\n    if (this._responseType === ResponseType.ARRAY_BUFFER && this._range && this._range.length > 1) {\n      if (this._onProgress) {\n        this._firstRtt = -1\n        const chunkSize = this._currentChunkSizeKB * 1024\n        const from = this._range[0] + this._receivedLength\n        let to = this._range[1]\n        if (chunkSize < this._range[1] - from) {\n          to = from + chunkSize\n        }\n        range = [from, to]\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', SubRange, ', range)\n      } else {\n        range = this._range\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', allRange, ', range)\n      }\n    }\n    this._internalOpen(range)\n  }\n\n  _internalOpen (range) {\n    try {\n      this._startTime = Date.now()\n      const xhr = this._xhr = new XMLHttpRequest()\n      xhr.open(this._method || 'GET', this._url, true)\n      xhr.responseType = this._responseType\n      this._timeout && (xhr.timeout = this._timeout)\n      xhr.withCredentials = this._withCredentials\n      xhr.onload = this._onLoad.bind(this)\n      xhr.onreadystatechange = this._onReadyStatechange.bind(this)\n      xhr.onerror = (errorEvent) => {\n        this._running = false\n        const error = new NetError(this._url, this._request, errorEvent?.currentTarget?.response, ('xhr.onerror.status:' + errorEvent?.currentTarget?.status + ',statusText,' + errorEvent?.currentTarget?.statusText))\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      xhr.ontimeout = (event) => {\n        this.cancel()\n        const error = new NetError(this._url, this._request, {status:408}, 'timeout')\n        if (this._onTimeout) {\n          error.isTimeout = true\n          this._onTimeout(error,{index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      const headers = this._headers || {}\n      const rangeValue = getRangeValue(range)\n      if (rangeValue) {\n        headers.Range = rangeValue\n      }\n      if (headers) {\n        Object.keys(headers).forEach(k => {\n          xhr.setRequestHeader(k, headers[k])\n        })\n      }\n      this._logger.debug('[xhr.send->] tast,', this._range, ',load sub range, ', range)\n      xhr.send(this._body)\n    } catch (e) {\n      e.options = {index: this._index, range, vid: this._vid, priOptions: this._priOptions}\n      this._loadCompleteReject(e)\n    }\n  }\n\n  _onReadyStatechange (e) {\n    const xhr = e.target\n    if (xhr.readyState === 2) {\n      this._firstRtt < 0 && (this._firstRtt = Date.now())\n    }\n  }\n\n  _onLoad (e) {\n    const status = e.target.status\n    if (status < 200 || status > 299) {\n      const error = new NetError(this._url, null, { ...e.target.response, status }, 'bad response,status:' + status)\n      error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      return this._loadCompleteReject(error)\n    }\n    let data = null\n    let done = false\n    let byteStart\n    const startRange = (this._range?.length > 0 ? this._range [0] : 0 )\n    if (this._responseType === ResponseType.ARRAY_BUFFER) {\n      const chunk = new Uint8Array(e.target.response)\n      byteStart = startRange + this._receivedLength\n      if (chunk && chunk.byteLength > 0) {\n        this._receivedLength += chunk.byteLength\n        const costTime = Date.now() - this._startTime\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed, len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: [byteStart, startRange + this._receivedLength], priOptions: this._priOptions})\n      }\n      data = chunk\n      if (this._range?.length > 1 && this._range[1] && this._receivedLength < this._range[1] - this._range[0]) {\n        done = false\n      } else {\n        done = true\n      }\n      this._logger.debug('[xhr load done->], tast :', this._range, ', start', byteStart, 'end ', startRange + this._receivedLength, ',dataLen,', (chunk ? chunk.byteLength : 0), ',receivedLength', this._receivedLength, ',index,', this._index, ', done,', done)\n    } else {\n      done = true\n      data = e.target.response\n    }\n    let response = {\n      ok: status >= 200 && status < 300,\n      status,\n      statusText: this._xhr.statusText,\n      url: this._xhr.responseURL,\n      headers: this._getHeaders(this._xhr),\n      body: this._xhr.response\n    }\n    if (this._transformResponse) {\n      response = this._transformResponse(response, this._url) || response\n    }\n    if (this._onProgress) {\n      this._onProgress(data, done, { index: this._index, vid: this._vid, range: [byteStart, startRange + this._receivedLength], startTime: this._startTime, endTime: Date.now(), priOptions: this._priOptions }, response)\n    }\n\n    if (!done) {\n      this._startLoad()\n    } else {\n      this._runing = false\n      this._loadCompleteResolve && this._loadCompleteResolve(createResponse(\n        this._onProgress ? null : data,\n        done,\n        response,\n        response.headers['content-length'],\n        response.headers.age,\n        this._startTime,\n        this._firstRtt,\n        this._index,\n        this._range,\n        this._vid,\n        this._priOptions\n      ))\n    }\n  }\n\n  cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._runing = false\n    super.removeAllListeners()\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n    if (this._xhr) {\n      return this._xhr.abort()\n    }\n  }\n\n  static isSupported () {\n    return typeof XMLHttpRequest !== 'undefined'\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  _getHeaders (xhr) {\n    const headerLines = xhr.getAllResponseHeaders().trim().split('\\r\\n')\n    const headers = {}\n    for (const header of headerLines) {\n      const parts = header.split(': ')\n      headers[parts[0].toLowerCase()] = parts.slice(1).join(': ')\n    }\n    return headers\n  }\n}\n","import { FetchLoader } from './fetch'\nimport { XhrLoader } from './xhr'\nimport { LoaderType } from './types'\nimport { createPublicPromise } from '../utils'\nimport { Logger } from '../logger'\n\nexport class Task {\n  constructor (type, config) {\n    this.promise = createPublicPromise()\n    this.alive = !!config.onProgress\n    !config.logger && (config.logger = new Logger('Loader'))\n    this._loaderType = type\n    this._loader = type === LoaderType.FETCH && typeof fetch !== 'undefined' ? new FetchLoader() : new XhrLoader()\n    this._config = config\n    this._retryCount = 0\n    this._retryTimer = null\n    this._canceled = false\n    this._retryCheckFunc = config.retryCheckFunc\n    this._logger = config.logger\n  }\n\n  exec () {\n    const {\n      retry,\n      retryDelay,\n      onRetryError,\n      transformError,\n      ...rest\n    } = this._config\n\n    const request = async () => {\n      try {\n        const response = await this._loader.load(rest)\n        this.promise.resolve(response)\n      } catch (e) {\n        this._loader.running = false\n        this._logger.debug('[task request catch err]', e)\n        if (this._canceled) return\n\n        e.loaderType = this._loaderType\n        e.retryCount = this._retryCount\n\n        let error = e\n        if (transformError) {\n          error = transformError(error) || error\n        }\n\n        if (onRetryError && this._retryCount > 0) onRetryError(error, this._retryCount, {index: rest.index, vid: rest.vid, range: rest.range, priOptions: rest.priOptions})\n\n        this._retryCount++\n        let isRetry = true\n        if (this._retryCheckFunc) {\n          isRetry = this._retryCheckFunc(e)\n        }\n        if (isRetry && this._retryCount <= retry) {\n          clearTimeout(this._retryTimer)\n          this._logger.debug('[task request setTimeout],retry', this._retryCount, ',retry range,', rest.range)\n          this._retryTimer = setTimeout(request, retryDelay)\n          return\n        }\n        this.promise.reject(error)\n      }\n    }\n\n    request()\n    return this.promise\n  }\n\n  async cancel () {\n    clearTimeout(this._retryTimer)\n    this._canceled = true\n    this._loader.running = false\n    return this._loader.cancel()\n  }\n\n  get running () {\n    return this._loader && this._loader.running\n  }\n\n  get loader () {\n    return this._loader\n  }\n}\n","export function isMediaPlaying (media) {\n  return media && !media.paused && !media.ended && media.playbackRate !== 0 && media.readyState !== 0\n}\n\nexport function getVideoPlaybackQuality (video) {\n  if (!video) return {}\n  if (typeof video.getVideoPlaybackQuality === 'function') {\n    const info = video.getVideoPlaybackQuality()\n    return {\n      droppedVideoFrames: info.droppedVideoFrames || info.corruptedVideoFrames,\n      totalVideoFrames: info.totalVideoFrames,\n      creationTime: info.creationTime\n    }\n  }\n\n  return {\n    droppedVideoFrames: video.webkitDroppedFrameCount,\n    totalVideoFrames: video.webkitDecodedFrameCount,\n    creationTime: performance.now()\n  }\n}\n\n/**\n * @param {Array.<Uint8Array>} arr\n * @returns\n */\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  if (arr.length < 2) return arr[0]\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport function sleep (t = 0) {\n  return new Promise((resolve) => setTimeout(resolve, t))\n}\n","import { FetchLoader } from './fetch'\nimport { LoaderType, ResponseType } from './types'\nimport { getConfig } from './config'\nimport { Task } from './task'\nimport { isPlainObject } from '../is'\nimport { sleep } from '../streaming-helper'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\n\nexport {\n  LoaderType,\n  ResponseType\n}\n\nexport class NetLoader extends EventEmitter {\n  type = LoaderType.FETCH\n\n  _queue = []\n\n  _alive = []\n\n  _currentTask = null\n\n  _finnalUrl = ''\n\n  _config\n\n  constructor (cfg) {\n    super(cfg)\n    this._config = getConfig(cfg)\n    if (\n      this._config.loaderType === LoaderType.XHR ||\n      !FetchLoader.isSupported()\n    ) {\n      this.type = LoaderType.XHR\n    }\n    this.log = cfg.logger\n  }\n\n  isFetch () {\n    return this.type === LoaderType.FETCH\n  }\n\n  static isFetchSupport () {\n    return FetchLoader.isSupported()\n  }\n\n  load (url, config = {}) {\n    if (typeof url === 'string' || !url) {\n      config.url = url || config.url || this._config.url\n    } else {\n      config = url\n    }\n\n    config = Object.assign({}, this._config, config)\n\n    if (config.params) config.params = Object.assign({}, config.params)\n    if (config.headers && isPlainObject(config.headers)) config.headers = Object.assign({}, config.headers)\n    if (config.body && isPlainObject(config.body)) config.body = Object.assign({}, config.body)\n\n    if (config.transformRequest) {\n      config = config.transformRequest(config) || config\n    }\n    config.logger = this.log\n\n    const task = new Task(this.type, config)\n    task.loader.on(EVENT.REAL_TIME_SPEED, (data) => {\n      this.emit(EVENT.REAL_TIME_SPEED, data)\n    })\n    this._queue.push(task)\n    if (this._queue.length === 1 && (!this._currentTask || !this._currentTask.running)) {\n      this._processTask()\n    }\n\n    return task.promise\n  }\n\n  async cancel () {\n    const cancels = this._queue.map(t => t.cancel()).concat(this._alive.map(t => t.cancel()))\n    if (this._currentTask) {\n      cancels.push(this._currentTask.cancel())\n    }\n    this._queue = []\n    this._alive = []\n    await Promise.all(cancels)\n    await sleep()\n  }\n\n  _processTask () {\n    this._currentTask = this._queue.shift()\n    if (!this._currentTask) return\n\n    if (this._currentTask.alive) {\n      this._alive.push(this._currentTask)\n    }\n    const req = this._currentTask.exec().catch(e => {})\n\n    if (!(req && typeof req.finally === 'function')) return\n\n    req.finally(() => {\n      if (this._currentTask?.alive && this._alive?.length > 0) {\n        this._alive = this._alive.filter(task => task && task !== this._currentTask)\n      }\n      this._processTask()\n    })\n\n  }\n}\n","import { LoaderType, ResponseType } from './types'\n\nexport function getConfig (cfg) {\n  return {\n    loaderType: LoaderType.FETCH,\n    retry: 0,\n    retryDelay: 0, // ms\n    timeout: 0,\n    request: null, // Request\n    onTimeout: undefined,\n    onProgress: undefined,\n    onRetryError: undefined,\n    transformRequest: undefined,\n    transformResponse: undefined,\n    transformError: undefined,\n    responseType: ResponseType.TEXT,\n    range: undefined,\n    url: '',\n    params: undefined,\n    method: 'GET',\n    headers: {},\n    body: undefined,\n    mode: undefined,\n    credentials: undefined,\n    cache: undefined,\n    redirect: undefined,\n    referrer: undefined,\n    referrerPolicy: undefined,\n    integrity: undefined,\n    onProcessMinLen: 0,\n    ...cfg\n  }\n}\n","import { Buffer } from '../buffer'\n\nexport class GapService {\n  _prevCurrentTime = 0\n\n  do (media, maxJumpDistance = 3, isLive, seekThreshold = 1) {\n    if (!media) return\n\n    const currentTime = media.currentTime\n    let jumpTo = 0\n\n    if (this._prevCurrentTime === currentTime) {\n      const info = Buffer.info(Buffer.get(media), currentTime)\n      if (!info.buffers.length) return\n\n      if (\n        (isLive && info.nextStart) ||\n        (info.nextStart && info.nextStart - currentTime < maxJumpDistance)\n      ) {\n        jumpTo = info.nextStart + 0.1\n      } else if (info.end && info.end - currentTime > seekThreshold && !media.seeking) {\n        jumpTo = currentTime + 0.1\n      }\n    }\n\n    this._prevCurrentTime = currentTime\n\n    if (jumpTo && currentTime !== jumpTo) {\n      media.currentTime = jumpTo\n    }\n  }\n}\n","import { EVENT } from '../event'\n\nexport class SeiService {\n  _seiSet = new Set()\n\n  constructor (emitter) {\n    this.emitter = emitter\n\n    emitter.on(EVENT.SEI, sei => {\n      if (sei) this._seiSet.add(sei)\n    })\n  }\n\n  throw (currentTime, isLive) {\n    if (currentTime === null || currentTime === undefined || !this._seiSet.size) return\n    const min = currentTime - 0.2\n    const max = currentTime + 0.2\n    const toThrow = []\n    this._seiSet.forEach(sei => {\n      if (sei.time >= min && sei.time <= max) {\n        toThrow.push(sei)\n      }\n    })\n\n    toThrow.forEach(sei => {\n      this._seiSet.delete(sei)\n      this.emitter.emit(EVENT.SEI_IN_TIME, sei)\n    })\n\n    if (!isLive) return\n\n    this._seiSet.forEach(s => {\n      if (s.time < currentTime - 5) {\n        this._seiSet.delete(s)\n      }\n    })\n  }\n\n  reset () {\n    this._seiSet.clear()\n  }\n}\n","export class BandwidthService {\n  _chunkSpeeds = [] // bps\n  _speeds = [] // bps\n\n  addRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._speeds.push(8000 * totalByte / ms)\n    this._speeds = this._speeds.slice(-3)\n  }\n\n  addChunkRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._chunkSpeeds.push(8000 * totalByte / ms)\n    this._chunkSpeeds = this._chunkSpeeds.slice(-100)\n  }\n\n  getAvgSpeed () {\n    if (!this._chunkSpeeds.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds.reduce((a, c) => (a += c)) / this._speeds.length\n    }\n    return this._chunkSpeeds.reduce((a, c) => (a += c)) / this._chunkSpeeds.length\n  }\n\n  getLatestSpeed () {\n    if (!this._chunkSpeeds.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds[this._speeds.length - 1]\n    }\n    return this._chunkSpeeds[this._chunkSpeeds.length - 1]\n  }\n\n  reset () {\n    this._chunkSpeeds = []\n    this._speeds = []\n  }\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nclass Stats {\n  encodeType = '' // hevc | avc\n  audioCodec = ''\n  videoCodec = ''\n  domain = '' // stream url domain\n  fps = 0\n  bitrate = 0 // 最新1s下载数据的码率\n  width = 0\n  height = 0\n  samplerate = 0\n  channelCount = 0\n  gop = 0 // 第一个gop帧数\n\n  _bitsAccumulateSize = 0\n  _bitsAccumulateDuration = 0\n  _startGopId = -1\n\n  constructor (timescale) {\n    this._timescale = timescale\n  }\n\n  getStats () {\n    return {\n      encodeType: this.encodeType,\n      audioCodec: this.audioCodec,\n      videoCodec: this.videoCodec,\n      domain: this.domain,\n      fps: this.fps,\n      bitrate: this.bitrate,\n      width: this.width,\n      height: this.height,\n      samplerate: this.samplerate,\n      channelCount: this.channelCount,\n      gop: this.gop\n    }\n  }\n\n  setEncodeType (encode) {\n    this.encodeType = encode\n  }\n\n  setFpsFromScriptData ({data}) {\n    const fps = data?.onMetaData?.framerate\n    if (fps && fps > 0 && fps < 100) {\n      this.fps = fps\n    }\n  }\n\n  setVideoMeta (track) {\n    this.width = track.width\n    this.height = track.height\n    this.videoCodec = track.codec\n    this.encodeType = track.codecType\n    if (track.fpsNum && track.fpsDen) {\n      const fps = track.fpsNum / track.fpsDen\n      if (fps > 0 && fps < 100) {\n        this.fps = fps\n      }\n    }\n  }\n\n  setAudioMeta (track) {\n    this.audioCodec = track.codec\n    this.samplerate = track.sampleRate\n    this.channelCount = track.channelCount\n  }\n\n  setDomain (responseUrl) {\n    this.domain = responseUrl.split('/').slice(2, 3)[0]\n  }\n\n  updateBitrate (samples) {\n    if (!this.fps || this.fps >= 100) {\n      if (samples.length) {\n        const duration = samples.reduce((a,b) => a += b.duration, 0) / samples.length\n        this.fps = Math.round(this._timescale / duration)\n      }\n    }\n    samples.forEach(sample => {\n      if (this._startGopId === -1) {\n        this._startGopId = sample.gopId\n      }\n      if (sample.gopId === this._startGopId) {\n        this.gop++\n      }\n      this._bitsAccumulateDuration += sample.duration / (this._timescale / 1000)\n      this._bitsAccumulateSize += sample.units.reduce((a, c) => (a += c.length), 0)\n      if (this._bitsAccumulateDuration >= 1000) {\n        this.bitrate = this._bitsAccumulateSize * 8\n        this._bitsAccumulateDuration = 0\n        this._bitsAccumulateSize = 0\n      }\n    })\n  }\n}\n\n\n/**\n * @typedef {Object} StatsInfo\n * @property {number} downloadSpeed\n * @property {number} avgSpeed\n * @property {number} currentTime\n * @property {number} bufferEnd\n * @property {number} decodeFps\n * @property {string} encodeType\n * @property {string} audioCodec\n * @property {string} videoCodec\n * @property {string} domain\n * @property {number} fps\n * @property {number} bitrate\n * @property {number} width\n * @property {number} height\n * @property {number} samplerate\n * @property {number} channelCount\n * @property {number} gop\n */\nclass MediaStatsService {\n\n  _core = null\n\n  _samples = []\n\n  constructor (core, timescale = 1000) {\n    this._core = core\n    this._timescale = timescale\n    this._stats = new Stats(timescale)\n    this._bindEvents()\n  }\n\n\n  /** @returns {StatsInfo} */\n  getStats () {\n    const { currentTime = 0, decodeFps = 0 } = this._core?.media || {}\n    return {\n      ...this._stats.getStats(),\n      downloadSpeed: this._core?.speedInfo?.().speed || 0,\n      avgSpeed: this._core?.speedInfo?.().avgSpeed || 0,\n      currentTime,\n      bufferEnd: this._core?.bufferInfo()?.remaining || 0,\n      decodeFps\n    }\n  }\n\n  _bindEvents () {\n    this._core.on(EVENT.DEMUXED_TRACK, ({videoTrack}) => this._stats.updateBitrate(videoTrack.samples))\n\n    this._core.on(EVENT.FLV_SCRIPT_DATA, data => {\n      this._stats.setFpsFromScriptData(data)\n    })\n\n    this._core.on(EVENT.METADATA_PARSED, e => {\n      if (e.type === 'video') {\n        this._stats.setVideoMeta(e.track)\n      } else {\n        this._stats.setAudioMeta(e.track)\n      }\n    })\n\n    this._core.on(EVENT.TTFB, e => {\n      this._stats.setDomain(e.responseUrl)\n    })\n\n  }\n\n  reset () {\n    this._samples = []\n    this._stats = new Stats(this._timescale)\n  }\n\n}\n\nexport { MediaStatsService }\n","/** @enum {string} */\nexport const TrackType = {\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  METADATA: 'metadata'\n}\n\n/** @enum {string} */\nexport const VideoCodecType = {\n  AVC: 'avc',\n  HEVC: 'hevc'\n}\n\n/** @enum {string} */\nexport const AudioCodecType = {\n  AAC: 'aac',\n  G711PCMA: 'g7110a',\n  G711PCMU: 'g7110m'\n}\n\n/** @enum {string} */\nexport const WarningType = {\n  LARGE_AV_SHIFT: 'LARGE_AV_SHIFT',\n  LARGE_VIDEO_GAP: 'LARGE_VIDEO_GAP',\n  LARGE_VIDEO_GAP_BETWEEN_CHUNK: 'LARGE_VIDEO_GAP_BETWEEN_CHUNK',\n  LARGE_AUDIO_GAP: 'LARGE_AUDIO_GAP',\n  AUDIO_FILLED: 'AUDIO_FILLED',\n  AUDIO_DROPPED: 'AUDIO_DROPPED'\n}\n","import { TrackType, VideoCodecType } from './types'\n\nexport class VideoTrack {\n  id = 1\n\n  /** @readonly */\n  type = TrackType.VIDEO\n\n  codecType = VideoCodecType.AVC\n\n  pid = -1 // ts use\n\n  /** @type {Uint8Array | Object} */\n  hvcC = undefined\n\n  codec = ''\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  sequenceNumber = 0\n\n  baseMediaDecodeTime = 0\n\n  baseDts = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./video-sample').VideoSample[]} */\n  samples = []\n\n  /** @type {Uint8Array[]} */\n  pps = []\n\n  /** @type {Uint8Array[]} */\n  sps = []\n\n  /** @type {Uint8Array[]} */\n  vps = []\n\n  fpsNum = 0\n\n  fpsDen = 0\n\n  /** @type {[number, number]} */\n  sarRatio = [] // [hSpacing, vSpacing]\n\n  width = 0\n\n  height = 0\n\n  nalUnitSize = 4\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  isVideo = true\n\n  kid = null\n\n  pssh = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber =\n    this.width =\n    this.height =\n    this.fpsDen =\n    this.fpsNum =\n    this.duration =\n    this.baseMediaDecodeTime =\n    this.timescale = 0\n    this.codec = ''\n    this.present = false\n    this.pid = -1\n    this.pps = []\n    this.sps = []\n    this.vps = []\n    this.sarRatio = []\n    this.samples = []\n    this.warnings = []\n    this.hvcC = null\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.pps.length && this.sps.length && this.codec)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isVideoEncryption\n  }\n}\n","import { TrackType, AudioCodecType } from './types'\n\nexport class AudioTrack {\n  id = 2\n\n  /** @readonly */\n  type = TrackType.AUDIO\n\n  codecType = AudioCodecType.AAC\n\n  pid = -1\n\n  codec = ''\n\n  sequenceNumber = 0\n\n  sampleDuration = 0\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  baseMediaDecodeTime = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./audio-sample').AudioSample[]} */\n  samples = []\n\n  baseDts = 0\n\n  sampleSize = 16\n\n  sampleRate = 0\n\n  channelCount = 0\n\n  objectType = 0\n\n  sampleRateIndex = 0\n\n  /** @type {number[]} */\n  config = []\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  kid = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber = 0\n    this.timescale = 0\n    this.sampleDuration = 0\n    this.sampleRate = 0\n    this.channelCount = 0\n    this.baseMediaDecodeTime = 0\n    this.present = false\n    this.pid = -1\n    this.codec = ''\n    this.samples = []\n    this.config = []\n    this.warnings = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.sampleRate && this.channelCount && this.codec && this.codecType === AudioCodecType.AAC)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isAudioEncryption\n  }\n}\n","/**\n * @typedef {Object} VideoFlag\n * @property {number} [isLeading=0]\n * @property {number} [dependsOn=1]\n * @property {number} [isDependedOn=0]\n * @property {number} [hasRedundancy=0]\n * @property {number} [paddingValue=0]\n * @property {number} [degradationPriority=0]\n * @property {number} [isNonSyncSample=1]\n */\n\nexport class VideoSample {\n  /** @type {VideoFlag} */\n  flag = {}\n\n  keyframe = false\n\n  gopId = 0\n\n  duration = 0\n\n  size = 0\n\n  units = []\n\n  chromaFormat = 420\n\n  // sampleOffset = 0\n\n  /**\n   * @param {number} pts\n   * @param {number} dts\n   * @param {Uint8Array[]} [units]\n   */\n  constructor (pts, dts, units) {\n    this.originPts = this.pts = pts\n    this.originDts = this.dts = dts\n    if (units) this.units = units\n  }\n\n  /**\n   * @returns {number}\n   */\n  get cts () {\n    return this.pts - this.dts\n  }\n\n  setToKeyframe () {\n    this.keyframe = true\n    this.flag.dependsOn = 2\n    this.flag.isNonSyncSample = 0\n  }\n}\n","export class AudioSample {\n  duration = 1024\n\n  flag = { dependsOn: 2, isNonSyncSample: 0 }\n  keyframe = true\n\n  /**\n   * @param {number} pts\n   * @param {Uint8Array} data\n   * @param {number} [duration=1024]\n   */\n  constructor (pts, data, duration, sampleOffset) {\n    this.originPts = this.pts = this.dts = pts\n    this.data = data\n    this.size = data.byteLength\n    this.sampleOffset = sampleOffset\n    if (duration) this.duration = duration\n  }\n}\n","import { TrackType } from './types'\n\nclass Sample {\n  time = 0 // second\n\n  /**\n   * @param {Object} data\n   * @param {number} pts\n   */\n  constructor (data, pts) {\n    this.data = data\n    this.originPts = this.pts = pts\n  }\n}\n\nexport class FlvScriptSample extends Sample {}\n\nexport class SeiSample extends Sample {}\n\nexport class MetadataTrack {\n  /** @readonly */\n  id = 3\n\n  /** @readonly */\n  type = TrackType.METADATA\n\n  timescale = 0\n\n  /** @type {FlvScriptSample[]} */\n  flvScriptSamples = []\n\n  /** @type {SeiSample[]} */\n  seiSamples = []\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!((this.flvScriptSamples.length || this.seiSamples.length) && this.timescale)\n  }\n\n  reset () {\n    this.timescale = 0\n    this.flvScriptSamples = []\n    this.seiSamples = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!(this.flvScriptSamples.length || this.seiSamples.length)\n  }\n}\n","export class ExpGolomb {\n  _bytesAvailable\n\n  _bitsAvailable = 0\n\n  _word = 0\n\n  constructor (data) {\n    if (!data) throw new Error('ExpGolomb data params is required')\n    this._data = data\n    this._bytesAvailable = data.byteLength\n    if (this._bytesAvailable) this._loadWord()\n  }\n\n  get bitsAvailable () {\n    return this._bitsAvailable\n  }\n\n  _loadWord () {\n    const position = this._data.byteLength - this._bytesAvailable\n    const availableBytes = Math.min(4, this._bytesAvailable)\n    if (availableBytes === 0) throw new Error('No bytes available')\n\n    const workingBytes = new Uint8Array(4)\n    workingBytes.set(this._data.subarray(position, position + availableBytes))\n\n    this._word = new DataView(workingBytes.buffer).getUint32(0)\n    this._bitsAvailable = availableBytes * 8\n    this._bytesAvailable -= availableBytes\n  }\n\n  skipBits (count) {\n    if (this._bitsAvailable > count) {\n      this._word <<= count\n      this._bitsAvailable -= count\n    } else {\n      count -= this._bitsAvailable\n      const skipBytes = Math.floor(count / 8)\n      count -= (skipBytes * 8)\n      this._bytesAvailable -= skipBytes\n      this._loadWord()\n      this._word <<= count\n      this._bitsAvailable -= count\n    }\n  }\n\n  readBits (size) {\n    if (size > 32) {\n      throw new Error('Cannot read more than 32 bits')\n    }\n\n    let bits = Math.min(this._bitsAvailable, size)\n    const val = this._word >>> (32 - bits)\n\n    this._bitsAvailable -= bits\n    if (this._bitsAvailable > 0) {\n      this._word <<= bits\n    } else if (this._bytesAvailable > 0) {\n      this._loadWord()\n    }\n\n    bits = size - bits\n    if (bits > 0 && this._bitsAvailable) {\n      return (val << bits) | this.readBits(bits)\n    }\n    return val\n  }\n\n  skipLZ () {\n    let leadingZeroCount\n    for (\n      leadingZeroCount = 0;\n      leadingZeroCount < this._bitsAvailable;\n      ++leadingZeroCount\n    ) {\n      if ((this._word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        this._word <<= leadingZeroCount\n        this._bitsAvailable -= leadingZeroCount\n        return leadingZeroCount\n      }\n    }\n    this._loadWord()\n    return leadingZeroCount + this.skipLZ()\n  }\n\n  skipUEG () {\n    this.skipBits(1 + this.skipLZ())\n  }\n\n  readUEG () {\n    const clz = this.skipLZ()\n    return this.readBits(clz + 1) - 1\n  }\n\n  readEG () {\n    const val = this.readUEG()\n    if (1 & val) {\n      return (1 + val) >>> 1\n    }\n    return -1 * (val >>> 1)\n  }\n\n  readBool () {\n    return this.readBits(1) === 1\n  }\n\n  readUByte () {\n    return this.readBits(8)\n  }\n\n  skipScalingList (count) {\n    let lastScale = 8\n    let nextScale = 8\n    let deltaScale\n    for (let j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG()\n        nextScale = (lastScale + deltaScale + 256) % 256\n      }\n      lastScale = nextScale === 0 ? lastScale : nextScale\n    }\n  }\n}\n","export class Logger {\n  constructor (name) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","export class UTF8 {\n  /**\n   *\n   * @param {Uint8Array} uint8array\n   * @return {string}\n   */\n  static decode (uint8array) {\n    const out = []\n    const input = uint8array\n    let i = 0\n    const length = uint8array.length\n\n    while (i < length) {\n      if (input[i] < 0x80) {\n        out.push(String.fromCharCode(input[i]))\n        ++i\n        continue\n      } else if (input[i] < 0xC0) {\n        // fallthrough\n      } else if (input[i] < 0xE0) {\n        if (UTF8._checkContinuation(input, i, 1)) {\n          const ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F)\n          if (ucs4 >= 0x80) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 2\n            continue\n          }\n        }\n      } else if (input[i] < 0xF0) {\n        if (UTF8._checkContinuation(input, i, 2)) {\n          const ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F\n          if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 3\n            continue\n          }\n        }\n      } else if (input[i] < 0xF8) {\n        if (UTF8._checkContinuation(input, i, 3)) {\n          let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 |\n                    (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F)\n          if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n            ucs4 -= 0x10000\n            out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800))\n            out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00))\n            i += 4\n            continue\n          }\n        }\n      }\n      out.push(String.fromCharCode(0xFFFD))\n      ++i\n    }\n\n    return out.join('')\n  }\n\n  static _checkContinuation (uint8array, start, checkLength) {\n    const array = uint8array\n    if (start + checkLength < array.length) {\n      while (checkLength--) {\n        if ((array[++start] & 0xC0) !== 0x80) {\n          return false\n        }\n      }\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n\nconst ua = isBrowser && navigator.userAgent.toLocaleLowerCase()\n\n// eslint-disable-next-line no-lookahead-lookbehind-regexp/no-lookahead-lookbehind-regexp\nexport const isSafari = isBrowser && /^((?!chrome|android).)*safari/.test(ua)\nexport const isFirefox = isBrowser && ua.includes('firefox')\nexport const isAndroid = isBrowser && ua.includes('android')\n","/* c8 ignore next 4 */\nexport { ExpGolomb } from './exp-golomb'\nexport { Logger } from './logger'\nexport { UTF8 } from './utf8'\nexport * from './env'\n\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport const MAX_SIZE = Math.pow(2, 32)\n\nexport function readBig16 (data, i = 0) {\n  return (data[i] << 8) + (data[i + 1] || 0)\n}\n\nexport function readBig24 (data, i = 0) {\n  return (data[i] << 16) + (data[i + 1] << 8) + (data[i + 2] || 0)\n}\n\nexport function readBig32 (data, i = 0) {\n  return (data[i] << 24 >>> 0) + (data[i + 1] << 16) + (data[i + 2] << 8) + (data[i + 3] || 0)\n}\n\nexport function readBig64 (data, i = 0) {\n  return readBig32(data, i) * MAX_SIZE + readBig32(data, i + 4)\n}\n\nexport function getAvcCodec (codecs) {\n  let codec = 'avc1.'\n  let h\n  for (let i = 0; i < 3; i++) {\n    h = codecs[i].toString(16)\n    if (h.length < 2) h = `0${h}`\n    codec += h\n  }\n  return codec\n}\n\nexport function formatIV (arr) {\n  let iv = ''\n  arr.forEach(value => {\n    iv += bufferToString(value)\n  })\n  if (iv.length <= 32) {\n    const len = 32 - iv.length\n    for (let i = 0; i < len; i++) {\n      iv += '0'\n    }\n  }\n  return iv\n}\n\nexport function parse (a) {\n  if (!Array.isArray(a)) {\n    const arr = []\n    let value = ''\n    for (let i = 0; i < a.length; i++) {\n      if (i % 2) {\n        value = a[i - 1] + a[i]\n        arr.push(parseInt(value, 16))\n        value = ''\n      }\n    }\n    return arr\n  }\n  return a.map(item => { return parseInt(item, 16) })\n}\nfunction bufferToString (value) {\n  return ('0' + (Number(value).toString(16))).slice(-2).toUpperCase()\n}\n\nexport function hashVal (str) {\n  let hash = 0; let i; let chr\n  if (str.length === 0) return hash\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + chr\n    hash |= 0\n  }\n  return hash\n}\n","import { readBig32 } from '../utils'\n\nexport class NALu {\n  static parseAnnexB (data) {\n    const len = data.length\n    let start = 2\n    let end = 0\n    while (data[start] !== null && data[start] !== undefined && data[start] !== 1) {\n      start++\n    }\n    start++\n    end = start + 2\n\n    if (end >= len) return []\n\n    const units = []\n\n    while (end < len) {\n      switch (data[end]) {\n        case 0:\n          if (data[end - 1] !== 0) {\n            end += 2\n            break\n          } else if (data[end - 2] !== 0) {\n            end++\n            break\n          }\n\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n\n          do {\n            end++\n          } while (data[end] !== 1 && end < len)\n          start = end + 1\n          end = start + 2\n          break\n        case 1:\n          if (data[end - 1] !== 0 || data[end - 2] !== 0) {\n            end += 3\n            break\n          }\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n          start = end + 1\n          end = start + 2\n          break\n        default:\n          end += 3\n          break\n      }\n    }\n\n    if (start < len) units.push(data.subarray(start))\n\n    return units\n  }\n\n  static parseAvcC (data, size = 4) {\n    if (data.length < 4) return\n    const dataLen = data.length\n    const units = []\n\n    let offset = 0\n    let length\n    while ((offset + size) < dataLen) {\n      length = readBig32(data, offset)\n      if (size === 3) length >>>= 8\n      offset += size\n\n      if (!length) continue\n      if (offset + length > dataLen) {\n        break\n      }\n\n      units.push(data.subarray(offset, offset + length))\n      offset += length\n    }\n\n    return units\n  }\n\n  static parseSEI (unit, isHevc) {\n    const len = unit.length\n    let i = isHevc ? 2 : 1\n    let type = 0\n    let size = 0\n    let uuid = ''\n\n    while (unit[i] === 255) {\n      type += 255\n      i++\n    }\n\n    type += unit[i++]\n\n    while (unit[i] === 255) {\n      size += 255\n      i++\n    }\n    size += unit[i++]\n\n    if (type === 5 && len > i + 16) {\n      for (let j = 0; j < 16; j++) {\n        uuid += unit[i].toString(16)\n        i++\n      }\n    }\n\n    return {\n      payload: unit.subarray(i, i + size), type, size, uuid\n    }\n  }\n\n  static removeEPB (uint) {\n    const length = uint.byteLength\n    const emulationPreventionBytesPositions = []\n    let i = 1\n\n    while (i < length - 2) {\n      if (uint[i] === 0 && uint[i + 1] === 0 && uint[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2)\n        i += 2\n      } else {\n        i++\n      }\n    }\n\n    if (!emulationPreventionBytesPositions.length) return uint\n\n    const newLength = length - emulationPreventionBytesPositions.length\n    const newData = new Uint8Array(newLength)\n\n    let sourceIndex = 0\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        sourceIndex++\n        emulationPreventionBytesPositions.shift()\n      }\n      newData[i] = uint[sourceIndex]\n    }\n\n    return newData\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb, getAvcCodec } from '../utils'\n\nexport class AVC {\n  static parseAVCDecoderConfigurationRecord (data) {\n    if (data.length < 7) return\n    const nalUnitSize = (data[4] & 3) + 1\n\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n\n    let offset = 6\n    const spsCount = data[5] & 0x1f\n    let spsSize\n    for (let i = 0; i < spsCount; i++) {\n      spsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!spsSize) continue\n\n      const sps = data.subarray(offset, offset + spsSize)\n      offset += spsSize\n      spsArr.push(sps)\n\n      if (!spsParsed) {\n        spsParsed = AVC.parseSPS(NALu.removeEPB(sps))\n      }\n    }\n\n    const ppsCount = data[offset]\n    offset++\n    let ppsSize\n    for (let i = 0; i < ppsCount; i++) {\n      ppsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!ppsSize) continue\n      ppsArr.push(data.subarray(offset, offset + ppsSize))\n      offset += ppsSize\n    }\n\n    return {\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseSPS (unit) {\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n\n    const profileIdc = eg.readUByte()\n    const profileCompatibility = eg.readUByte()\n    const levelIdc = eg.readUByte()\n    eg.skipUEG()\n\n    let chromaFormat = 420\n    if (\n      profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128 ||\n      profileIdc === 138 ||\n      profileIdc === 144\n    ) {\n      const chromaFormatIdc = eg.readUEG()\n      if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n      if (chromaFormatIdc === 3) eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      eg.skipBits(1)\n      if (eg.readBool()) {\n        const scalingListCount = chromaFormatIdc !== 3 ? 8 : 12\n        for (let i = 0; i < scalingListCount; i++) {\n          if (eg.readBool()) {\n            if (i < 6) {\n              eg.skipScalingList(16)\n            } else {\n              eg.skipScalingList(64)\n            }\n          }\n        }\n      }\n    }\n\n    eg.skipUEG()\n    const picOrderCntType = eg.readUEG()\n    if (picOrderCntType === 0) {\n      eg.readUEG()\n    } else if (picOrderCntType === 1) {\n      eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      const numRefFramesInPicOrderCntCycle = eg.readUEG()\n      for (let i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        eg.skipUEG()\n      }\n    }\n\n    eg.skipUEG()\n    eg.skipBits(1)\n    const picWidthInMbsMinus1 = eg.readUEG()\n    const picHeightInMapUnitsMinus1 = eg.readUEG()\n    const frameMbsOnlyFlag = eg.readBits(1)\n    if (frameMbsOnlyFlag === 0) eg.skipBits(1)\n    eg.skipBits(1)\n\n    let frameCropLeftOffset = 0\n    let frameCropRightOffset = 0\n    let frameCropTopOffset = 0\n    let frameCropBottomOffset = 0\n\n    if (eg.readBool()) {\n      frameCropLeftOffset = eg.readUEG()\n      frameCropRightOffset = eg.readUEG()\n      frameCropTopOffset = eg.readUEG()\n      frameCropBottomOffset = eg.readUEG()\n    }\n\n    let sarRatio\n    let fixedFrame\n    let fpsNum\n    let fpsDen\n    let fps\n    if (eg.readBool()) {\n      if (eg.readBool()) {\n        const aspectRatioIdc = eg.readUByte()\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break\n          case 2: sarRatio = [12, 11]; break\n          case 3: sarRatio = [10, 11]; break\n          case 4: sarRatio = [16, 11]; break\n          case 5: sarRatio = [40, 33]; break\n          case 6: sarRatio = [24, 11]; break\n          case 7: sarRatio = [20, 11]; break\n          case 8: sarRatio = [32, 11]; break\n          case 9: sarRatio = [80, 33]; break\n          case 10: sarRatio = [18, 11]; break\n          case 11: sarRatio = [15, 11]; break\n          case 12: sarRatio = [64, 33]; break\n          case 13: sarRatio = [160, 99]; break\n          case 14: sarRatio = [4, 3]; break\n          case 15: sarRatio = [3, 2]; break\n          case 16: sarRatio = [2, 1]; break\n          case 255: {\n            sarRatio = [\n              (eg.readUByte() << 8) | eg.readUByte(),\n              (eg.readUByte() << 8) | eg.readUByte()\n            ]\n            break\n          }\n          default:\n        }\n      }\n\n      if (eg.readBool()) eg.readBool()\n\n      if (eg.readBool()) {\n        eg.readBits(4)\n        if (eg.readBool()) eg.readBits(24)\n      }\n\n      if (eg.readBool()) {\n        eg.readUEG()\n        eg.readUEG()\n      }\n\n      if (eg.readBool()) {\n        const numUnitsInTick = eg.readBits(32)\n        const timeScale = eg.readBits(32)\n        fixedFrame = eg.readBool()\n\n        fpsNum = timeScale\n        fpsDen = numUnitsInTick * 2\n        fps = fpsNum / fpsDen\n      }\n    }\n\n    return {\n      codec: getAvcCodec(unit.subarray(1, 4)),\n      profileIdc,\n      profileCompatibility,\n      levelIdc,\n      chromaFormat,\n      width: Math.ceil(\n        (picWidthInMbsMinus1 + 1) * 16 -\n          2 * (frameCropLeftOffset + frameCropRightOffset)\n      ),\n      height:\n        (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 -\n        (frameMbsOnlyFlag ? 2 : 4) *\n          (frameCropTopOffset + frameCropBottomOffset),\n      sarRatio,\n      fpsNum,\n      fpsDen,\n      fps,\n      fixedFrame\n    }\n  }\n}\n","import { isFirefox, isAndroid } from '../utils'\n\nexport class AAC {\n  static FREQ = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n  static getRateIndexByRate (rate) {\n    return AAC.FREQ.indexOf(rate)\n  }\n\n  static parseADTS (data, pts) {\n    const len = data.length\n    let i = 0\n\n    while ((i + 2) < len) {\n      if (data[i] === 0xff && (data[i + 1] & 0xf6) === 0xf0) {\n        break\n      }\n      i++\n    }\n\n    if (i >= len) return\n\n    const skip = i\n    const frames = []\n    const samplingFrequencyIndex = (data[i + 2] & 0x3c) >>> 2\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    if (!sampleRate) throw new Error(`Invalid sampling index: ${samplingFrequencyIndex}`)\n    const objectType = ((data[i + 2] & 0xc0) >>> 6) + 1\n    const channelCount = ((data[i + 2] & 1) << 2) | ((data[i + 3] & 0xc0) >>> 6)\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    let protectionSkipBytes\n    let frameLength\n    let frameIndex = 0\n    const duration = AAC.getFrameDuration(sampleRate)\n\n    while ((i + 7) < len) {\n      if ((data[i] !== 0xff) || (data[i + 1] & 0xF6) !== 0xf0) {\n        i++\n        continue\n      }\n\n      frameLength = ((data[i + 3] & 0x03) << 11) | (data[i + 4] << 3) | ((data[i + 5] & 0xe0) >> 5)\n      if ((len - i) < frameLength) break\n\n      protectionSkipBytes = (~data[i + 1] & 0x01) * 2\n      frames.push({\n        pts: pts + frameIndex * duration,\n        data: data.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n      })\n\n      frameIndex++\n      i += frameLength\n    }\n\n    return {\n      skip,\n      remaining: i >= len ? undefined : data.subarray(i),\n      frames,\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      codec,\n      config,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static parseAudioSpecificConfig (data) {\n    if (!data.length) return\n    const objectType = data[0] >>> 3\n    const samplingFrequencyIndex = ((data[0] & 0x07) << 1) | (data[1] >>> 7)\n    const channelCount = (data[1] & 0x78) >>> 3\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    // play as no audio track stream\n    if (!sampleRate) return\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    return {\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      config,\n      codec,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static getFrameDuration (rate, timescale = 90000) {\n    return 1024 * timescale / rate\n  }\n\n  static _getConfig (samplingIndex, channelCount, originObjectType) {\n    const config = []\n    let objectType\n    let extensionSamplingIndex\n    if (isFirefox) {\n      if (samplingIndex >= 6) { // use SBR (HE-AAC)\n        objectType = 5\n        extensionSamplingIndex = samplingIndex - 3\n      } else { // use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    } else if (isAndroid) { // use LC-AAC\n      objectType = 2\n      extensionSamplingIndex = samplingIndex\n    } else { // use HE-AAC\n      objectType = (originObjectType === 2 || originObjectType === 5) ? originObjectType : 5\n      extensionSamplingIndex = samplingIndex\n\n      if (samplingIndex >= 6) {\n        extensionSamplingIndex = samplingIndex - 3\n      } else if (channelCount === 1) { // Mono channel, use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    }\n\n    config[0] = objectType << 3\n    config[0] |= (samplingIndex & 0x0e) >> 1\n    config[1] = (samplingIndex & 0x01) << 7\n    config[1] |= channelCount << 3\n    if (objectType === 5) {\n      config[1] |= ((extensionSamplingIndex & 0x0e) >> 1)\n      config[2] = (extensionSamplingIndex & 0x01) << 7\n      config[2] |= (2 << 2)\n      config[3] = 0\n    }\n\n    return {\n      config,\n      codec: `mp4a.40.${objectType}`\n    }\n  }\n\n  /* c8 ignore next 65 */\n  static getSilentFrame (codec, channelCount) {\n    switch (codec) {\n      case 'mp4a.40.2':\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x8e\n          ])\n        } if (channelCount === 4) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38\n          ])\n        } if (channelCount === 5) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38\n          ])\n        } if (channelCount === 6) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2,\n            0x00, 0x20, 0x08, 0xe0\n          ])\n        }\n        break\n      default:\n        if (channelCount === 1) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        }\n        break\n    }\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb } from '../utils'\n\nexport class HEVC {\n  static parseHEVCDecoderConfigurationRecord (data, hvcC = {}) {\n    if (data.length < 23) return\n    hvcC = hvcC || {}\n    const nalUnitSize = (data[21] & 3) + 1\n\n    let vpsParsed\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n    const vpsArr = []\n\n    let offset = 23\n    const numOfArrays = data[22]\n\n    let nalUnitType\n    let numNalus\n    let nalSize\n    for (let i = 0; i < numOfArrays; i++) {\n      nalUnitType = data[offset] & 0x3f\n      numNalus = (data[offset + 1] << 8) | data[offset + 2]\n\n      offset += 3\n\n      for (let j = 0; j < numNalus; j++) {\n        nalSize = (data[offset] << 8) | data[offset + 1]\n        offset += 2\n        if (!nalSize) continue\n        switch (nalUnitType) {\n          case 32: {\n            const vps = data.subarray(offset, offset + nalSize)\n            if (!vpsParsed) vpsParsed = HEVC.parseVPS(NALu.removeEPB(vps), hvcC)\n            vpsArr.push(vps)\n          }\n            break\n          case 33: {\n            const sps = data.subarray(offset, offset + nalSize)\n            if (!spsParsed) spsParsed = HEVC.parseSPS(NALu.removeEPB(sps), hvcC)\n            spsArr.push(sps)\n          }\n            break\n          case 34:\n            ppsArr.push(data.subarray(offset, offset + nalSize))\n            break\n          default:\n        }\n\n        offset += nalSize\n      }\n    }\n\n    return {\n      hvcC,\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      vpsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseVPS (unit, hvcC) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(12)\n    const vpsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(hvcC.numTemporalLayers || 0, vpsMaxSubLayersMinus1 + 1)\n    eg.readBits(17)\n    HEVC._parseProfileTierLevel(eg, vpsMaxSubLayersMinus1, hvcC)\n\n    return hvcC\n  }\n\n  static parseSPS (unit, hvcC = {}) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(4)\n    const spsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(spsMaxSubLayersMinus1 + 1, hvcC.numTemporalLayers || 0)\n    hvcC.temporalIdNested = eg.readBits(1)\n    HEVC._parseProfileTierLevel(eg, spsMaxSubLayersMinus1, hvcC)\n\n    eg.readUEG() // sps_seq_parameter_set_id\n\n    const chromaFormatIdc = hvcC.chromaFormatIdc = eg.readUEG()\n    let chromaFormat = 420\n    if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n\n    let separateColourPlaneFlag = 0\n    if (chromaFormatIdc === 3) {\n      separateColourPlaneFlag = eg.readBits(1)\n    }\n\n    let width = eg.readUEG() // pic_width_in_luma_samples\n    let height = eg.readUEG() // pic_height_in_luma_samples\n\n    const conformanceWindowFlag = eg.readBits(1)\n\n    let confWinLeftOffset\n    let confWinRightOffset\n    let confWinTopOffset\n    let confWinBottomOffset\n    if (conformanceWindowFlag === 1) {\n      confWinLeftOffset = eg.readUEG() // conf_win_left_offset\n      confWinRightOffset = eg.readUEG() // conf_win_right_offset\n      confWinTopOffset = eg.readUEG() // conf_win_top_offset\n      confWinBottomOffset = eg.readUEG() // conf_win_bottom_offset\n    }\n\n    hvcC.bitDepthLumaMinus8 = eg.readUEG() // bit_depth_luma_minus8\n    hvcC.bitDepthChromaMinus8 = eg.readUEG() // bit_depth_chroma_minus8\n\n    if (conformanceWindowFlag === 1) {\n      const subWidthC = (((chromaFormatIdc === 1) || (chromaFormatIdc === 2)) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      const subHeightC = ((chromaFormatIdc === 1) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      width -= (subWidthC * (confWinRightOffset + confWinLeftOffset))\n      height -= (subHeightC * (confWinBottomOffset + confWinTopOffset))\n    }\n\n    return {\n      codec: 'hev1.1.6.L93.B0',\n      width,\n      height,\n      chromaFormat,\n      hvcC\n    }\n  }\n\n  static _parseProfileTierLevel (eg, maxSubLayersMinus1, hvcC) {\n    const generalTierFlag = hvcC.generalTierFlag || 0\n    hvcC.generalProfileSpace = eg.readBits(2)\n    hvcC.generalTierFlag = Math.max(eg.readBits(1), generalTierFlag)\n    hvcC.generalProfileIdc = Math.max(eg.readBits(5), hvcC.generalProfileIdc || 0)\n    hvcC.generalProfileCompatibilityFlags = eg.readBits(32)\n    hvcC.generalConstraintIndicatorFlags = [eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8)]\n    const generalLevelIdc = eg.readBits(8)\n    if (generalTierFlag < hvcC.generalTierFlag) {\n      hvcC.generalLevelIdc = generalLevelIdc\n    } else {\n      hvcC.generalLevelIdc = Math.max(generalLevelIdc, hvcC.generalLevelIdc || 0)\n    }\n\n    const subLayerProfilePresentFlag = []\n    const subLayerLevelPresentFlag = []\n\n    if (maxSubLayersMinus1 > eg.bitsAvailable) {\n      throw new Error(`maxSubLayersMinus inavlid size ${maxSubLayersMinus1}`)\n    }\n\n    for (let j = 0; j < maxSubLayersMinus1; j++) {\n      subLayerProfilePresentFlag[j] = eg.readBits(1)\n      subLayerLevelPresentFlag[j] = eg.readBits(1)\n    }\n\n    if (maxSubLayersMinus1 > 0) {\n      eg.readBits((8 - maxSubLayersMinus1) * 2)\n    }\n\n    for (let i = 0; i < maxSubLayersMinus1; i++) {\n      if (subLayerProfilePresentFlag[i] !== 0) {\n        eg.readBits(2)\n        eg.readBits(1)\n        eg.readBits(5)\n\n        eg.readBits(16)\n        eg.readBits(16)\n\n        eg.readBits(4)\n\n        eg.readBits(16)\n        eg.readBits(16)\n        eg.readBits(12)\n      }\n      if (subLayerLevelPresentFlag[i] !== 0) {\n        eg.readBits(8)\n      }\n    }\n  }\n}\n","import { AudioCodecType, AudioSample, WarningType } from '../model'\nimport { AAC } from '../codec'\nimport { isSafari } from '../utils'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 500 // ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 1000 // ms\nconst AUDIO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 1000 // ms\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 200 // ms\nconst VIDEO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst TRACK_BREACKED_CHECK_TIME = 5\n\nexport class FlvFixer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = 0\n    this._videoTimestampBreak = 0\n    this._lastVideoDuration = 0\n\n    // 在视频帧遇到下一个关键帧之前，如果音频时间戳发生了跳变，不能确定是否音视频都发生跳变还是单纯音频发生跳变.\n    // 这里记录关键帧标识, 从下一个关键帧开始，如果视频没有跳变，才能判断是只有音频发生了跳变\n    this._keyFrameInNextChunk = false\n\n    this._lastAudioExceptionGapDot = -Infinity\n    this._lastAudioExceptionOverlapDot = -Infinity\n    this._lastAudioExceptionLargeGapDot = -Infinity\n\n    this._lastVideoExceptionLargeGapDot = -Infinity\n    this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n  }\n\n  /**\n   * @param {number} startTime 点播seek到的时间点\n   * @param {boolean} discontinuity 是否换流\n   * @param {boolean} contiguous 前后chunk时间戳是否连续\n   */\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 1000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    if (discontinuity || !contiguous) {\n      this._videoLastSample = null\n      this._audioNextPts = undefined\n      this._videoNextDts = undefined\n      this._audioTimestampBreak = 0\n      this._videoTimestampBreak = 0\n      this._lastAudioExceptionGapDot = -Infinity\n      this._lastAudioExceptionOverlapDot = -Infinity\n      this._lastAudioExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n    }\n\n    if (discontinuity && !contiguous) {\n      this._baseDtsInited = false\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(audioTrack, videoTrack)\n    }\n\n    if (!contiguous && startTime) {\n      this._audioNextPts = this._videoNextDts = startTime\n    }\n\n    const resetBaseDts = this._baseDtsInited &&\n      (this._videoTimestampBreak || !this.videoTrack.exist()) &&\n      (this._audioTimestampBreak || !this.audioTrack.exist())\n\n    if (resetBaseDts) {\n      this._resetBaseDtsWhenStreamBreaked()\n    }\n\n    this._fixAudio(audioTrack)\n\n    this._keyFrameInNextChunk = false\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n      this.metadataTrack.flvScriptSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 1000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n\n    samples.forEach(x => {\n      x.dts -= this._baseDts\n      x.pts -= this._baseDts\n      if (x.keyframe) this._keyFrameInNextChunk = true\n    })\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    } else if (videoTrack.length > 1) {\n      const first = videoTrack.samples[0]\n      const last = videoTrack.samples[samples.length - 1]\n      refSampleDurationInt = Math.floor((last.dts - first.dts) / (samples.length - 1))\n    } else {\n      refSampleDurationInt = this._lastVideoDuration || 40\n    }\n\n    const lastSample = samples.pop()\n\n    if (this._videoLastSample) {\n      samples.unshift(this._videoLastSample)\n    }\n\n    this._videoLastSample = lastSample\n\n    if (!samples.length) return\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      // emit large delta of first sample with expect\n      if (Math.abs(firstSample.dts - this._lastVideoExceptionChunkFirstDtsDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n        this._lastVideoExceptionChunkFirstDtsDot = firstSample.dts\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n          nextDts: this._videoNextDts,\n          firstSampleDts: firstSample.dts,\n          nextSampleDts: samples[1]?.dts,\n          sampleDuration: vDelta\n        })\n      }\n\n      // only video breaked\n      if (this._videoTimestampBreak >= TRACK_BREACKED_CHECK_TIME) {\n        this._videoNextDts = firstSample.dts\n        this._videoTimestampBreak = 0\n      } else {\n        // resolve first frame only\n        firstSample.dts += vDelta\n        firstSample.pts += vDelta\n        if (!this.audioTrack.exist()) {\n          this._videoTimestampBreak = 1\n        }\n      }\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (lastSample) {\n        sampleDuration = lastSample.dts - dts\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        this._videoTimestampBreak++\n        // emit stream breaked\n        if (Math.abs(dts - this._lastVideoExceptionLargeGapDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastVideoExceptionLargeGapDot = dts\n          videoTrack.warnings.push({\n            type: WarningType.LARGE_VIDEO_GAP,\n            time: dts / videoTrack.timescale,\n            dts,\n            originDts: samples[i].originDts,\n            nextDts: this._videoNextDts,\n            sampleDuration,\n            refSampleDuration: refSampleDurationInt\n          })\n        }\n\n        sampleDuration = refSampleDurationInt\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n      this._lastVideoDuration = sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n    if (!samples.length) return\n\n    // offset origin timestamp\n    samples.forEach(x => {\n      x.dts = x.pts -= this._baseDts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 1000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    /**\n       * timestamp breaked\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n    // calc baseDts base on new samples\n    const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n    if (!calc) return\n\n    // consider the expect dts for next frame\n    if (!this.audioTrack.exist()){\n      this._baseDts -= this._videoNextDts\n    } else if (!this.videoTrack.exist()){\n      this._baseDts -= this._audioNextPts\n    } else {\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n    }\n    this._videoTimestampBreak = 0\n    this._audioTimestampBreak = 0\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) {\n      audioTrack.sampleDuration = audioTrack.codecType === AudioCodecType.AAC\n        ? AAC.getFrameDuration(audioTrack.timescale, timescale)\n        : this._getG711Duration(audioTrack)\n    }\n    const refSampleDuration = audioTrack.sampleDuration\n\n    const sampleDurationInSampleRate = audioTrack.codecType === AudioCodecType.AAC ? 1024 : refSampleDuration * audioTrack.timescale / 1000\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      let nextPts = this._audioNextPts\n      const sample = samples[i]\n      let delta = sample.pts - nextPts\n\n      // only audio breaked\n      if (i === 0 && this._audioTimestampBreak >= TRACK_BREACKED_CHECK_TIME && this._keyFrameInNextChunk) {\n        nextPts = this._audioNextPts = sample.dts\n        delta = 0\n        this._audioTimestampBreak = 0\n      }\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = this._getSilentFrame(audioTrack) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_FILLED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            count,\n            nextPts,\n            refSampleDuration\n          })\n        }\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(this._audioNextPts + refSampleDuration) - Math.floor(this._audioNextPts), silentFrame, sampleDurationInSampleRate)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            nextPts,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) > MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak++\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts,\n              originPts: sample.originPts,\n              nextPts,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        sample.dts = sample.pts = nextPts\n        sample.duration = sampleDurationInSampleRate\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n\n  _getG711Duration (track) {\n    const { sampleSize, channelCount, sampleRate } = track\n    const samp0 = track.samples[0]\n    if (!samp0) return\n    return samp0.data.byteLength * 2 / channelCount / (sampleSize / 8) / sampleRate * 1000\n  }\n\n  _getSilentFrame (track) {\n    if (track.codecType === AudioCodecType.AAC) return AAC.getSilentFrame(track.codec, track.channelCount)\n    return new Uint8Array(8 * track.sampleDuration * track.channelCount)\n  }\n}\n","import { UTF8 } from '../utils'\n\nexport class AMF {\n  static parse (data) {\n    if (data.length < 3) return\n\n    const ret = {}\n    const name = AMF._parseValue(new DataView(data.buffer, data.byteOffset, data.byteLength))\n    const value = AMF._parseValue(new DataView(data.buffer, data.byteOffset + name.size, data.byteLength - name.size))\n    ret[name.data] = value.data\n\n    return ret\n  }\n\n  static _parseValue (view) {\n    const dataLen = view.byteLength\n    const type = view.getUint8(0)\n    let offset = 1\n    let isEnd = false\n    let value\n\n    switch (type) {\n      case 0: // Number(Double) type\n        value = view.getFloat64(1)\n        offset += 8\n        break\n      case 1: { // Boolean type\n        value = !!view.getUint8(1)\n        offset += 1\n        break\n      }\n      case 2: { // String type\n        const { data, size } = AMF._parseString(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n        value = data\n        offset += size\n      }\n        break\n      case 3: { // Object(s) type\n        value = {}\n        let terminal = 0\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 4) { // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) offset += 3\n        }\n      }\n        break\n      case 8: { // ECMA array type (Mixed array)\n        value = {}\n        offset += 4 // ECMAArrayLength(UI32)\n        let terminal = 0 // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 8) { // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) {\n            offset += 3\n          }\n        }\n      }\n        break\n      case 9: // ScriptDataObjectEnd\n        value = undefined\n        offset = 1\n        isEnd = true\n        break\n      case 10: { // Strict array type\n        value = []\n        const strictArrayLength = view.getUint32(1)\n        offset += 4\n        for (let i = 0; i < strictArrayLength; i++) {\n          const { data, size } = AMF._parseValue(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n          value.push(data)\n          offset += size\n        }\n      }\n        break\n      case 11: { // Date type\n        const timestamp = view.getFloat64(offset) + view.getInt16(offset + 8) * 60000\n        value = new Date(timestamp)\n        offset += 10\n      }\n        break\n      case 12: { // Long string type\n        const length = view.getUint32(1)\n        offset += 4\n        value = ''\n        if (length > 0) {\n          value = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + offset, length))\n        }\n        offset += length\n      }\n        break\n      default:\n        offset = dataLen\n        break\n    }\n\n    return {\n      data: value,\n      size: offset,\n      isEnd\n    }\n  }\n\n  static _parseString (view) {\n    const length = view.getUint16(0)\n    let data = ''\n    if (length > 0) {\n      data = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + 2, length))\n    }\n\n    return {\n      data,\n      size: 2 + length\n    }\n  }\n\n  static _parseObject (view) {\n    if (view.byteLength < 3) return\n\n    const name = AMF._parseString(view)\n    const value = AMF._parseValue(new DataView(view.buffer, view.byteOffset + name.size, view.byteLength - name.size))\n\n    return {\n      data: {\n        name: name.data,\n        value: value.data\n      },\n      size: name.size + value.size,\n      isEnd: value.isEnd\n    }\n  }\n}\n","import { VideoTrack, AudioTrack, MetadataTrack, AudioSample, VideoSample, VideoCodecType, AudioCodecType, FlvScriptSample, SeiSample } from '../model'\nimport { FlvFixer } from './fixer'\nimport { concatUint8Array, Logger, readBig32 } from '../utils'\nimport { AAC, AVC, HEVC, NALu } from '../codec'\nimport { AMF } from './amf'\n\nconst logger = new Logger('FlvDemuxer')\n\n/**\n * @typedef {Object} DemuxResult\n * @property {VideoTrack} videoTrack\n * @property {AudioTrack} audioTrack\n * @property {MetadataTrack} metadataTrack\n */\n\nexport class FlvDemuxer {\n  _headerParsed = false\n  _remainingData = null\n  _gopId = 0\n  _needAddMetaBeforeKeyFrameNal = true // 标识H265流中关键帧Nal之前是否需要插入vps、sps、pps Nal\n\n  static AUDIO_RATE = [5500, 11000, 22000, 44000]\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new FlvFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false] 切流\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity || !contiguous) {\n      this._remainingData = null\n    }\n\n    if (discontinuity) {\n      this._headerParsed = false\n    }\n\n    if (discontinuity) {\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      metadataTrack.flvScriptSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingData) {\n        data = concatUint8Array(this._remainingData, data)\n        this._remainingData = null\n      }\n    }\n\n    if (!data.length) {\n      return {\n        videoTrack,\n        audioTrack,\n        metadataTrack\n      }\n    }\n\n    let offset = 0\n    if (!this._headerParsed) {\n      if (!FlvDemuxer.probe(data)) {\n        throw new Error('Invalid flv file')\n      }\n      audioTrack.present = ((data[4] & 4) >>> 2) !== 0\n      videoTrack.present = (data[4] & 1) !== 0\n      this._headerParsed = true\n      offset = readBig32(data, 5) + 4 // skip prev tag size\n    }\n\n    const dataLen = data.length\n\n    let tagType\n    let dataSize\n    let timestamp\n    let bodyData\n    let prevTagSize\n    while ((offset + 15) < dataLen) { // header and prev tag size\n      tagType = data[offset]\n      dataSize = (data[offset + 1] << 16) | (data[offset + 2] << 8) | data[offset + 3]\n      if (offset + 15 + dataSize > dataLen) break\n      timestamp = (\n        (data[offset + 7] << 24 >>> 0) +\n        (data[offset + 4] << 16) +\n        (data[offset + 5] << 8) +\n        data[offset + 6]\n      )\n\n      offset += 11\n      bodyData = data.subarray(offset, offset + dataSize)\n      if (tagType === 8) {\n        this._parseAudio(bodyData, timestamp)\n      } else if (tagType === 9) {\n        this._parseVideo(bodyData, timestamp)\n      } else if (tagType === 18) {\n        this._parseScript(bodyData, timestamp)\n      } else {\n        logger.warn(`Invalid tag type: ${tagType}`)\n      }\n\n      offset += dataSize\n      prevTagSize = readBig32(data, offset)\n      if (prevTagSize !== 11 + dataSize) {\n        logger.warn(`Invalid PrevTagSize ${prevTagSize} (${11 + dataSize})`)\n      }\n\n      offset += 4\n    }\n\n    if (offset < dataLen) {\n      this._remainingData = data.subarray(offset)\n    }\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 1000\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    if (!audioTrack.exist() && audioTrack.hasSample()) {\n      audioTrack.reset()\n    }\n    if (!videoTrack.exist() && videoTrack.hasSample()) {\n      videoTrack.reset()\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   * @returns {DemuxResult}\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\n      return false\n    }\n    return readBig32(data, 5) >= 9\n  }\n\n  _parseAudio (data, pts) {\n    if (!data.length) return\n\n    const format = (data[0] & 0xf0) >>> 4\n    const track = this.audioTrack\n\n    if (\n      format !== 10 && // AAC\n      format !== 7 && // G.711 A-law logarithmic PCM\n      format !== 8 // G.711 mu-law logarithmic PCM\n    ) {\n      logger.warn(`Unsupported sound format: ${format}`)\n      track.reset()\n      return\n    }\n\n    if (format !== 10) {\n      const soundRate = (data[0] & 0x0c) >> 2\n      const soundSize = (data[0] & 0x02) >> 1\n      const soundType = (data[0] & 0x01)\n      track.sampleRate = FlvDemuxer.AUDIO_RATE[soundRate]\n      track.sampleSize = soundSize ? 16 : 8\n      track.channelCount = soundType + 1\n    }\n\n    if (format === 10) {\n      this._parseAac(data, pts)\n    } else {\n      this._parseG711(data, pts, format)\n    }\n  }\n\n  _parseG711 (data, pts, format) {\n    const track = this.audioTrack\n    track.codecType = format === 7 ? AudioCodecType.G711PCMA : AudioCodecType.G711PCMU\n    track.sampleRate = 8000\n    track.codec = track.codecType\n    track.samples.push(new AudioSample(pts, data.subarray(1)))\n  }\n\n  _parseAac (data, pts) {\n    const track = this.audioTrack\n    track.codecType = AudioCodecType.AAC\n\n    if (data[1] === 0) { // AACPacketType\n      const ret = AAC.parseAudioSpecificConfig(data.subarray(2))\n      if (ret) {\n        track.codec = ret.codec\n        track.channelCount = ret.channelCount\n        track.sampleRate = ret.sampleRate\n        track.config = ret.config\n        track.objectType = ret.objectType\n        track.sampleRateIndex = ret.samplingFrequencyIndex\n      } else {\n        track.reset()\n        logger.warn('Cannot parse AudioSpecificConfig', data)\n      }\n    } else if (data[1] === 1) { // Raw AAC frame data\n      if (pts === undefined || pts === null) return\n      track.samples.push(new AudioSample(pts, data.subarray(2)))\n    } else {\n      logger.warn(`Unknown AACPacketType: ${data[1]}`)\n    }\n  }\n\n  _parseVideo (data, dts) {\n    if (data.length < 6) return\n\n    const frameType = (data[0] & 0xf0) >>> 4\n    const codecId = data[0] & 0x0f\n\n    const track = this.videoTrack\n\n    if (\n      codecId !== 7 && // AVC\n      codecId !== 12 // HEVC\n    ) {\n      track.reset()\n      logger.warn(`Unsupported codecId: ${codecId}`)\n      return\n    }\n\n    const isHevc = codecId === 12\n    track.codecType = isHevc ? VideoCodecType.HEVC : VideoCodecType.AVC\n\n    const packetType = data[1]\n    const cts = (((data[2] << 16) | (data[3] << 8) | (data[4])) << 8) >> 8\n\n    if (packetType === 0) { // DecoderConfigurationRecord\n      const configData = data.subarray(5)\n      const ret = isHevc\n        ? HEVC.parseHEVCDecoderConfigurationRecord(configData)\n        : AVC.parseAVCDecoderConfigurationRecord(configData)\n      if (ret) {\n        const { hvcC, sps, ppsArr, spsArr, vpsArr, nalUnitSize } = ret\n        if (hvcC) {\n          track.hvcC = track.hvcC || hvcC\n        }\n        if (sps) {\n          track.codec = sps.codec\n          track.width = sps.width\n          track.height = sps.height\n          track.sarRatio = sps.sarRatio\n          track.fpsNum = sps.fpsNum\n          track.fpsDen = sps.fpsDen\n        }\n        if (spsArr.length) track.sps = spsArr\n        if (ppsArr.length) track.pps = ppsArr\n        if (vpsArr && vpsArr.length) track.vps = vpsArr\n        if (nalUnitSize) track.nalUnitSize = nalUnitSize\n      } else {\n        logger.warn(`Cannot parse ${isHevc ? 'HEVC' : 'AVC'}DecoderConfigurationRecord`, data)\n      }\n    } else if (packetType === 1) { // One or more NALUs\n      let units = NALu.parseAvcC(data.subarray(5), track.nalUnitSize)\n\n      units = this._checkAddMetaNalToUnits(isHevc, units, track)\n\n      if (units && units.length) {\n        const sample = new VideoSample(dts + cts, dts, units)\n        if (frameType === 1) {\n          sample.setToKeyframe()\n        }\n        track.samples.push(sample)\n\n        units.forEach(unit => {\n          const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n          switch (type) {\n            case 5: // IDR\n            case 16: // HEVC BLA_W_LP\n            case 17: // HEVC BLA_W_RADL\n            case 18: // HEVC BLA_N_LP\n            case 19: // HEVC IDR_W_RADL\n            case 20: // HEVC IDR_N_LP\n            case 21: // HEVC CRA_NUT\n            case 22: // HEVC RSV_IRAP_VCL22\n            case 23: // HEVC RSV_IRAP_VCL23\n              if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n              sample.setToKeyframe()\n              break\n            case 6: // SEI\n            case 39: // HEVC PREFIX_SEI\n            case 40: // HEVC SUFFIX_SEI\n              if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n              this.metadataTrack.seiSamples.push(new SeiSample(\n                NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n                dts + cts\n              ))\n              break\n            default:\n          }\n        })\n\n        if (sample.keyframe) {\n          this._gopId++\n        }\n        sample.gopId = this._gopId\n      } else {\n        logger.warn('Cannot parse NALUs', data)\n      }\n    } else if (packetType === 2) {\n      // AVC end of sequence, Empty\n    } else {\n      logger.warn(`Unknown AVCPacketType: ${packetType}`)\n    }\n  }\n\n  _checkAddMetaNalToUnits (hevc, units, track) {\n    if (!hevc || !this._needAddMetaBeforeKeyFrameNal) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    const nalTypes = units.map(x => (x[0] >>> 1) & 0x3f)\n\n    if (nalTypes.includes(32)) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    units.unshift(track.pps[0])\n    units.unshift(track.sps[0])\n    units.unshift(track.vps[0])\n\n    return units.filter(Boolean)\n  }\n\n  _parseScript (data, pts) {\n    this.metadataTrack.flvScriptSamples.push(new FlvScriptSample(AMF.parse(data), pts))\n  }\n}\n","import { AudioSample, WarningType } from '../model'\nimport { AAC } from '../codec'\nimport { isSafari } from '../utils'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 90000 / 2 // 500ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 90000 // 1s\nconst AUDIO_EXCETION_LOG_EMIT_DURATION = 5 * 90000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 90000 // 1s\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 90000 / 2 // 500ms\n\nexport class TsFixer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = false\n    this._videoTimestampBreak = false\n\n    this._lastAudioExceptionGapDot = 0\n    this._lastAudioExceptionOverlapDot = 0\n    this._lastAudioExceptionLargeGapDot = 0\n  }\n\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 90000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    const vSamples = videoTrack.samples\n    const aSamples = audioTrack.samples\n\n    if (!vSamples.length && !aSamples.length) return\n\n    const firstVideoSample = vSamples[0]\n    const firstAudioSample = aSamples[0]\n\n    // consider av delta\n    let vaDelta = 0\n\n    if (vSamples.length && aSamples.length) {\n      vaDelta = firstVideoSample.dts - firstAudioSample.pts\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(this.audioTrack, this.videoTrack)\n    }\n\n    // recalc baseDts\n    if (discontinuity) {\n      this._calculateBaseDts(this.audioTrack, this.videoTrack)\n      this._baseDts -= startTime\n    }\n\n    // id discontinue, recalc nextDts, consider av delta of firstframe\n    if (!contiguous) {\n      /**\n       *  segment.start = min(a, v)\n       *  segment.start\n       *      |\n       *      a\n       *       -- vaDelta --\n       *                   v\n       */\n      this._videoNextDts = vaDelta > 0 ? startTime + vaDelta : startTime\n      this._audioNextPts = vaDelta > 0 ? startTime : startTime - vaDelta\n\n      const vDeltaToNextDts = firstVideoSample ? firstVideoSample.dts - this._baseDts - this._videoNextDts : 0\n      const aDeltaToNextDts = firstAudioSample ? firstAudioSample.pts - this._baseDts - this._audioNextPts : 0\n\n      if (Math.abs(vDeltaToNextDts || aDeltaToNextDts) > MAX_VIDEO_FRAME_DURATION) {\n        this._calculateBaseDts(this.audioTrack, this.videoTrack)\n        this._baseDts -= startTime\n      }\n    }\n\n    this._resetBaseDtsWhenStreamBreaked()\n\n    // fix audio first\n    this._fixAudio(audioTrack)\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 90000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n    samples.forEach(x => {\n      x.dts -= this._baseDts\n      x.pts -= this._baseDts\n    })\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const nextSample = samples[1]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n        nextDts: this._videoNextDts / 90,\n        firstSampleDts: firstSample.dts / 90,\n        nextSampleDts: (samples[1]?.dts || 0) / 90,\n        sampleDuration: vDelta / 90\n      })\n\n      // resolve first frame first\n      firstSample.dts += vDelta\n      firstSample.pts += vDelta\n\n\n      // check to ajust the whole segment\n      if (nextSample && Math.abs(nextSample.dts - firstSample.dts) > MAX_VIDEO_FRAME_DURATION) {\n        this._videoTimestampBreak = true\n        samples.forEach((x, i) => {\n          if (i === 0) return\n          x.dts += vDelta\n          x.pts += vDelta\n        })\n      } else {\n        for (let i = 1; i < len - 1; i++) {\n          const dts = samples[i]?.dts\n          const prevDts = samples[i - 1 ].dts\n          if (dts && dts - prevDts < 0) {\n            samples[i].dts += vDelta\n            samples[i].pts += vDelta\n          }\n        }\n      }\n    }\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    } else {\n      const first = videoTrack.samples[0]\n      const second = videoTrack.samples[1]\n      // 100ms default\n      refSampleDurationInt = len === 1 ? 9000 : Math.floor((second.dts - first.dts))\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (samples[i - 1]) {\n        sampleDuration = Math.min(dts - samples[i - 1].dts, refSampleDurationInt)\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        // dts exception of adjacent frame\n        this._videoTimestampBreak = true\n\n        // check if only video breaked!\n        sampleDuration = this._audioTimestampBreak ? refSampleDurationInt : Math.max(sampleDuration, 30 * 90) // 30ms\n\n        // check if sample breaked within current fragment\n        const expectFragEnd = (this._audioNextPts || 0)\n        if (nextSample && nextSample.dts > expectFragEnd) {\n          sampleDuration = refSampleDurationInt\n        }\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP,\n          time: dts / videoTrack.timescale,\n          dts,\n          originDts: samples[i].originDts,\n          nextDts: this._videoNextDts,\n          sampleDuration,\n          refSampleDuration: refSampleDurationInt\n        })\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n\n    if (!samples.length) return\n    samples.forEach(x => {\n      x.pts -= this._baseDts\n      x.dts = x.pts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 90000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    if (this._baseDtsInited && this._videoTimestampBreak && this._audioTimestampBreak) {\n      /**\n       * timestamp breaked\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n      // calc baseDts base on new samples\n      const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n      if (!calc) return\n\n      // consider the expect dts for next frame\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n      this._audioLastSample = null\n      this._videoLastSample = null\n      this._videoTimestampBreak = false\n      this._audioTimestampBreak = false\n    }\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) audioTrack.sampleDuration = AAC.getFrameDuration(audioTrack.timescale, timescale)\n    const refSampleDuration = audioTrack.sampleDuration\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      const nextPts = this._audioNextPts\n      const sample = samples[i]\n      const delta = sample.pts - nextPts\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = AAC.getSilentFrame(audioTrack.codec, audioTrack.channelCount) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n        }\n\n        audioTrack.warnings.push({\n          type: WarningType.AUDIO_FILLED,\n          pts: sample.pts,\n          originPts: sample.originPts,\n          count,\n          nextPts,\n          refSampleDuration\n        })\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(nextPts), silentFrame)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            nextPts,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) >= MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak = true\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts,\n              originPts: sample.originPts,\n              nextPts,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        sample.dts = sample.pts = nextPts\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n}\n","import { TsFixer } from './fixer'\nimport { AVC, AAC, HEVC, NALu } from '../codec'\nimport { VideoSample, AudioSample, VideoCodecType, VideoTrack, AudioTrack, MetadataTrack, SeiSample } from '../model'\nimport { Logger, concatUint8Array } from '../utils'\n\nconst logger = new Logger('TsDemuxer')\n\nexport class TsDemuxer {\n  _pmtId = -1\n  _remainingPacketData = null\n  _videoPesData = []\n  _audioPesData = []\n  _gopId = 0\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new TsFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {import('../flv').DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity) {\n      this._pmtId = -1\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    }\n\n    if (!contiguous || discontinuity) {\n      this._remainingPacketData = null\n      this._videoPesData = []\n      this._audioPesData = []\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingPacketData) {\n        data = concatUint8Array(this._remainingPacketData, data)\n        this._remainingPacketData = null\n      }\n    }\n\n    let dataLen = data.length\n    const remainingLength = dataLen % 188\n    if (remainingLength) {\n      this._remainingPacketData = data.subarray(dataLen - remainingLength)\n      dataLen -= remainingLength\n    }\n\n    let videoPid = videoTrack.pid\n    let audioPid = audioTrack.pid\n\n    for (let start = 0; start < dataLen; start += 188) {\n      if (data[start] !== 0x47) throw new Error('TS packet did not start with 0x47')\n      const payloadUnitStartIndicator = !!(data[start + 1] & 0x40)\n      const pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2]\n      const adaptationFiledControl = (data[start + 3] & 0x30) >> 4\n\n      let offset\n      if (adaptationFiledControl > 1) {\n        offset = start + 5 + data[start + 4]\n        if (offset === start + 188) continue\n      } else {\n        offset = start + 4\n      }\n\n      switch (pid) {\n        case 0: // PAT\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          this._pmtId = ((data[offset + 10] & 0x1f) << 8) | data[offset + 11]\n          break\n        case this._pmtId: {\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          const tableEnd = offset + 3 + (((data[offset + 1] & 0x0f) << 8) | data[offset + 2]) - 4\n          const programInfoLength = ((data[offset + 10] & 0x0f) << 8) | data[offset + 11]\n          offset += 12 + programInfoLength\n\n          while (offset < tableEnd) {\n            const esPid = ((data[offset + 1] & 0x1f) << 8) | data[offset + 2]\n            switch (data[offset]) {\n              case 0x0f: // AAC ADTS\n                audioTrack.pid = audioPid = esPid\n                break\n              case 0x1b: // AVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.AVC\n                videoTrack.pid = videoPid = esPid\n                break\n              case 0x24: // HEVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.HEVC\n                videoTrack.pid = videoPid = esPid\n                break\n              default:\n                logger.warn(`Unsupported stream. type: ${data[offset]}, pid: ${esPid}`)\n            }\n\n            offset += (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5\n          }\n        }\n          break\n        case videoPid:\n          if (payloadUnitStartIndicator && this._videoPesData.length) {\n            this._parseVideoData()\n          }\n          this._videoPesData.push(data.subarray(offset, start + 188))\n          break\n        case audioPid:\n          if (payloadUnitStartIndicator && this._audioPesData.length) {\n            this._parseAudioData()\n          }\n          this._audioPesData.push(data.subarray(offset, start + 188))\n          break\n        case 17:\n        case 0x1fff:\n          break\n        default:\n          logger.warn(`Unknown pid: ${pid}`)\n      }\n    }\n\n    this._parseVideoData()\n    this._parseAudioData()\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 90000\n\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (!data.length) return false\n    return data[0] === 0x47 && data[188] === 0x47 && data[376] === 0x47\n  }\n\n  _parseVideoData () {\n    if (!this._videoPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._videoPesData))\n    if (!pes) {\n      logger.warn('Cannot parse video pes', this._videoPesData)\n      return\n    }\n\n    const units = NALu.parseAnnexB(pes.data)\n    if (units) {\n      this._createVideoSample(units, pes.pts, pes.dts)\n    } else {\n      logger.warn('Cannot parse avc units', pes)\n    }\n\n    this._videoPesData = []\n  }\n\n  _createVideoSample (units, pts, dts) {\n    if (!units.length) return\n    const track = this.videoTrack\n    const isHevc = track.codecType === VideoCodecType.HEVC\n\n    const sample = new VideoSample(pts, dts)\n    units.forEach((unit) => {\n      const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n      switch (type) {\n        case 5: // IDR\n        case 16: // HEVC BLA_W_LP\n        case 17: // HEVC BLA_W_RADL\n        case 18: // HEVC BLA_N_LP\n        case 19: // HEVC IDR_W_RADL\n        case 20: // HEVC IDR_N_LP\n        case 21: // HEVC CRA_NUT\n        case 22: // HEVC RSV_IRAP_VCL22\n        case 23: // HEVC RSV_IRAP_VCL23\n          if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n          sample.setToKeyframe()\n          this._gopId++\n          break\n        case 6: // SEI\n        case 39: // HEVC PREFIX_SEI\n        case 40: // HEVC SUFFIX_SEI\n          if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n          this.metadataTrack.seiSamples.push(new SeiSample(\n            NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n            pts\n          ))\n          // fix 分割nal之前只要sei信息被当做单独一个sample\n          return\n        case 32: // HEVC VPS\n          if (!isHevc) break\n          if (!track.vps.length) {\n            const hvcC = HEVC.parseVPS(NALu.removeEPB(unit), track.hvcC)\n            track.hvcC = track.hvcC || hvcC\n            track.vps = [unit]\n          }\n          break\n        case 7: // SPS\n        case 33: // HEVC SPS\n          if ((!isHevc && type !== 7) || (isHevc && type === 7)) break\n          if (!track.sps.length) {\n            const data = NALu.removeEPB(unit)\n            const spsInfo = isHevc ? HEVC.parseSPS(data, track.hvcC) : AVC.parseSPS(data)\n            track.sps = [unit]\n            track.hvcC = track.hvcC || spsInfo.hvcC\n            track.codec = spsInfo.codec\n            track.width = spsInfo.width\n            track.height = spsInfo.height\n            track.sarRatio = spsInfo.sarRatio\n            track.fpsNum = spsInfo.fpsNum\n            track.fpsDen = spsInfo.fpsDen\n          }\n          break\n        case 8: // PPS\n        case 34: // HEVC PPS\n          if ((!isHevc && type !== 8) || (isHevc && type === 8)) break\n          if (!track.pps.length) track.pps = [unit]\n          break\n        case 9: // AUD\n        case 35: // HEVC AUD\n          // if ((!isHevc && type !== 9) || (isHevc && type === 9)) break\n          // sample.gopId = this._gopId\n          // if (sample.units.length && !keyFrame) {\n          //   this._pushVideoSample(track, sample)\n          //   sample = this.prevAvcSample = new VideoSample(pts, dts)\n          // }\n          break\n        default:\n      }\n      sample.units.push(unit)\n    })\n    sample.gopId = this._gopId\n    this._pushVideoSample(track, sample)\n  }\n\n  _pushVideoSample (track, sample) {\n    if (sample.units.length) {\n      if (sample.pts === null || sample.pts === undefined) {\n        logger.warn('Video sample no pts', sample)\n        const lastSample = track.samples[track.samples.length - 1]\n        if (lastSample) {\n          sample.pts = lastSample.pts\n          sample.dts = lastSample.dts\n        } else {\n          logger.warn('Drop video sample', sample)\n        }\n      } else {\n        track.samples.push(sample)\n      }\n    }\n  }\n\n  _parseAudioData () {\n    if (!this._audioPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._audioPesData))\n    if (!pes) {\n      logger.warn('Cannot parse audio pes', this._audioPesData)\n      return\n    }\n\n    this._parseAacData(pes)\n\n    this._audioPesData = []\n  }\n\n  _parseAacData (pes) {\n    const track = this.audioTrack\n    let pts = pes.pts\n    if (pts === null || pts === undefined) {\n      logger.warn('AAC pes not pts', track)\n      if (!track.samples.length || !track.sampleRate) {\n        return\n      }\n      pts = track.samples[track.samples.length - 1].pts + AAC.getFrameDuration(track.sampleRate)\n    }\n\n    const ret = AAC.parseADTS(pes.data, pts)\n    if (ret) {\n      track.codec = ret.codec\n      track.channelCount = ret.channelCount\n      track.sampleRate = ret.sampleRate\n      track.objectType = ret.objectType\n      track.sampleRateIndex = ret.samplingFrequencyIndex\n      track.config = ret.config\n      track.samples.push(...ret.frames.map((s) => new AudioSample(s.pts, s.data)))\n\n      if (ret.skip) {\n        logger.warn(`Skip aac adts ${ret.skip} bits`)\n      }\n      if (ret.remaining) {\n        logger.warn(`Remaining aac adts ${ret.remaining} bits`)\n      }\n    } else {\n      logger.warn('Cannot parse aac adts', pes)\n    }\n  }\n\n  static _parsePES (data) {\n    const headerDataLen = data[8]\n    if (headerDataLen === null || headerDataLen === undefined || data.length < (headerDataLen + 9)) return\n    const startPrefix = data[0] << 16 | data[1] << 8 | data[2]\n    if (startPrefix !== 1) return\n    const pesLen = (data[4] << 8) + data[5]\n    if (pesLen && pesLen > data.length - 6) return\n\n    let pts\n    let dts\n    const ptsDtsFlags = data[7]\n    if (ptsDtsFlags & 0xc0) {\n      pts = (data[9] & 0x0e) * 536870912 +\n        (data[10] & 0xff) * 4194304 +\n        (data[11] & 0xfe) * 16384 +\n        (data[12] & 0xff) * 128 +\n        (data[13] & 0xfe) / 2\n\n      if (ptsDtsFlags & 0x40) {\n        dts = (data[14] & 0x0e) * 536870912 +\n          (data[15] & 0xff) * 4194304 +\n          (data[16] & 0xfe) * 16384 +\n          (data[17] & 0xff) * 128 +\n          (data[18] & 0xfe) / 2\n        if (pts - dts > 60 * 90000) pts = dts\n      } else {\n        dts = pts\n      }\n    }\n\n    return { data: data.subarray(9 + headerDataLen), pts, dts }\n  }\n}\n","import { AudioCodecType, VideoCodecType } from '../model'\nimport { getAvcCodec, readBig16, readBig24, readBig32, readBig64 } from '../utils'\nimport { AAC } from '../codec'\nexport class MP4Parser {\n  static findBox (data, names, start = 0) {\n    const ret = []\n    if (!data) return ret\n\n    let size = 0\n    let type = ''\n    let headerSize = 0\n    while (data.length > 7) {\n      size = readBig32(data)\n      type = String.fromCharCode.apply(null, data.subarray(4, 8))\n      headerSize = 8\n      if (size === 1) {\n        size = readBig64(data, 8)\n        headerSize += 8\n      } else if (!size) {\n        size = data.length\n      }\n      if (!names[0] || type === names[0]) {\n        const subData = data.subarray(0, size)\n        if (names.length < 2) {\n          ret.push({\n            start,\n            size,\n            headerSize,\n            type,\n            data: subData\n          })\n        } else {\n          return MP4Parser.findBox(subData.subarray(headerSize), names.slice(1), start + headerSize)\n        }\n      }\n\n      start += size\n      data = data.subarray(size)\n    }\n\n    return ret\n  }\n\n  static tfhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.trackId = readBig32(data)\n      let start = 4\n      const baseDataOffsetPresent = (ret.flags & 0xff) & 0x01\n      const sampleDescriptionIndexPresent = (ret.flags & 0xff) & 0x02\n      const defaultSampleDurationPresent = (ret.flags & 0xff) & 0x08\n      const defaultSampleSizePresent = (ret.flags & 0xff) & 0x10\n      const defaultSampleFlagsPresent = (ret.flags & 0xff) & 0x20\n\n      if (baseDataOffsetPresent) {\n        start += 4 // truncate top 4 bytes\n        ret.baseDataOffset = readBig32(data, start)\n        start += 4\n      }\n      if (sampleDescriptionIndexPresent) {\n        ret.sampleDescriptionIndex = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleDurationPresent) {\n        ret.defaultSampleDuration = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleSizePresent) {\n        ret.defaultSampleSize = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleFlagsPresent) {\n        ret.defaultSampleFlags = readBig32(data, start)\n      }\n    })\n  }\n\n  static sidx (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      ret.reference_ID = readBig32(data, start)// stream.readUint32();\n      start += 4\n      ret.timescale = readBig32(data, start)\n      start += 4\n      if (ret.version === 0) {\n        ret.earliest_presentation_time = readBig32(data, start)\n        start += 4\n        ret.first_offset = readBig32(data, start)\n        start += 4\n      } else {\n        ret.earliest_presentation_time = readBig64(data, start)\n        start += 8\n        ret.first_offset = readBig64(data, start)\n        start += 8\n      }\n      start += 2\n      ret.references = []\n      const count = readBig16(data, start)\n      start += 2\n      for (let i = 0; i < count; i++) {\n        const ref = {}\n        ret.references.push(ref)\n        let tmp32 = readBig32(data, start)\n        start += 4\n        ref.reference_type = (tmp32 >> 31) & 0x1\n        ref.referenced_size = tmp32 & 0x7FFFFFFF\n        ref.subsegment_duration = readBig32(data, start)\n        start += 4\n        tmp32 = readBig32(data, start)\n        start += 4\n        ref.starts_with_SAP = (tmp32 >> 31) & 0x1\n        ref.SAP_type = (tmp32 >> 28) & 0x7\n        ref.SAP_delta_time = tmp32 & 0xFFFFFFF\n      }\n    })\n  }\n\n  static moov (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mvhd = MP4Parser.mvhd(MP4Parser.findBox(data, ['mvhd'], start)[0])\n      ret.trak = MP4Parser.findBox(data, ['trak'], start).map(trak => MP4Parser.trak(trak))\n      ret.pssh = MP4Parser.pssh(MP4Parser.findBox(data, ['pssh'], start)[0])\n    })\n  }\n\n  static mvhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.timescale = readBig32(data, 16)\n        ret.duration = readBig64(data, 20)\n        start += 28\n      } else {\n        ret.timescale = readBig32(data, 8)\n        ret.duration = readBig32(data, 12)\n        start += 16\n      }\n      ret.nextTrackId = readBig32(data, start + 76)\n    })\n  }\n\n  static trak (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tkhd = MP4Parser.tkhd(MP4Parser.findBox(data, ['tkhd'], start)[0])\n      ret.mdia = MP4Parser.mdia(MP4Parser.findBox(data, ['mdia'], start)[0])\n    })\n  }\n\n  static tkhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.trackId = readBig32(data, 16)\n        ret.duration = readBig64(data, 24)\n        start += 32\n      } else {\n        ret.trackId = readBig32(data, 8)\n        ret.duration = readBig32(data, 16)\n        start += 20\n      }\n      ret.width = readBig32(data, start + 52)\n      ret.height = readBig32(data, start + 56)\n    })\n  }\n\n  static mdia (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mdhd = MP4Parser.mdhd(MP4Parser.findBox(data, ['mdhd'], start)[0])\n      ret.hdlr = MP4Parser.hdlr(MP4Parser.findBox(data, ['hdlr'], start)[0])\n      ret.minf = MP4Parser.minf(MP4Parser.findBox(data, ['minf'], start)[0])\n    })\n  }\n\n  static mdhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.timescale = readBig32(data, 16)\n        ret.duration = readBig64(data, 20)\n        start += 28\n      } else {\n        ret.timescale = readBig32(data, 8)\n        ret.duration = readBig32(data, 12)\n        start += 16\n      }\n      const lang = readBig16(data, start)\n      ret.language = String.fromCharCode(((lang >> 10) & 0x1F) + 0x60, ((lang >> 5) & 0x1F) + 0x60, (lang & 0x1F) + 0x60)\n    })\n  }\n\n  static hdlr (box) {\n    return parseBox(box, true, (ret, data) => {\n      if (ret.version === 0) {\n        ret.handlerType = String.fromCharCode.apply(null, data.subarray(4, 8))\n      }\n    })\n  }\n\n  static minf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.vmhd = MP4Parser.vmhd(MP4Parser.findBox(data, ['vmhd'], start)[0])\n      ret.smhd = MP4Parser.smhd(MP4Parser.findBox(data, ['smhd'], start)[0])\n      ret.stbl = MP4Parser.stbl(MP4Parser.findBox(data, ['stbl'], start)[0])\n    })\n  }\n\n  static vmhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.graphicsmode = readBig16(data)\n      ret.opcolor = [readBig16(data, 2), readBig16(data, 4), readBig16(data, 6)]\n    })\n  }\n\n  static smhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.balance = readBig16(data)\n    })\n  }\n\n  static stbl (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.stsd = MP4Parser.stsd(MP4Parser.findBox(data, ['stsd'], start)[0])\n      ret.stts = MP4Parser.stts(MP4Parser.findBox(data, ['stts'], start)[0])\n      ret.ctts = MP4Parser.ctts(MP4Parser.findBox(data, ['ctts'], start)[0])\n      ret.stsc = MP4Parser.stsc(MP4Parser.findBox(data, ['stsc'], start)[0])\n      ret.stsz = MP4Parser.stsz(MP4Parser.findBox(data, ['stsz'], start)[0])\n      ret.stco = MP4Parser.stco(MP4Parser.findBox(data, ['stco'], start)[0])\n      if (!ret.stco) {\n        ret.co64 = MP4Parser.co64(MP4Parser.findBox(data, ['co64'], start)[0])\n        ret.stco = ret.co64\n      }\n      const default_IV_size = ret.stsd.entries[0]?.sinf?.schi?.tenc.default_IV_size\n      ret.stss = MP4Parser.stss(MP4Parser.findBox(data, ['stss'], start)[0])\n      ret.senc = MP4Parser.senc(MP4Parser.findBox(data, ['senc'], start)[0], default_IV_size)\n    })\n  }\n\n  static senc (box, iv = 8) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      const sampleCount = readBig32(data, start)\n      start += 4\n      ret.samples = []\n      for (let i = 0; i < sampleCount; i++) {\n        const sample = {}\n        sample.InitializationVector = []\n        for (let j = 0; j < iv; j++){\n          sample.InitializationVector[j] = data[start + j]\n        }\n        start += iv\n        if (ret.flags & 0x2) {\n          sample.subsamples = []\n          const subsampleCount = readBig16(data, start)\n          start += 2\n          for (let j = 0; j < subsampleCount; j++) {\n            const subsample = {}\n            subsample.BytesOfClearData = readBig16(data, start)\n            start += 2\n            subsample.BytesOfProtectedData = readBig32(data, start)\n            start += 4\n            sample.subsamples.push(subsample)\n          }\n        }\n        ret.samples.push(sample)\n      }\n    })\n  }\n\n  static pssh (box) {\n    return parseBox(box, true, (ret, data) => {\n      const keyIds = []\n      const systemId = []\n      let start = 0\n      for (let i = 0; i < 16; i++) {\n        systemId.push(toHex(data[start + i]))\n      }\n      start += 16\n      if (ret.version > 0) {\n        const numKeyIds = readBig32(data, start)\n        start += 4\n        for (let i = 0; i < ('' + numKeyIds).length; i++) {\n          for (let j = 0; j < 16; j++) {\n            const keyId = data[start]\n            start += 1\n            keyIds.push(toHex(keyId))\n          }\n        }\n      }\n      const dataSize = readBig32(data, start)\n      ret.data_size = dataSize\n      start += 4\n      ret.kid = keyIds\n      ret.system_id = systemId\n      ret.buffer = data\n    })\n  }\n\n  static stsd (box) {\n    return parseBox(box, true, (ret, data, start) => {\n      ret.entryCount = readBig32(data)\n      ret.entries = MP4Parser.findBox(data.subarray(4), [], start + 4).map(b => {\n        switch (b.type) {\n          case 'avc1':\n          case 'avc2':\n          case 'avc3':\n          case 'avc4':\n            return MP4Parser.avc1(b)\n          case 'hvc1':\n          case 'hev1':\n            return MP4Parser.hvc1(b)\n          case 'mp4a':\n            return MP4Parser.mp4a(b)\n          case 'alaw':\n          case 'ulaw':\n            return MP4Parser.alaw(b)\n          case 'enca':\n            // sinf->schi->tenc\n            return parseBox(b, false, (ret, data, start) => {\n              ret.channelCount = readBig16(data, 16)\n              ret.samplesize = readBig16(data, 18)\n              ret.sampleRate = (readBig32(data, 24) / (1 << 16))\n              data = data.subarray(28)\n              ret.sinf = MP4Parser.sinf(MP4Parser.findBox(data, ['sinf'], start)[0])\n              ret.esds = MP4Parser.esds(MP4Parser.findBox(data, ['esds'], start)[0])\n            })\n          case 'encv':\n            // sinf->schi->tenc\n            return parseBox(b, false, (ret, data, start) => {\n              ret.width = readBig16(data, 24)\n              ret.height = readBig16(data, 26)\n              ret.horizresolution = readBig32(data, 28)\n              ret.vertresolution = readBig32(data, 32)\n              data = data.subarray(78)\n              ret.sinf = MP4Parser.sinf(MP4Parser.findBox(data, ['sinf'], start)[0])\n              ret.avcC = MP4Parser.avcC(MP4Parser.findBox(data, ['avcC'], start)[0])\n              ret.hvcC = MP4Parser.hvcC(MP4Parser.findBox(data, ['hvcC'], start)[0])\n              ret.pasp = MP4Parser.pasp(MP4Parser.findBox(data, ['pasp'], start)[0])\n            })\n          default:\n        }\n      }).filter(Boolean)\n    })\n  }\n\n  static tenc (box) {\n    return parseBox(box, false, (ret, data) => {\n      let start = 6\n      ret.default_IsEncrypted = data[start]\n      start += 1\n      ret.default_IV_size = data[start]\n      start += 1\n      ret.default_KID = []\n      for (let i = 0; i < 16; i++) {\n        ret.default_KID.push(toHex(data[start]))\n        start += 1\n      }\n    })\n  }\n\n  static schi (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tenc = MP4Parser.tenc(MP4Parser.findBox(data, ['tenc'], start)[0])\n    })\n  }\n\n  static sinf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.schi = MP4Parser.schi(MP4Parser.findBox(data, ['schi'], start)[0])\n      ret.frma = MP4Parser.frma(MP4Parser.findBox(data, ['frma'], start)[0])\n    })\n  }\n\n  static frma (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data_format = ''\n      for (let i = 0; i < 4; i++) {\n        ret.data_format += String.fromCharCode(data[i])\n      }\n    })\n  }\n\n  static avc1 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.avcC = MP4Parser.avcC(MP4Parser.findBox(bodyData, ['avcC'], start)[0])\n      ret.pasp = MP4Parser.pasp(MP4Parser.findBox(bodyData, ['pasp'], start)[0])\n    })\n  }\n\n  static avcC (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.configurationVersion = data[0]\n      ret.AVCProfileIndication = data[1]\n      ret.profileCompatibility = data[2]\n      ret.AVCLevelIndication = data[3]\n      ret.codec = getAvcCodec([data[1], data[2], data[3]])\n      ret.lengthSizeMinusOne = data[4] & 0x3\n      ret.spsLength = data[5] & 0x1F\n      ret.sps = []\n      let start = 6\n      for (let i = 0; i < ret.spsLength; i++) {\n        const size = readBig16(data, start)\n        start += 2\n        ret.sps.push(data.subarray(start, start + size))\n        // ret.spsInfo = SpsParser.parseSPS(ret.sps[i])\n        // ret.pixelRatio = ret.spsInfo.par_ratio\n        start += size\n      }\n      ret.ppsLength = data[start]\n      start += 1\n      ret.pps = []\n      for (let i = 0; i < ret.ppsLength; i++) {\n        const size = readBig16(data, start)\n        start += 2\n        ret.pps.push(data.subarray(start, start += size))\n        start += size\n      }\n    })\n  }\n\n  static hvc1 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.hvcC = MP4Parser.hvcC(MP4Parser.findBox(bodyData, ['hvcC'], start)[0])\n      ret.pasp = MP4Parser.pasp(MP4Parser.findBox(bodyData, ['pasp'], start)[0])\n    })\n  }\n\n  static hvcC (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data = box.data\n      ret.codec = 'hev1.1.6.L93.B0'\n      ret.configurationVersion = data[0]\n      const tmp = data[1]\n      ret.generalProfileSpace = tmp >> 6\n      ret.generalTierFlag = (tmp & 0x20) >> 5\n      ret.generalProfileIdc = tmp & 0x1F\n      ret.generalProfileCompatibility = readBig32(data, 2)\n      ret.generalConstraintIndicatorFlags = data.subarray(6, 12)\n      ret.generalLevelIdc = data[12]\n      ret.avgFrameRate = readBig16(data, 19)\n      ret.numOfArrays = data[22]\n      ret.vps = []\n      ret.sps = []\n      ret.pps = []\n      let start = 23\n      let type = 0\n      let numNalus = 0\n      let size = 0\n      for (let i = 0; i < ret.numOfArrays; i++) {\n        type = data[start] & 0x3F\n        numNalus = readBig16(data, start + 1)\n        start += 3\n        const nalus = []\n        for (let j = 0; j < numNalus; j++) {\n          size = readBig16(data, start)\n          start += 2\n          nalus.push(data.subarray(start, start + size))\n          start += size\n        }\n\n        if (type === 32) {\n          ret.vps.push(...nalus)\n        } else if (type === 33) {\n          ret.sps.push(...nalus)\n        } else if (type === 34) {\n          ret.pps.push(...nalus)\n        }\n      }\n    })\n  }\n\n  static pasp (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.hSpacing = readBig32(data)\n      ret.vSpacing = readBig32(data, 4)\n    })\n  }\n\n  static mp4a (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseAudioSampleEntry(ret, data)\n      ret.esds = MP4Parser.esds(MP4Parser.findBox(data.subarray(bodyStart), ['esds'], start + bodyStart)[0])\n    })\n  }\n\n  static esds (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.codec = 'mp4a.'\n      let start = 0\n      let byteRead = 0\n      let size = 0\n      let tag = 0\n      while (data.length) {\n        start = 0\n        tag = data[start]\n        byteRead = data[start + 1]\n        start += 2\n        while (byteRead & 0x80) {\n          size = (byteRead & 0x7F) << 7\n          byteRead = data[start]\n          start += 1\n        }\n        size += byteRead & 0x7F\n        if (tag === 3) {\n          data = data.subarray(start + 3)\n        } else if (tag === 4) {\n          ret.codec += (data[start].toString(16) + '.').padStart(3, '0')\n          data = data.subarray(start + 13)\n        } else if (tag === 5) {\n          const config = ret.config = data.subarray(start, start + size)\n          let objectType = (config[0] & 0xF8) >> 3\n          if (objectType === 31 && config.length >= 2) {\n            objectType = 32 + ((config[0] & 0x7) << 3) + ((config[1] & 0xE0) >> 5)\n          }\n          ret.objectType = objectType\n          ret.codec += objectType.toString(16)\n          if (ret.codec[ret.codec.length - 1] === '.') {\n            ret.codec = ret.codec.substring(0, ret.codec.length - 1)\n          }\n          return\n        } else {\n          if (ret.codec[ret.codec.length - 1] === '.') {\n            ret.codec = ret.codec.substring(0, ret.codec.length - 1)\n          }\n          return\n        }\n      }\n    })\n  }\n\n  static alaw (box) {\n    return parseBox(box, false, (ret, data) => {\n      parseAudioSampleEntry(ret, data)\n    })\n  }\n\n  static stts (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push({\n          count: readBig32(data, start),\n          delta: readBig32(data, start + 4)\n        })\n        start += 8\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static ctts (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      if (ret.version === 1) {\n        for (let i = 0; i < entryCount; i++) {\n          entries.push({\n            count: readBig32(data, start),\n            offset: readBig32(data, start + 4)\n          })\n          start += 8\n        }\n      } else {\n        for (let i = 0; i < entryCount; i++) {\n          entries.push({\n            count: readBig32(data, start),\n            offset: -(~readBig32(data, start + 4) + 1)\n          })\n          start += 8\n        }\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stsc (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push({\n          firstChunk: readBig32(data, start),\n          samplesPerChunk: readBig32(data, start + 4),\n          sampleDescriptionIndex: readBig32(data, start + 8)\n        })\n        start += 12\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stsz (box) {\n    return parseBox(box, true, (ret, data) => {\n      const sampleSize = readBig32(data)\n      const sampleCount = readBig32(data, 4)\n      const entrySizes = []\n      if (!sampleSize) {\n        let start = 8\n        for (let i = 0; i < sampleCount; i++) {\n          entrySizes.push(readBig32(data, start))\n          start += 4\n        }\n      }\n      ret.sampleSize = sampleSize\n      ret.sampleCount = sampleCount\n      ret.entrySizes = entrySizes\n    })\n  }\n\n  static stco (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig32(data, start))\n        start += 4\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static co64 (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig64(data, start))\n        start += 8\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stss (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig32(data, start))\n        start += 4\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static moof (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mfhd = MP4Parser.mfhd(MP4Parser.findBox(data, ['mfhd'], start)[0])\n      ret.traf = MP4Parser.findBox(data, ['traf'], start).map(t => MP4Parser.traf(t))\n    })\n  }\n\n  static mfhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.sequenceNumber = readBig32(data)\n    })\n  }\n\n  static traf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tfhd = MP4Parser.tfhd(MP4Parser.findBox(data, ['tfhd'], start)[0])\n      ret.tfdt = MP4Parser.tfdt(MP4Parser.findBox(data, ['tfdt'], start)[0])\n      ret.trun = MP4Parser.trun(MP4Parser.findBox(data, ['trun'], start)[0])\n    })\n  }\n\n  static trun (box) {\n    return parseBox(box, true, (ret, data) => {\n      const { version, flags } = ret\n      const dataLen = data.length\n      const sampleCount = ret.sampleCount = readBig32(data)\n      let offset = 4\n      if (dataLen > offset && flags & 1) {\n        ret.dataOffset = -(~readBig32(data, offset) + 1)\n        offset += 4\n      }\n      if (dataLen > offset && flags & 4) {\n        ret.firstSampleFlags = readBig32(data, offset)\n        offset += 4\n      }\n      ret.samples = []\n      if (dataLen > offset) {\n        let sample\n        for (let i = 0; i < sampleCount; i++) {\n          sample = {}\n          if (flags & 0x100) {\n            sample.duration = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x200) {\n            sample.size = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x400) {\n            sample.flags = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x800) {\n            if (version) {\n              sample.cts = -(~readBig32(data, offset + 4) + 1)\n            } else {\n              sample.cts = readBig32(data, offset)\n            }\n            offset += 4\n          }\n          ret.samples.push(sample)\n        }\n      }\n    })\n  }\n\n  static tfdt (box) {\n    return parseBox(box, true, (ret, data) => {\n      if (ret.version === 1) {\n        ret.baseMediaDecodeTime = readBig64(data)\n      } else {\n        ret.baseMediaDecodeTime = readBig32(data)\n      }\n    })\n  }\n\n  static probe (data) {\n    return !!MP4Parser.findBox(data, ['ftyp'])\n  }\n\n  static parseSampleFlags (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    }\n  }\n\n  static moovToTrack (moov, videoTrack, audioTrack) {\n    const tracks = moov.trak\n    if (!tracks || !tracks.length) return\n    const vTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const aTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    if (vTrack && videoTrack) {\n      const v = videoTrack\n      const _vTrackId = vTrack.tkhd?.trackId\n      if (_vTrackId !== null && _vTrackId !== undefined) v.id = vTrack.tkhd.trackId\n      v.tkhdDuration = vTrack.tkhd.duration\n      v.mvhdDurtion = moov.mvhd.duration\n      v.mvhdTimecale = moov.mvhd.timescale\n      v.timescale = v.formatTimescale = vTrack.mdia.mdhd.timescale\n      v.duration = vTrack.mdia.mdhd.duration || (v.mvhdDurtion / v.mvhdTimecale * v.timescale)\n      const e1 = vTrack.mdia.minf.stbl.stsd.entries[0]\n      v.width = e1.width\n      v.height = e1.height\n      if (e1.pasp) {\n        v.sarRatio = [e1.pasp.hSpacing, e1.pasp.vSpacing]\n      }\n      if (e1.hvcC) {\n        v.codecType = VideoCodecType.HEVC\n        v.codec = e1.hvcC.codec\n        v.vps = e1.hvcC.vps\n        v.sps = e1.hvcC.sps\n        v.pps = e1.hvcC.pps\n        v.hvcC = e1.hvcC.data\n      } else if (e1.avcC) {\n        v.codec = e1.avcC.codec\n        v.sps = e1.avcC.sps\n        v.pps = e1.avcC.pps\n      } else {\n        throw new Error('unknown video stsd entry')\n      }\n      v.present = true\n      v.ext = {}\n      v.ext.stss = vTrack.mdia?.minf?.stbl?.stss\n      v.ext.ctts = vTrack.mdia?.minf?.stbl?.ctts\n\n      if (e1 && e1.type === 'encv') {\n        v.isVideoEncryption = true\n        e1.default_KID = e1.sinf?.schi?.tenc.default_KID\n        e1.default_IsEncrypted = e1.sinf?.schi?.tenc.default_IsEncrypted\n        e1.default_IV_size = e1.sinf?.schi?.tenc.default_IV_size\n        v.videoSenc = vTrack.mdia.minf.stbl.senc && vTrack.mdia.minf.stbl.senc.samples\n        e1.data_format = e1.sinf?.frma?.data_format\n        v.useEME = moov.useEME\n        v.kidValue = moov.kidValue\n        v.pssh = moov.pssh\n        v.encv = e1\n      }\n    }\n\n    if (aTrack && audioTrack) {\n      const a = audioTrack\n      const _aTrackId = aTrack.tkhd?.trackId\n      if (_aTrackId !== null && _aTrackId !== undefined) a.id = aTrack.tkhd.trackId\n      a.tkhdDuration = aTrack.tkhd.duration\n      a.mvhdDurtion = moov.mvhd.duration\n      a.mvhdTimecale = moov.mvhd.timescale\n      a.timescale = a.formatTimescale = aTrack.mdia.mdhd.timescale\n      a.duration = aTrack.mdia.mdhd.duration || (a.mvhdDurtion / a.mvhdTimecale * a.timescale)\n      const e1 = aTrack.mdia.minf.stbl.stsd.entries[0]\n      a.sampleSize = e1.sampleSize\n      a.sampleRate = e1.sampleRate\n      a.channelCount = e1.channelCount\n      a.present = true\n\n      switch (e1.type) {\n        case 'alaw':\n          a.codecType = a.codec = AudioCodecType.G711PCMA\n          a.sampleRate = 8000\n          break\n        case 'ulaw':\n          a.codecType = a.codec = AudioCodecType.G711PCMU\n          a.sampleRate = 8000\n          break\n        default:\n          a.sampleDuration = AAC.getFrameDuration(a.sampleRate, a.timescale)\n          a.sampleRateIndex = AAC.getRateIndexByRate(a.sampleRate)\n          a.objectType = e1.esds?.objectType || 2\n          if (e1.esds) a.config = Array.from(e1.esds.config)\n          a.codec = e1.esds?.codec || 'mp4a.40.2'\n          break\n      }\n      a.sampleDuration = AAC.getFrameDuration(a.sampleRate, a.timescale)\n      a.objectType = e1.esds?.objectType || 2\n      if (e1.esds) {\n        if (e1.esds.config) {\n          a.config = Array.from(e1.esds.config)\n        } else {\n          console.warn('esds config is null')\n        }\n      }\n      a.codec = e1.esds?.codec || 'mp4a.40.2'\n      a.sampleRateIndex = AAC.getRateIndexByRate(a.sampleRate)\n      a.ext = {}\n      a.ext.stss = aTrack.mdia?.minf?.stbl?.stss\n      a.ext.ctts = aTrack.mdia?.minf?.stbl?.ctts\n      a.present = true\n      if (e1 && e1.type === 'enca') {\n        a.isAudioEncryption = true\n        e1.data_format = e1.sinf?.frma?.data_format\n        e1.default_KID = e1.sinf?.schi?.tenc.default_KID\n        e1.default_IsEncrypted = e1.sinf?.schi?.tenc.default_IsEncrypted\n        e1.default_IV_size = e1.sinf?.schi?.tenc.default_IV_size\n        a.audioSenc = aTrack.mdia.minf.stbl.senc && aTrack.mdia.minf.stbl.senc.samples\n        a.useEME = moov.useEME\n        a.kidValue = moov.kidValue\n        a.enca = e1\n      }\n    }\n\n    audioTrack && (audioTrack.isVideoEncryption = videoTrack ? videoTrack.isVideoEncryption : false)\n    videoTrack && (videoTrack.isAudioEncryption = audioTrack ? audioTrack.isAudioEncryption : false)\n\n    if (videoTrack?.encv || audioTrack?.enca) {\n      const vkid = videoTrack?.encv?.default_KID\n      const akid = audioTrack?.enca?.default_KID\n      const kid = (vkid || akid) ? (vkid || akid).join('') : null\n      videoTrack && (videoTrack.kid = kid)\n      audioTrack && (audioTrack.kid = kid)\n    }\n\n    videoTrack && (videoTrack.flags = 0xf01)\n    audioTrack && (audioTrack.flags = 0x701)\n\n    return {\n      videoTrack,\n      audioTrack\n    }\n  }\n\n  static evaluateDefaultDuration (videoTrack, audioTrack, videoSampleCount) {\n    const audioSampleCount = audioTrack?.samples?.length\n\n    // audio\n    if (!audioSampleCount) return 1024\n\n    const segmentDuration = 1024 * audioSampleCount / audioTrack.timescale\n\n    return segmentDuration * videoTrack.timescale / videoSampleCount\n  }\n\n  static moofToSamples (moof, videoTrack, audioTrack) {\n    const ret = {}\n\n    if (moof.mfhd) {\n      if (videoTrack) videoTrack.sequenceNumber = moof.mfhd.sequenceNumber\n      if (audioTrack) audioTrack.sequenceNumber = moof.mfhd.sequenceNumber\n    }\n\n    moof.traf.forEach(({ tfhd, tfdt, trun }) => {\n      if (!tfhd || !trun) return\n      if (tfdt) {\n        if (videoTrack && videoTrack.id === tfhd.trackId) videoTrack.baseMediaDecodeTime = tfdt.baseMediaDecodeTime\n        if (audioTrack && audioTrack.id === tfhd.trackId) audioTrack.baseMediaDecodeTime = tfdt.baseMediaDecodeTime\n      }\n      const defaultSize = tfhd.defaultSampleSize || 0\n      const defaultDuration = tfhd.defaultSampleDuration || MP4Parser.evaluateDefaultDuration(videoTrack, audioTrack, trun.samples.length || trun.sampleCount)\n      let offset = trun.dataOffset || 0\n      let dts = 0\n      let gopId = -1\n      if (!trun.samples.length && trun.sampleCount) {\n        ret[tfhd.trackId] = []\n        for (let i = 0; i < trun.sampleCount; i++) {\n          ret[tfhd.trackId].push({\n            offset,\n            dts,\n            duration: defaultDuration,\n            size: defaultSize\n          })\n          dts += defaultDuration\n          offset += defaultSize\n        }\n      } else {\n        ret[tfhd.trackId] = trun.samples.map((s, index) => {\n          s = {\n            offset,\n            dts,\n            pts: dts + (s.cts || 0),\n            duration: s.duration || defaultDuration,\n            size: s.size || defaultSize,\n            gopId,\n            keyframe: index === 0 || ((s.flags !== null && s.flags !== undefined) && ((s.flags & 65536) >>> 0) !== 65536)\n          }\n          if (s.keyframe) {\n            gopId++\n            s.gopId = gopId\n          }\n          dts += s.duration\n          offset += s.size\n          return s\n        })\n      }\n    })\n\n    return ret\n  }\n\n  static moovToSamples (moov) {\n    const tracks = moov.trak\n    if (!tracks || !tracks.length) return\n    const vTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const aTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    if (!vTrack && !aTrack) return\n    let videoSamples\n    let audioSamples\n    if (vTrack) {\n      const videoStbl = vTrack.mdia?.minf?.stbl\n      if (!videoStbl) return\n      const { stts, stsc, stsz, stco, stss, ctts } = videoStbl\n      if (!stts || !stsc || !stsz || !stco || !stss) return\n      videoSamples = getSamples(stts, stsc, stsz, stco, ctts, stss)\n    }\n    if (aTrack) {\n      const audioStbl = aTrack.mdia?.minf?.stbl\n      if (!audioStbl) return\n      const timescale = aTrack.mdia.mdhd?.timescale\n      const { stts, stsc, stsz, stco } = audioStbl\n      if (!timescale || !stts || !stsc || !stsz || !stco) return\n      audioSamples = getSamples(stts, stsc, stsz, stco)\n    }\n\n    return {\n      videoSamples,\n      audioSamples\n    }\n  }\n}\n\nfunction getSamples (stts, stsc, stsz, stco, ctts, stss) {\n  const samples = []\n  const cttsEntries = ctts?.entries\n  const stscEntries = stsc.entries\n  const stcoEntries = stco.entries\n  const stszEntrySizes = stsz.entrySizes\n  const stssEntries = stss?.entries\n  let keyframeMap\n  if (stssEntries) {\n    keyframeMap = {}\n    stssEntries.forEach(x => { keyframeMap[x - 1] = true })\n  }\n  let cttsArr\n  if (cttsEntries) {\n    cttsArr = []\n    cttsEntries.forEach(({ count, offset }) => {\n      for (let i = 0; i < count; i++) {\n        cttsArr.push(offset)\n      }\n    })\n  }\n\n  let sample\n  let gopId = -1\n  let dts = 0\n  let pos = 0\n  let chunkIndex = 0\n  let chunkRunIndex = 0\n  let offsetInChunk = 0\n  let lastSampleInChunk = stscEntries[0].samplesPerChunk\n  let lastChunkInRun = stscEntries[1] ? stscEntries[1].firstChunk - 1 : Infinity\n  stts.entries.forEach(({ count, delta }) => {\n    for (let i = 0; i < count; i++) {\n      sample = {\n        dts,\n        duration: delta,\n        size: stszEntrySizes[pos] || stsz.sampleSize,\n        offset: stcoEntries[chunkIndex] + offsetInChunk,\n        index: pos\n      }\n      if (stssEntries) {\n        sample.keyframe = keyframeMap[pos]\n        if (sample.keyframe) {\n          gopId++\n        }\n        sample.gopId = gopId\n      }\n      // sample.timeOffset = 0\n      if (cttsArr && pos < cttsArr.length) {\n        sample.pts = sample.dts + cttsArr[pos]\n        // sample.timeOffset = cttsArr[pos]\n        // if (pos === 0) {\n        //   sample.pts = sample.dts\n        //   sample.timeOffset = 0\n        // }\n      }\n      samples.push(sample)\n      dts += delta\n      pos++\n\n      if (pos < lastSampleInChunk) {\n        offsetInChunk += sample.size\n      } else {\n        chunkIndex++\n        offsetInChunk = 0\n        if (chunkIndex >= lastChunkInRun) {\n          chunkRunIndex++\n          lastChunkInRun = stscEntries[chunkRunIndex + 1] ? stscEntries[chunkRunIndex + 1].firstChunk - 1 : Infinity\n        }\n        lastSampleInChunk += stscEntries[chunkRunIndex].samplesPerChunk\n      }\n    }\n  })\n\n  return samples\n}\n\nfunction parseVisualSampleEntry (ret, data) {\n  ret.dataReferenceIndex = readBig16(data, 6)\n  ret.width = readBig16(data, 24)\n  ret.height = readBig16(data, 26)\n  ret.horizresolution = readBig32(data, 28)\n  ret.vertresolution = readBig32(data, 32)\n  ret.frameCount = readBig16(data, 40)\n  ret.depth = readBig16(data, 74)\n  return 78\n}\n\nfunction parseAudioSampleEntry (ret, data) {\n  ret.dataReferenceIndex = readBig16(data, 6)\n  ret.channelCount = readBig16(data, 16)\n  ret.sampleSize = readBig16(data, 18)\n  ret.sampleRate = readBig32(data, 24) / (1 << 16)\n  return 28\n}\n\nfunction parseBox (box, isFullBox, parse) {\n  if (!box) return\n  if (box.size !== box.data.length) throw new Error(`box ${box.type} size !== data.length`)\n  const ret = {\n    start: box.start,\n    size: box.size,\n    headerSize: box.headerSize,\n    type: box.type\n  }\n  if (isFullBox) {\n    ret.version = box.data[box.headerSize]\n    ret.flags = readBig24(box.data, box.headerSize + 1)\n    ret.headerSize += 4\n  }\n  parse(ret, box.data.subarray(ret.headerSize), ret.start + ret.headerSize)\n  return ret\n}\n\nconst padStart = function (str, length, pad) {\n  const charstr = String(pad)\n  const len = length >> 0\n  let maxlen = Math.ceil(len / charstr.length)\n  const chars = []\n  const r = String(str)\n  while (maxlen--) {\n    chars.push(charstr)\n  }\n  return chars.join('').substring(0, len - r.length) + r\n}\n\nconst toHex = function (...value) {\n  const hex = []\n  value.forEach(item => {\n    hex.push(padStart(Number(item).toString(16), 2, 0))\n  })\n  return hex[0]\n}\n","import { VideoTrack, AudioTrack, MetadataTrack, VideoSample, AudioSample } from '../model'\nimport { readBig32 } from '../utils'\nimport { MP4Parser } from './mp4-parser'\n\nexport class FMP4Demuxer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n  }\n\n  demux (videoData, audioData) {\n    const { videoTrack, audioTrack } = this\n    const videoExist = videoTrack.exist()\n    const audioExist = audioTrack.exist()\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    if (audioData) {\n      if (!audioExist) {\n        const moovBox = MP4Parser.findBox(audioData, ['moov'])[0]\n        if (!moovBox) throw new Error('cannot found moov box')\n        MP4Parser.moovToTrack(MP4Parser.moov(moovBox), null, audioTrack)\n      }\n      const moofBox = MP4Parser.findBox(audioData, ['moof'])[0]\n      if (moofBox) {\n        const samples = MP4Parser.moofToSamples(MP4Parser.moof(moofBox), null, audioTrack)[audioTrack.id]\n        const baseMediaDecodeTime = audioTrack.baseMediaDecodeTime\n        if (samples) {\n          const baseOffset = moofBox.start\n          samples.map(x => {\n            x.offset += baseOffset\n            const sampleData = audioData.subarray(x.offset, x.offset + x.size)\n            audioTrack.samples.push(new AudioSample(x.dts + baseMediaDecodeTime, sampleData, x.duration))\n          })\n        }\n      }\n    }\n\n    if (videoData) {\n      if (!videoExist && !audioExist) {\n        const moovBox = MP4Parser.findBox(videoData, ['moov'])[0]\n        if (!moovBox) throw new Error('cannot found moov box')\n        MP4Parser.moovToTrack(MP4Parser.moov(moovBox), videoTrack, audioTrack)\n      }\n      const moofBox = MP4Parser.findBox(videoData, ['moof'])[0]\n      if (moofBox) {\n        const tracks = MP4Parser.moofToSamples(MP4Parser.moof(moofBox), videoTrack, audioTrack)\n        const videoBaseMediaDecodeTime = videoTrack.baseMediaDecodeTime\n        const audioBaseMediaDecodeTime = audioTrack.baseMediaDecodeTime\n        const baseOffset = moofBox.start\n        let nalSize\n        Object.keys(tracks).forEach(k => {\n          // eslint-disable-next-line eqeqeq\n          if (videoTrack.id == k) {\n            tracks[k].map(x => {\n              x.offset += baseOffset\n              const sample = new VideoSample((x.pts || x.dts) + videoBaseMediaDecodeTime, x.dts + videoBaseMediaDecodeTime)\n              sample.duration = x.duration\n              sample.gopId = x.gopId\n              if (x.keyframe) sample.setToKeyframe()\n              const sampleData = videoData.subarray(x.offset, x.offset + x.size)\n              sample.data = sampleData\n              let start = 0\n              const len = sampleData.length - 1\n              while (start < len) {\n                nalSize = readBig32(sampleData, start)\n                start += 4\n                sample.units.push(sampleData.subarray(start, start + nalSize))\n                start += nalSize\n              }\n              videoTrack.samples.push(sample)\n            })\n            // eslint-disable-next-line eqeqeq\n          } else if (audioTrack.id == k) {\n            tracks[k].map(x => {\n              x.offset += baseOffset\n              const sampleData = videoData.subarray(x.offset, x.offset + x.size)\n              audioTrack.samples.push(new AudioSample(x.dts + audioBaseMediaDecodeTime, sampleData, x.duration))\n            })\n          }\n        })\n      }\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  reset () {\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n    this.metadataTrack.reset()\n  }\n\n  static probe (data) {\n    return MP4Parser.probe(data)\n  }\n}\n","\n// 改造为兼容IE11\nfunction Concat (ResultConstructor, ...arrays){\n  let totalLength = 0\n  arrays.forEach(function (arr){\n    totalLength += arr.length\n  })\n  const result = new ResultConstructor(totalLength)\n  let offset = 0\n  arrays.forEach(function (arr){\n    result.set(arr, offset)\n    offset += arr.length\n  })\n  return result\n}\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n\n  write (...buffer) {\n    const self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.warn(item)\n      }\n    })\n  }\n\n  static writeUint16 (value) {\n    return new Uint8Array([\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import { TrackType, VideoCodecType } from '../model'\nimport { concatUint8Array, parse /* hashVal */ } from '../utils'\nimport Buffer from './buffer'\n// import Crypto from './crypto/crypto'\nconst UINT32_MAX = 2 ** 32 - 1\n\nexport class MP4 {\n  static types = [\n    'avc1',\n    'avcC',\n    'hvc1',\n    'hvcC',\n    'dinf',\n    'dref',\n    'esds',\n    'ftyp',\n    'hdlr',\n    'mdat',\n    'mdhd',\n    'mdia',\n    'mfhd',\n    'minf',\n    'moof',\n    'moov',\n    'mp4a',\n    'mvex',\n    'mvhd',\n    'pasp',\n    'stbl',\n    'stco',\n    'stsc',\n    'stsd',\n    'stsz',\n    'stts',\n    'tfdt',\n    'tfhd',\n    'traf',\n    'trak',\n    'trex',\n    'tkhd',\n    'vmhd',\n    'smhd',\n    'ctts',\n    'stss',\n    'styp',\n    'pssh',\n    'sidx',\n    'sbgp',\n    'saiz',\n    'saio',\n    'senc',\n    'trun',\n    'encv',\n    'enca',\n    'sinf',\n    'btrt',\n    'frma',\n    'tenc',\n    'schm',\n    'schi',\n    'mehd',\n    'fiel',\n    'sdtp'\n  ].reduce((p, c) => {\n    p[c] = [c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2), c.charCodeAt(3)]\n    return p\n  }, Object.create(null));\n\n  static HDLR_TYPES = {\n    video: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]),\n    audio: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ])\n  }\n\n  static FTYPAVC1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    97, 118, 99, 49 // avc1\n  ]))\n\n  static FTYPHEV1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    104, 101, 118, 49 // hev1\n  ]))\n\n  static DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version\n    0x00, 0x00, 0x01 // entry_flags\n  ])))\n\n  static VMHD = MP4.box(MP4.types.vmhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphics mode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // op color\n  ]))\n\n  static SMHD = MP4.box(MP4.types.smhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance\n    0x00, 0x00 // reserved\n  ]))\n\n  static StblTable = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ])\n\n  static STTS = MP4.box(MP4.types.stts, MP4.StblTable)\n\n  static STSC = MP4.box(MP4.types.stsc, MP4.StblTable)\n\n  static STSZ = MP4.box(MP4.types.stsz, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]))\n\n  static STCO = MP4.box(MP4.types.stco, MP4.StblTable)\n\n  static box (type, ...payload) {\n    payload = payload.filter(Boolean)\n    const size = 8 + payload.reduce((p, c) => (p + c.byteLength), 0)\n    const ret = new Uint8Array(size)\n    ret[0] = (size >> 24) & 0xff\n    ret[1] = (size >> 16) & 0xff\n    ret[2] = (size >> 8) & 0xff\n    ret[3] = size & 0xff\n    ret.set(type, 4)\n    let offset = 8\n    payload.forEach((data) => {\n      ret.set(data, offset)\n      offset += data.byteLength\n    })\n    return ret\n  }\n\n  static ftyp (tracks) {\n    const isHevc = tracks.find(t => t.type === TrackType.VIDEO && t.codecType === VideoCodecType.HEVC)\n    return isHevc ? MP4.FTYPHEV1 : MP4.FTYPAVC1\n  }\n\n  static initSegment (tracks) {\n    const ftyp = MP4.ftyp(tracks)\n    // console.log('[remux],ftyp ,len ', ftyp.byteLength, hashVal(ftyp.toString()))\n    const init = concatUint8Array(ftyp, MP4.moov(tracks))\n    // console.log('[remux],init ,len ', init.byteLength, hashVal(init.toString()))\n    return init\n  }\n\n  static pssh (data) {\n    // const buffer = new Buffer()\n    const content = new Uint8Array(\n      [\n        0x01, 0x00, 0x00, 0x00 // version\n      ].concat(\n        [\n          0x10, 0x77, 0xef, 0xec,\n          0xc0, 0xb2, 0x4d, 0x02,\n          0xac, 0xe3, 0x3c, 0x1e,\n          0x52, 0xe2, 0xfb, 0x4b\n        ],\n        [0x00, 0x00, 0x00, 0x01],\n        parse(data.kid),\n        [0x00, 0x00, 0x00, 0x00]\n      )\n    )\n    return MP4.box(MP4.types.pssh, content)\n  }\n\n  static moov (tracks) {\n    if (tracks[0].useEME && (tracks[0].encv || tracks[0].enca)) {\n      if (!tracks[0].pssh) {\n        tracks[0].pssh = {\n          kid: tracks[0].kid\n        }\n      }\n      const pssh = this.pssh(tracks[0].pssh)\n      // console.log('[remux],pssh,', hashVal(pssh.toString()))\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        MP4.mvex(tracks),\n        ...tracks.map((t) => MP4.trak(t)),\n        pssh)\n    } else {\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        ...tracks.map((t) => MP4.trak(t)),\n        MP4.mvex(tracks)\n      )\n    }\n  }\n\n  static mvhd (duration, timescale = 90000) {\n    const mvhd = MP4.box(MP4.types.mvhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // rate\n      0x01, 0x00, // volume\n      0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // todo 0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]))\n    // console.log('[remux],mvhd, len,', mvhd.byteLength, hashVal(mvhd.toString()))\n    return mvhd\n  }\n\n  static trak (track) {\n    const trak = MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.tkhdDuration || 0, track.width, track.height),\n      MP4.mdia(track)\n    )\n    // console.log('[remux],trak, len,', trak.byteLength, track.id, hashVal(trak.toString()))\n    return trak\n  }\n\n  static tkhd (id, duration, width = 0, height = 0) {\n    const tkhd = MP4.box(MP4.types.tkhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x07, // flags、todo 0x07\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time todo\n      (id >> 24) & 0xff, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // todo (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // /*0x00*/ alternate_group  //todo type === 'video' ? 0x01 : 0x00（第二个位置）\n      0x01, 0x00, // /* 0x01 */, 0x00, // non-audio track volume  //todo type === 'audio' ? 0x01 : 0x00（第一个位置）\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      (width >> 8) & 0xff, width & 0xff, 0x00, 0x00,\n      (height >> 8) & 0xff, height & 0xff, 0x00, 0x00\n    ]))\n    // console.log('[remux],tkhd, len,', tkhd.byteLength, hashVal(tkhd.toString()))\n    return tkhd\n  }\n\n  static mdia (track) {\n    const mdia = MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minf(track))\n    // console.log('[remux],mdia, len,', mdia.byteLength, hashVal(mdia.toString()))\n    return mdia\n  }\n\n  static mdhd (duration, timescale = 90000) {\n    const mdhd = MP4.box(MP4.types.mdhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // todo 0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,//todo\n      0x55, 0xc4, // 'und' language (undetermined) //todo 0x15, 0xC7\n      0x00, 0x00 // pre_defined\n    ]))\n    // console.log('[remux],mdhd, len,', mdhd.byteLength, hashVal(mdhd.toString()))\n    return mdhd\n  }\n\n  static hdlr (type) {\n    const hdlr = MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type])\n    // console.log('[remux],hdlr, len,', hdlr.byteLength, hashVal(hdlr.toString()))\n    return hdlr\n  }\n\n  static minf (track) {\n    const minf = MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stbl(track))\n    // console.log('[remux],minf, len,', minf.byteLength, hashVal(minf.toString()))\n    return minf\n  }\n\n  static stbl (track) {\n    const extBox = []\n    if (track && track.ext) {\n      track.ext.stss && extBox.push(MP4.stss(track.ext.stss.entries))\n      // track.ext.stss && extBox.push(MP4.ctts(track.ext.stss.entries))\n    }\n    const stbl = MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.STTS, extBox[0], MP4.STSC, MP4.STSZ, MP4.STCO)\n    // console.log('[remux],stbl, len,', stbl.byteLength, hashVal(stbl.toString()))\n    return stbl\n  }\n\n  static stsd (track) {\n    let content\n    if (track.type === 'audio') {\n      if (track.useEME && track.enca) {\n        content = MP4.enca(track)\n        // console.log('[remux],enca, len,', content.byteLength, track.type, hashVal(content.toString()))\n      } else {\n        content = MP4.mp4a(track)\n        // console.log('[remux],mp4a, len,', content.byteLength, track.type, hashVal(content.toString()))\n      }\n    } else if (track.useEME && track.encv) {\n      content = MP4.encv(track)\n      // console.log('[remux],encv, len,', content.byteLength, track.type, hashVal(content.toString()))\n    } else {\n      content = MP4.avc1hev1(track)\n      // console.log('[remux],avc1hev1, len,', content.byteLength, track.type, hashVal(content.toString()))\n    }\n    const stsd = MP4.box(MP4.types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01 // entry_count\n    ]), content)\n    // console.log('[remux],stsd, len,', stsd.byteLength, hashVal(stsd.toString()))\n    return stsd\n  }\n\n  static enca (data) {\n    const channelCount = data.enca.channelCount\n    const sampleRate = data.enca.sampleRate\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (sampleRate >> 8) & 0xff,\n      sampleRate & 0xff, //\n      0x00, 0x00\n    ])\n    const esds = MP4.esds(data.config)\n    // console.log('[remux],esds, len,', esds.byteLength, hashVal(esds.toString()))\n    const sinf = MP4.sinf(data.enca)\n    // console.log('[remux],sinf, len,', sinf.byteLength, hashVal(sinf.toString()))\n    return MP4.box(MP4.types.enca, content, esds, sinf)\n  }\n\n  static encv (track) {\n    const sps = track.sps.length > 0 ? track.sps[0] : []\n    const pps = track.pps.length > 0 ? track.pps[0] : []\n    const width = track.width\n    const height = track.height\n    const hSpacing = track.sarRatio[0]\n    const vSpacing = track.sarRatio[1]\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1;\n    const avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1, // 目前只处理一个sps\n      sps.length >>> 8 & 0xff,\n      sps.length & 0xff\n    ].concat(...sps).concat([\n      0x01,\n      pps.length >>> 8 & 0xff,\n      pps.length & 0xff\n    ]).concat(...pps))\n    const btrt = new Uint8Array([\n      0x00, 0x00, 0x58, 0x39,\n      0x00, 0x0F, 0xC8, 0xC0,\n      0x00, 0x04, 0x56, 0x48\n    ])\n    const sinf = MP4.sinf(track.encv)\n    const pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n    return MP4.box(MP4.types.encv, content, MP4.box(MP4.types.avcC, avcc), MP4.box(MP4.types.btrt, btrt), sinf, MP4.box(MP4.types.pasp, pasp))\n  }\n\n  static schi (data) {\n    const content = new Uint8Array([])\n    const tenc = MP4.tenc(data)\n    return MP4.box(MP4.types.schi, content, tenc)\n  }\n\n  static tenc (data) {\n    //  用于每个track的加密参数（包括KID、初始化向量、加密标志位），包含在TrackEncryptionBox(‘tenc’)中。\n    const content = new Uint8Array(\n      [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // skip\n        data.default_IsEncrypted & 0xff, // default_isProtected\n        data.default_IV_size & 0xff // default_Per_Sample_IV_Size\n      ].concat(parse(data.default_KID)))\n    return MP4.box(MP4.types.tenc, content)\n  }\n\n  static sinf (data) {\n    const content = new Uint8Array([])\n    const frma = new Uint8Array([\n      data.data_format.charCodeAt(0),\n      data.data_format.charCodeAt(1),\n      data.data_format.charCodeAt(2),\n      data.data_format.charCodeAt(3)\n    ])\n    const schm = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x63, 0x65, 0x6E, 0x63, // cenc\n      0x00, 0x01, 0x00, 0x00 // version\n    ])\n    const schi = MP4.schi(data)\n    return MP4.box(MP4.types.sinf, content, MP4.box(MP4.types.frma, frma), MP4.box(MP4.types.schm, schm), schi)\n  }\n\n  static avc1hev1 (track) {\n    const isHevc = track.codecType === VideoCodecType.HEVC\n    const typ = isHevc ? MP4.types.hvc1 : MP4.types.avc1\n    const config = isHevc ? MP4.hvcC(track) : MP4.avcC(track)\n    const boxes = [\n      new Uint8Array([\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width >> 8) & 0xff, track.width & 0xff, // width\n        (track.height >> 8) & 0xff, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, // compressor name\n        0x00, 0x18, // depth\n        0x11, 0x11 // pre_defined = -1 //todo\n      ]), config\n    ]\n    // console.log('[remux],avc1hev1_0, len,', boxes[0].byteLength, hashVal(boxes[0].toString()))\n    // console.log('[remux],avc1hev1_1, len,', boxes[1].byteLength, hashVal(boxes[1].toString()))\n    if (isHevc) {\n      boxes.push(MP4.box(MP4.types.fiel, new Uint8Array([0x01, 0x00])))\n      // console.log('[remux],fiel, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    } else if (track.sarRatio && track.sarRatio.length > 1) {\n      boxes.push(MP4.pasp(track.sarRatio))\n      // console.log('[remux],pasp, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    }\n    return MP4.box(typ, ...boxes)\n  }\n\n  static avcC (track) {\n    const sps = []\n    const pps = []\n\n    let len\n    track.sps.forEach((s) => {\n      len = s.byteLength\n      sps.push((len >>> 8) & 0xff)\n      sps.push(len & 0xff)\n      sps.push(...s)\n    })\n\n    track.pps.forEach((p) => {\n      len = p.byteLength\n      pps.push((len >>> 8) & 0xff)\n      pps.push(len & 0xff)\n      pps.push(...p)\n    })\n\n    return MP4.box(MP4.types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      sps[3], // AVCProfileIndication\n      sps[4], // profile_compatibility\n      sps[5], // AVCLevelIndication\n      0xfc | 3, // lengthSizeMinusOne\n      0xe0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n    ].concat(...sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets\n      .concat(...pps)))\n  }\n\n  static hvcC (track) {\n    const hvcC = track.hvcC\n    if (hvcC instanceof ArrayBuffer || hvcC instanceof Uint8Array) return hvcC\n    const { vps, sps, pps } = track\n    let data\n    if (hvcC) {\n      const pcf = hvcC.generalProfileCompatibilityFlags\n      const cif = hvcC.generalConstraintIndicatorFlags\n      const numOfArrays = (vps.length && 1) + (sps.length && 1) + (pps.length && 1)\n      data = [\n        0x01, // configurationVersion\n        hvcC.generalProfileSpace << 6 | hvcC.generalTierFlag << 5 | hvcC.generalProfileIdc,\n        pcf >>> 24, pcf >>> 16, pcf >>> 8, pcf,\n        cif[0], cif[1], cif[2], cif[3], cif[4], cif[5],\n        hvcC.generalLevelIdc,\n        0xF0, 0x00, // min_spatial_segmentation_idc\n        0xFC, // parallelismType\n        hvcC.chromaFormatIdc | 0xFC,\n        hvcC.bitDepthLumaMinus8 | 0xF8,\n        hvcC.bitDepthChromaMinus8 | 0xF8,\n        0x00, 0x00, // avgFrameRate\n        hvcC.numTemporalLayers << 3 | hvcC.temporalIdNested << 2 | 3,\n        numOfArrays\n      ]\n      const write = (x) => {\n        data.push(x.length >> 8, x.length)\n        data.push(...x)\n      }\n      if (vps.length) {\n        data.push(0xA0, 0x00, vps.length)\n        vps.forEach(write)\n      }\n      if (sps.length) {\n        data.push(0xA1, 0x00, sps.length)\n        sps.forEach(write)\n      }\n      if (pps.length) {\n        data.push(0xA2, 0x00, pps.length)\n        pps.forEach(write)\n      }\n    } else {\n      data = [\n        0x01, // configurationVersion\n        0x01, // profile_space + tier_flag + profile_idc\n        0x60, 0x00, 0x00, 0x00, // general_profile_compatibility\n        0x90, 0x00, 0x00, 0x00, 0x00, 0x00, // constraint_indicator_flags\n        0x5D, // level_idc=90\n        0xF0, 0x00, 0xFC, 0xFD, // profile_compatibility_indications\n        0xF8, // ‘11111’b + bitDepthLumaMinus8\n        0xF8, // ‘11111’b + bitDepthChromaMinus8\n        0x00, 0x00, // avgFrameRate\n        0x0F, // constantFrameRate + numTemporalLayers + ‘1’b + lengthSizeMinusOne\n        0x03, // numOfArrays\n\n        // vps\n        0xA0, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x18, // nalUnitLength\n        0x40, 0x01, 0x0C, 0x01, 0xFF, 0xFF, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0x99, 0x98, 0x09,\n\n        // sps\n        0xA1, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x2D, // nalUnitLength\n        0x42, 0x01, 0x01, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0xA0, 0x02,\n        0x80, 0x80, 0x2D, 0x16, 0x59, 0x99, 0xA4, 0x93, 0x2B, 0x9A, 0x80, 0x80, 0x80, 0x82, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00,\n        0x00, 0x03, 0x00, 0x32, 0x10,\n\n        // pps\n        0xA2, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x07, // nalUnitLength\n        0x44, 0x01, 0xC1, 0x72, 0xB4, 0x62, 0x40\n      ]\n    }\n    return MP4.box(MP4.types.hvcC, new Uint8Array(data))\n  }\n\n  static pasp ([hSpacing, vSpacing]) {\n    return MP4.box(MP4.types.pasp, new Uint8Array([\n      hSpacing >> 24, (hSpacing >> 16) & 0xff, (hSpacing >> 8) & 0xff, hSpacing & 0xff,\n      vSpacing >> 24, (vSpacing >> 16) & 0xff, (vSpacing >> 8) & 0xff, vSpacing & 0xff\n    ]))\n  }\n\n  static mp4a (track) {\n    return MP4.box(MP4.types.mp4a, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount,\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.sampleRate >> 8) & 0xff, track.sampleRate & 0xff,\n      0x00, 0x00\n    ]), track.config.length ? MP4.esds(track.config) : undefined)\n  }\n\n  static esds (config) {\n    const len = config.length\n    const esds = MP4.box(MP4.types.esds, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x03, // tag\n      0x17 + len, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      0x04, // tag\n      0x0f + len, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      0x05 // tag, DecoderSpecificInfoTag\n    ].concat([len])\n      .concat(config)\n      .concat(\n        [0x06, 0x01, 0x02]// GASpecificConfig\n      )\n    ))\n    // console.log('[remux],esds ,len ', esds.byteLength, hashVal(esds.toString()))\n    return esds\n  }\n\n  static mvex (tracks) {\n    // const mehd = MP4.box(MP4.types.mehd, this.extension(0, 0), Buffer.writeUint32(tracks[0].tkhdDuration))\n    // const mvex = MP4.box(MP4.types.mvex, mehd, MP4.trex1(1), MP4.trex2(2))\n    // // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    // const mvex = MP4.box(MP4.types.mvex, MP4.trex1(1), MP4.trex2(2))\n    const mvex = MP4.box(MP4.types.mvex, ...tracks.map((t) => MP4.trex(t.id)))\n    // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    return mvex\n  }\n\n  static trex (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex1 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x02, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex2 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x04, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x02, 0x00, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static moof (tracks) {\n    const moof = MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].samples ? tracks[0].samples[0].gopId : 0), ...tracks.map((t) => MP4.traf(t)))\n    // console.log('[remux],moof, len', moof.byteLength)\n    return moof\n    // return MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].gopId), ...tracks.map((t) => MP4.traf(t)))\n  }\n\n  static mfhd (sequenceNumber) {\n    // sequenceNumber += 1\n    const mfhd = MP4.box(MP4.types.mfhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      sequenceNumber >> 24, (sequenceNumber >> 16) & 0xff, (sequenceNumber >> 8) & 0xff, sequenceNumber & 0xff\n    ]))\n    // console.log('[remux],mfhd, len,', mfhd.byteLength, hashVal(mfhd.toString()))\n    return mfhd\n  }\n\n  static traf (track) {\n    const tfhd = MP4.tfhd(track.id)\n    // console.log('[remux],tfhd, len,', tfhd.byteLength, hashVal(tfhd.toString()), ', trackid = ', track.id)\n    // console.log('[remux],tfdt,baseMediaDecodeTime,', track.baseMediaDecodeTime)\n    const tfdt = MP4.tfdt(track, track.baseMediaDecodeTime)\n    let sencLength = 0\n    let samples\n    if (track.isVideo && track.videoSenc) {\n      samples = track.videoSenc\n      samples.forEach(function (item) {\n        sencLength = sencLength + 8\n        if (item.subsamples && item.subsamples.length) {\n          sencLength = sencLength + 2\n          sencLength = sencLength + item.subsamples.length * 6\n        }\n      })\n    }\n    track.videoSencLength = sencLength\n    // console.log('[remux],tfdt, len,', tfdt.toString().length)\n    // console.log('[remux],tfdt, len,', tfdt.byteLength, hashVal(tfdt.toString()))\n    if (!track.useEME || (!track.isVideoEncryption && !track.isAudioEncryption)) {\n      const sdtp = MP4.sdtp(track)\n      // console.log('[remux],sdtp, len,', sdtp.byteLength, hashVal(sdtp.toString()))\n      const offset = 16 + // tfhd\n        20 + // tfdt\n        8 + // traf header\n        16 + // mfhd\n        8 + // moof header\n        8 // mdat header\n      return MP4.box(MP4.types.traf, tfhd, tfdt, sdtp, MP4.trun(track.samples, sdtp.byteLength + offset))\n    } else if (track.isVideoEncryption) {\n      if (track.isVideo) {\n        // 加密视频\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const trun = MP4.trun1(track)\n        const senc = MP4.senc(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, saiz, saio, trun, senc)\n        // console.log('[remux],trex_video, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      } else {\n        // 视频加密，音频加密和未加密处理\n        if (!track.isAudioEncryption) {\n          // 音频未加密\n          const sbgp = MP4.sbgp()\n          const trun = MP4.trun1(track)\n          return MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, trun)\n        } else {\n          // 音频加密\n          const sbgp = MP4.sbgp()\n          const saiz = MP4.saiz(track)\n          const saio = MP4.saio(track)\n          const senc = MP4.senc(track)\n          const trun = MP4.trun1(track)\n          const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n          // console.log('[remux],trex_audio, len,', traf.byteLength, hashVal(traf.toString()))\n          return traf\n        }\n      }\n    } else {\n      // 视频未加密，音频加密\n      if (track.isVideo) {\n        const trun = MP4.trun1(track)\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun)\n      } else {\n        const sbgp = MP4.sbgp()\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const senc = MP4.senc(track)\n        const trun = MP4.trun1(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n        // console.log('[remux],trex, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      }\n    }\n  }\n\n  static sdtp (data) {\n    const buffer = new Buffer()\n    data.samples.forEach(item => {\n      buffer.write(new Uint8Array(data.isVideo ? [item.keyframe ? 32 : 16] : [16]))\n    })\n    return MP4.box(MP4.types.sdtp, this.extension(0, 0), buffer.buffer)\n  }\n\n  static trun1 (data) {\n    // const id = data.id\n    // const ceil = id === 1 ? 12 : 4\n    const buffer = new Buffer()\n    const sampleCount = Buffer.writeUint32(data.samples.length)\n    let offset = null\n    if (data.isVideo) {\n      const sencLength = data.videoSencLength\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      17 + //saiz\n      24 + //saio\n      data.samples.length*16\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      12(header) + sencLength //senc\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n      = 149+data.samples.length * 16 + sencLength\n       */\n      offset = Buffer.writeUint32(data.samples.length * 16 + sencLength + 149)\n      if (!data.isVideoEncryption && data.isAudioEncryption) {\n        offset = Buffer.writeUint32(data.samples.length * 16 + 92)\n      }\n    } else {\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      28 + //sbgp\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n       */\n      let len = data.samples.length * 12 + 124\n      if (data.isAudioEncryption) {\n        len = data.samples.length * 12 + 8 * data.audioSenc.length + 177\n      }\n      offset = Buffer.writeUint32(len)\n    }\n\n    data.samples.forEach(item => {\n      buffer.write(Buffer.writeUint32(item.duration))\n      buffer.write(Buffer.writeUint32(item.size))\n      buffer.write(Buffer.writeUint32(item.keyframe ? 0x02000000 : 0x00010000))\n      if (data.isVideo) {\n        buffer.write(Buffer.writeUint32(item.cts ? item.cts : 0))\n      }\n    })\n\n    return MP4.box(MP4.types.trun, this.extension(0, data.flags), sampleCount, offset, buffer.buffer)\n  }\n\n  static senc (data) {\n    const buffer = new Buffer()\n    const len = data.samples.length\n    const ceil = data.isVideo ? 16 : 8\n    const flag = data.isVideo ? 2 : 0\n    let samples = []\n    let samplesLength = 0\n    if (data.isVideo) {\n      samples = data.videoSenc\n      samplesLength = data.videoSencLength\n    } else {\n      samples = data.audioSenc\n    }\n    samplesLength = samplesLength || ceil * len\n    buffer.write(\n      Buffer.writeUint32(16 + samplesLength), MP4.types.senc, this.extension(0, flag)\n    )\n    buffer.write(Buffer.writeUint32(len))\n    samples.forEach(item => {\n      for (let i = 0; i < item.InitializationVector.length; i++) {\n        buffer.write(new Uint8Array([item.InitializationVector[i]]))\n      }\n      if (item.subsamples && item.subsamples.length) {\n        buffer.write(Buffer.writeUint16(item.subsamples.length))\n        item.subsamples.forEach(value => {\n          buffer.write(Buffer.writeUint16(value.BytesOfClearData))\n          buffer.write(Buffer.writeUint32(value.BytesOfProtectedData))\n        })\n      }\n    })\n    return buffer.buffer\n    // return MP4.box(MP4.types.senc, this.extension(0, flag), buffer.buffer)\n  }\n\n  static saio (data) {\n    let length = data.samples.length * 12 + 141\n    if (!data.isVideo && data.isAudioEncryption) {\n      length = 149\n    }\n    const content = new Uint8Array([\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x00, 0x00,\n      (length >> 24) & 0xff,\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff\n    ])\n    return MP4.box(MP4.types.saio, content)\n  }\n\n  static saiz (data) {\n    const samplesLength = data.samples.length\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x10, // default sample info size\n      (samplesLength >> 24) & 0xff,\n      (samplesLength >> 16) & 0xff,\n      (samplesLength >> 8) & 0xff,\n      samplesLength & 0xff\n    ])\n    return MP4.box(MP4.types.saiz, content)\n  }\n\n  static sbgp () {\n    const content = new Uint8Array([\n      0x72, 0x6F, 0x6C, 0x6C, // sgpd, grouping_type\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x01, 0x19,\n      0x00, 0x00, 0x00, 0x01\n    ])\n    return MP4.box(MP4.types.sbgp, this.extension(0, 0), content)\n  }\n\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n\n  static tfhd (id) {\n    return MP4.box(MP4.types.tfhd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags todo 0x00\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff // track_ID\n    ]))\n  }\n\n  static tfdt (data, baseMediaDecodeTime) {\n    const upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1))\n    const lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1))\n    if (data.useEME && (data.isVideoEncryption || data.isAudioEncryption)) {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    } else {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x01, // version 1\n        0x00, 0x00, 0x00, // flags\n        upperWordBaseMediaDecodeTime >> 24,\n        (upperWordBaseMediaDecodeTime >> 16) & 0xff,\n        (upperWordBaseMediaDecodeTime >> 8) & 0xff,\n        upperWordBaseMediaDecodeTime & 0xff,\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    }\n  }\n\n  static trun (samples, offset) {\n    const sampleLen = samples.length\n    const dataLen = 12 + (16 * sampleLen)\n    offset += 8 + dataLen\n    const data = new Uint8Array(dataLen)\n    data.set([\n      0x00, // version\n      0x00, 0x0f, 0x01, // flags\n      (sampleLen >>> 24) & 0xff, (sampleLen >>> 16) & 0xff, (sampleLen >>> 8) & 0xff, sampleLen & 0xff,\n      (offset >>> 24) & 0xff, (offset >>> 16) & 0xff, (offset >>> 8) & 0xff, offset & 0xff // data_offset\n    ], 0)\n    for (let i = 0; i < sampleLen; i++) {\n      const {\n        duration, size, flag = {}, cts = 0\n      } = samples[i]\n      data.set([\n        (duration >>> 24) & 0xff, (duration >>> 16) & 0xff, (duration >>> 8) & 0xff, duration & 0xff,\n        (size >>> 24) & 0xff, (size >>> 16) & 0xff, (size >>> 8) & 0xff, size & 0xff,\n        (flag.isLeading << 2) | (flag.dependsOn === null || flag.dependsOn === undefined ? 1 : flag.dependsOn),\n        (flag.isDependedOn << 6) | (flag.hasRedundancy << 4) | (flag.paddingValue << 1) | (flag.isNonSyncSample === null || flag.isNonSyncSample === undefined ? 1 : flag.isNonSyncSample),\n        flag.degradationPriority & (0xf0 << 8), flag.degradationPriority & 0x0f, // sample_flags\n        (cts >>> 24) & 0xff, (cts >>> 16) & 0xff, (cts >>> 8) & 0xff, cts & 0xff // sample_composition_time_offset\n      ], 12 + 16 * i)\n    }\n\n    return MP4.box(MP4.types.trun, data)\n  }\n\n  static moovMP4 (tracks) {\n    return MP4.box(MP4.types.moov,\n      MP4.mvhd(tracks[0].duration, tracks[0].timescale),\n      ...tracks.map((t) => MP4.trackMP4(t)))\n  }\n\n  static trackMP4 (track) {\n    return MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.duration, track.width, track.height),\n      MP4.mdiaMP4(track)\n    )\n  }\n\n  static mdiaMP4 (track) {\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minfMP4(track))\n  }\n\n  static minfMP4 (track) {\n    return MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stblMP4(track))\n  }\n\n  static stblMP4 (track) {\n    const { ext } = track\n    const boxes = [\n      MP4.stsd(track),\n      MP4.stts(ext.stts),\n      MP4.stsc(ext.stsc),\n      MP4.stsz(ext.stsz),\n      MP4.stco(ext.stco)\n    ]\n\n    if (ext.stss.length) {\n      boxes.push(MP4.stss(ext.stss))\n    }\n\n    if (ext.ctts.length) {\n      boxes.push(MP4.ctts(ext.ctts))\n    }\n\n    return MP4.box(MP4.types.stbl, ...boxes)\n  }\n\n  static stts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n\n    return MP4.box(MP4.types.stts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsc (entries) {\n    const len = entries.length\n    const data = new Uint8Array(12 * len)\n    let offset = 0\n    entries.forEach(({ firstChunk, samplesPerChunk, sampleDescIndex }) => {\n      data.set([\n        firstChunk >> 24, (firstChunk >> 16) & 0xff, (firstChunk >> 8) & 0xff, firstChunk & 0xff,\n        samplesPerChunk >> 24, (samplesPerChunk >> 16) & 0xff, (samplesPerChunk >> 8) & 0xff, samplesPerChunk & 0xff,\n        sampleDescIndex >> 24, (sampleDescIndex >> 16) & 0xff, (sampleDescIndex >> 8) & 0xff, sampleDescIndex & 0xff\n      ], offset)\n      offset += 12\n    })\n    return MP4.box(MP4.types.stsc, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsz (samplesSizes) {\n    const len = samplesSizes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    samplesSizes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stsz, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stco (offsets) {\n    const len = offsets.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    offsets.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stco, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stss (keyframeIndexes) {\n    const len = keyframeIndexes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    keyframeIndexes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stss, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static ctts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n    return MP4.box(MP4.types.ctts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static styp () {\n    return MP4.box(MP4.types.styp, new Uint8Array([\n      0x6D, 0x73, 0x64, 0x68,\n      0x00, 0x00, 0x00, 0x00,\n      0x6D, 0x73, 0x64, 0x68,\n      0x6D, 0x73, 0x69, 0x78\n    ]))\n  }\n\n  // data.sampleOffset 指的是samples的序列号。_samples[0].idx\n  static sidx (data) {\n    // const buffer = new Buffer()\n    const timescale = data.timescale\n    const duration = data.samples[0].duration\n    const durationCount = duration * data.samples.length\n    const earliestTime = data.samples[0].sampleOffset * duration\n    let mdatSize = 8\n    data.samples.forEach(item => {\n      mdatSize += item.size\n    })\n    let length = 0\n    if (data.isVideo) {\n      let sencLength = 0\n      let samples\n      if (data.videoSenc) {\n        samples = data.videoSenc\n      }\n      if (data.isVideo) {\n        samples.forEach(item => {\n          sencLength = sencLength + 8\n          if (item.subsamples && item.subsamples.length) {\n            sencLength = sencLength + 2\n            sencLength = sencLength + item.subsamples.length * 6\n          }\n        })\n      }\n      data.videoSencLength = sencLength\n      length = mdatSize + 141 + data.samples.length * 16 + sencLength\n      if (data.useEME && data.isAudioEncryption && !data.isVideoEncryption) {\n        length = mdatSize + (data.samples.length * 16) + 84\n      }\n    } else {\n      length = mdatSize + 116 + data.samples.length * 12\n      if (data.useEME && data.isAudioEncryption) {\n        length = mdatSize + 169 + data.samples.length * 12 + 8 * data.audioSenc.length\n      }\n    }\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, data.id & 0xff, // ref_id\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      (earliestTime >> 24) & 0xff,\n      (earliestTime >> 16) & 0xff,\n      (earliestTime >> 8) & 0xff,\n      earliestTime & 0xff, // earliest_presentation_time\n      0x00, 0x00, 0x00, 0x00, // first_offset\n      0x00, 0x00, // reserved\n      0x00, 0x01, // ref_count\n      // 0x00, 0x04, 0x11, 0xCF, // ref_size + ref_type\n      // 0x00, 0x01, 0x0A, 0xA6, // ref_size + ref_type\n      0x00, // ref_size + ref_type ref_size = moof.size + mdat.size\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff,\n      (durationCount >> 24) & 0xff,\n      (durationCount >> 16) & 0xff,\n      (durationCount >> 8) & 0xff,\n      durationCount & 0xff,\n      0x90, 0x00, 0x00, 0x00\n    ])\n    return MP4.box(MP4.types.sidx, content)\n  }\n\n  static mdat (data) {\n    const mdat = MP4.box(MP4.types.mdat, data)\n    // console.log('[remux],mdat ,len ', mdat.byteLength, hashVal(mdat.toString()))\n    return mdat\n  }\n}\n","\nexport class Logger {\n  constructor (name, enable) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    Logger.disabled = enable\n  }\n\n  debug (...args) {\n    if (Logger.disabled) return\n    console.debug(this._prefix, ...args)\n  }\n\n  log (...args) {\n    if (Logger.disabled) return\n    console.log(this._prefix, ...args)\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  error (...args) {\n    if (Logger.disabled) return\n    console.error(this._prefix, ...args)\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","import {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Constants table\nconst T = [];\n\n// Compute constants\nfor (let i = 0; i < 64; i += 1) {\n  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n}\n\nconst FF = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & c) | (~b & d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & d) | (c & ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = (a, b, c, d, x, s, t) => {\n  const n = a + (b ^ c ^ d) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = (a, b, c, d, x, s, t) => {\n  const n = a + (c ^ (b | ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\n/**\n * MD5 hash algorithm.\n */\nexport class MD5Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = M[offset_i];\n\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n\n    // Shortcuts\n    const H = this._hash.words;\n\n    const M_offset_0 = _M[offset + 0];\n    const M_offset_1 = _M[offset + 1];\n    const M_offset_2 = _M[offset + 2];\n    const M_offset_3 = _M[offset + 3];\n    const M_offset_4 = _M[offset + 4];\n    const M_offset_5 = _M[offset + 5];\n    const M_offset_6 = _M[offset + 6];\n    const M_offset_7 = _M[offset + 7];\n    const M_offset_8 = _M[offset + 8];\n    const M_offset_9 = _M[offset + 9];\n    const M_offset_10 = _M[offset + 10];\n    const M_offset_11 = _M[offset + 11];\n    const M_offset_12 = _M[offset + 12];\n    const M_offset_13 = _M[offset + 13];\n    const M_offset_14 = _M[offset + 14];\n    const M_offset_15 = _M[offset + 15];\n\n    // Working varialbes\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n\n    // Computation\n    a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n    d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n    c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n    b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n    a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n    d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n    c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n    b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n    a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n    d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n    c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n    b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n    a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n    d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n    c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n    b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n    a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n    d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n    c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n    b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n    a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n    d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n    c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n    b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n    a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n    d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n    c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n    b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n    a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n    d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n    c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n    b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n    a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n    d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n    c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n    b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n    a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n    d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n    c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n    b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n    a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n    d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n    c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n    b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n    a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n    d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n    c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n    b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n    a = II(a, b, c, d, M_offset_0, 6, T[48]);\n    d = II(d, a, b, c, M_offset_7, 10, T[49]);\n    c = II(c, d, a, b, M_offset_14, 15, T[50]);\n    b = II(b, c, d, a, M_offset_5, 21, T[51]);\n    a = II(a, b, c, d, M_offset_12, 6, T[52]);\n    d = II(d, a, b, c, M_offset_3, 10, T[53]);\n    c = II(c, d, a, b, M_offset_10, 15, T[54]);\n    b = II(b, c, d, a, M_offset_1, 21, T[55]);\n    a = II(a, b, c, d, M_offset_8, 6, T[56]);\n    d = II(d, a, b, c, M_offset_15, 10, T[57]);\n    c = II(c, d, a, b, M_offset_6, 15, T[58]);\n    b = II(b, c, d, a, M_offset_13, 21, T[59]);\n    a = II(a, b, c, d, M_offset_4, 6, T[60]);\n    d = II(d, a, b, c, M_offset_11, 10, T[61]);\n    c = II(c, d, a, b, M_offset_2, 15, T[62]);\n    b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n  }\n  /* eslint-ensable no-param-reassign */\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\n    const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n    const nBitsTotalL = nBitsTotal;\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n      (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\n    );\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\n    );\n\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 4; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.MD5('message');\n *     var hash = CryptoJS.MD5(wordArray);\n */\nexport const MD5 = Hasher._createHelper(MD5Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacMD5(message, key);\n */\nexport const HmacMD5 = Hasher._createHmacHelper(MD5Algo);\n","import { MP4 } from './mp4'\nimport { concatUint8Array } from '../utils'\nimport { Logger } from './logger'\n\n/**\n * @typedef {Object} RemuxResult\n * @property {Uint8Array} [videoInitSegment]\n * @property {Uint8Array} [audioInitSegment]\n * @property {Uint8Array} [videoSegment]\n * @property {Uint8Array} [audioSegment]\n */\n\nexport class FMP4Remuxer {\n  /**\n   * @param {import('../model').VideoTrack} videoTrack\n   * @param {import('../model').AudioTrack} audioTrack\n   */\n  constructor (videoTrack, audioTrack, options) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    const browserVersions = /Chrome\\/([^.]+)/.exec(navigator.userAgent)\n    this.forceFirstIDR = browserVersions && Number(browserVersions[1]) < 50\n    this.log = new Logger('FMP4Remuxer', options && options.openLog ? !options.openLog : true)\n  }\n\n  /**\n   * @param {boolean} [createInit=false]\n   * @returns {RemuxResult}\n   */\n  remux (createInit = false, options = {}) {\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n    const hasVideo = videoTrack.exist()\n    const hasAudio = audioTrack.exist()\n\n    let videoInitSegment\n    let audioInitSegment\n\n    let initSegment\n    const tracks = []\n\n    if (createInit) {\n      if (options && options.initMerge) {\n        if (hasVideo) {\n          tracks.push(this.videoTrack)\n        }\n        if (hasAudio) {\n          tracks.push(this.audioTrack)\n        }\n        initSegment = MP4.initSegment(tracks)\n      } else {\n        if (hasVideo) videoInitSegment = MP4.initSegment([this.videoTrack])\n        if (hasAudio) audioInitSegment = MP4.initSegment([this.audioTrack])\n      }\n    }\n\n    let videoSegment\n    let audioSegment\n    if (hasVideo && videoTrack.hasSample()) {\n      videoSegment = this._remuxVideo()\n    }\n\n    if (hasAudio && audioTrack.hasSample()) {\n      audioSegment = this._remuxAudio()\n    }\n\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    return {\n      initSegment,\n      videoInitSegment,\n      audioInitSegment,\n      videoSegment,\n      audioSegment\n    }\n  }\n\n  _remuxVideo () {\n    const track = this.videoTrack\n    if (this.forceFirstIDR) {\n      track.samples[0].flag = { dependsOn: 2, isNonSyncSample: 0 }\n    }\n    const samples = track.samples\n\n    let mdatSize = 0\n\n    samples.forEach((s) => {\n      mdatSize += s.units.reduce((t, c) => (t + c.byteLength), 0)\n      mdatSize += (s.units.length * 4)\n    })\n\n    const mdata = new Uint8Array(mdatSize)\n    const mdatView = new DataView(mdata.buffer)\n\n    for (let i = 0, l = samples.length, offset = 0, sample; i < l; i++) {\n      sample = samples[i]\n\n      let sampleSize = 0\n      sample.units.forEach((u) => {\n        mdatView.setUint32(offset, u.byteLength)\n        offset += 4\n        mdata.set(u, offset)\n        offset += u.byteLength\n        sampleSize += (4 + u.byteLength)\n      })\n      sample.size = sampleSize\n    }\n    const mdat = MP4.mdat(mdata)\n\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n\n  }\n\n  _remuxAudio () {\n    const track = this.audioTrack\n    const mdata = new Uint8Array(track.samples.reduce((t, c) => (t + c.size), 0))\n    track.samples.reduce((offset, s) => {\n      mdata.set(s.data, offset)\n      return offset + s.size\n    }, 0)\n    const mdat = MP4.mdat(mdata)\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n  }\n\n  reset () {\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n  }\n}\n","/* eslint-disable no-use-before-define */\n\n/**\n * Base class for inheritance.\n */\nexport class Base {\n  /**\n   * Extends this object and runs the init method.\n   * Arguments to create() will be passed to init().\n   *\n   * @return {Object} The new object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var instance = MyType.create();\n   */\n  static create(...args) {\n    return new this(...args);\n  }\n\n  /**\n   * Copies properties into this object.\n   *\n   * @param {Object} properties The properties to mix in.\n   *\n   * @example\n   *\n   *     MyType.mixIn({\n   *         field: 'value'\n   *     });\n   */\n  mixIn(properties) {\n    return Object.assign(this, properties);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = instance.clone();\n   */\n  clone() {\n    const clone = new this.constructor();\n    Object.assign(clone, this);\n    return clone;\n  }\n}\n\n/**\n * An array of 32-bit words.\n *\n * @property {Array} words The array of 32-bit words.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nexport class WordArray extends Base {\n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.create();\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n   */\n  constructor(words = [], sigBytes = words.length * 4) {\n    super();\n\n    let typedArray = words;\n    // Convert buffers to uint8\n    if (typedArray instanceof ArrayBuffer) {\n      typedArray = new Uint8Array(typedArray);\n    }\n\n    // Convert other array views to uint8\n    if (\n      typedArray instanceof Int8Array\n      || typedArray instanceof Uint8ClampedArray\n      || typedArray instanceof Int16Array\n      || typedArray instanceof Uint16Array\n      || typedArray instanceof Int32Array\n      || typedArray instanceof Uint32Array\n      || typedArray instanceof Float32Array\n      || typedArray instanceof Float64Array\n    ) {\n      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n    }\n\n    // Handle Uint8Array\n    if (typedArray instanceof Uint8Array) {\n      // Shortcut\n      const typedArrayByteLength = typedArray.byteLength;\n\n      // Extract bytes\n      const _words = [];\n      for (let i = 0; i < typedArrayByteLength; i += 1) {\n        _words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n      }\n\n      // Initialize this word array\n      this.words = _words;\n      this.sigBytes = typedArrayByteLength;\n    } else {\n      // Else call normal init\n      this.words = words;\n      this.sigBytes = sigBytes;\n    }\n  }\n\n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   *\n   * @return {WordArray} The random word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  static random(nBytes) {\n    const words = [];\n\n    const r = (m_w) => {\n      let _m_w = m_w;\n      let _m_z = 0x3ade68b1;\n      const mask = 0xffffffff;\n\n      return () => {\n        _m_z = (0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10)) & mask;\n        _m_w = (0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10)) & mask;\n        let result = ((_m_z << 0x10) + _m_w) & mask;\n        result /= 0x100000000;\n        result += 0.5;\n        return result * (Math.random() > 0.5 ? 1 : -1);\n      };\n    };\n\n    for (let i = 0, rcache; i < nBytes; i += 4) {\n      const _r = r((rcache || Math.random()) * 0x100000000);\n\n      rcache = _r() * 0x3ade67b7;\n      words.push((_r() * 0x100000000) | 0);\n    }\n\n    return new WordArray(words, nBytes);\n  }\n\n  /**\n   * Converts this word array to a string.\n   *\n   * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n   *\n   * @return {string} The stringified word array.\n   *\n   * @example\n   *\n   *     var string = wordArray + '';\n   *     var string = wordArray.toString();\n   *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  toString(encoder = Hex) {\n    return encoder.stringify(this);\n  }\n\n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {WordArray} wordArray The word array to append.\n   *\n   * @return {WordArray} This word array.\n   *\n   * @example\n   *\n   *     wordArray1.concat(wordArray2);\n   */\n  concat(wordArray) {\n    // Shortcuts\n    const thisWords = this.words;\n    const thatWords = wordArray.words;\n    const thisSigBytes = this.sigBytes;\n    const thatSigBytes = wordArray.sigBytes;\n\n    // Clamp excess bits\n    this.clamp();\n\n    // Concat\n    if (thisSigBytes % 4) {\n      // Copy one byte at a time\n      for (let i = 0; i < thatSigBytes; i += 1) {\n        const thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n      }\n    } else {\n      // Copy one word at a time\n      for (let i = 0; i < thatSigBytes; i += 4) {\n        thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n      }\n    }\n    this.sigBytes += thatSigBytes;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *\n   *     wordArray.clamp();\n   */\n  clamp() {\n    // Shortcuts\n    const { words, sigBytes } = this;\n\n    // Clamp\n    words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n    words.length = Math.ceil(sigBytes / 4);\n  }\n\n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {WordArray} The clone.\n   *\n   * @example\n   *\n   *     var clone = wordArray.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone.words = this.words.slice(0);\n\n    return clone;\n  }\n}\n\n/**\n * Hex encoding strategy.\n */\nexport const Hex = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The hex string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((bite >>> 4).toString(16));\n      hexChars.push((bite & 0x0f).toString(16));\n    }\n\n    return hexChars.join('');\n  },\n\n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n   */\n  parse(hexStr) {\n    // Shortcut\n    const hexStrLength = hexStr.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < hexStrLength; i += 2) {\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n\n    return new WordArray(words, hexStrLength / 2);\n  },\n};\n\n/**\n * Latin1 encoding strategy.\n */\nexport const Latin1 = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Latin1 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const latin1Chars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(bite));\n    }\n\n    return latin1Chars.join('');\n  },\n\n  /**\n   * Converts a Latin1 string to a word array.\n   *\n   * @param {string} latin1Str The Latin1 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n   */\n  parse(latin1Str) {\n    // Shortcut\n    const latin1StrLength = latin1Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i += 1) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n\n    return new WordArray(words, latin1StrLength);\n  },\n};\n\n/**\n * UTF-8 encoding strategy.\n */\nexport const Utf8 = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-8 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n    } catch (e) {\n      throw new Error('Malformed UTF-8 data');\n    }\n  },\n\n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n   */\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  },\n};\n\n/**\n * Abstract buffered block algorithm template.\n *\n * The property blockSize must be implemented in a concrete subtype.\n *\n * @property {number} _minBufferSize\n *\n *     The number of blocks that should be kept unprocessed in the buffer. Default: 0\n */\nexport class BufferedBlockAlgorithm extends Base {\n  constructor() {\n    super();\n    this._minBufferSize = 0;\n  }\n\n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm.reset();\n   */\n  reset() {\n    // Initial values\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n\n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {WordArray|string} data\n   *\n   *     The data to append. Strings are converted to a WordArray using UTF-8.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm._append('data');\n   *     bufferedBlockAlgorithm._append(wordArray);\n   */\n  _append(data) {\n    let m_data = data;\n\n    // Convert string to WordArray, else assume WordArray already\n    if (typeof m_data === 'string') {\n      m_data = Utf8.parse(m_data);\n    }\n\n    // Append\n    this._data.concat(m_data);\n    this._nDataBytes += m_data.sigBytes;\n  }\n\n  /**\n   * Processes available data blocks.\n   *\n   * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n   *\n   * @return {WordArray} The processed data.\n   *\n   * @example\n   *\n   *     var processedData = bufferedBlockAlgorithm._process();\n   *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n   */\n  _process(doFlush) {\n    let processedWords;\n\n    // Shortcuts\n    const { _data: data, blockSize } = this;\n    const dataWords = data.words;\n    const dataSigBytes = data.sigBytes;\n    const blockSizeBytes = blockSize * 4;\n\n    // Count blocks ready\n    let nBlocksReady = dataSigBytes / blockSizeBytes;\n    if (doFlush) {\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      // Round down to include only full blocks,\n      // less the number of blocks that must remain in the buffer\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n\n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n\n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n    // Process blocks\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += blockSize) {\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(dataWords, offset);\n      }\n\n      // Remove processed words\n      processedWords = dataWords.splice(0, nWordsReady);\n      data.sigBytes -= nBytesReady;\n    }\n\n    // Return processed words\n    return new WordArray(processedWords, nBytesReady);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = bufferedBlockAlgorithm.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone._data = this._data.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Abstract hasher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n */\nexport class Hasher extends BufferedBlockAlgorithm {\n  constructor(cfg) {\n    super();\n\n    this.blockSize = 512 / 32;\n\n    /**\n     * Configuration options.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates a shortcut function to a hasher's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to create a helper for.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHelper(SubHasher) {\n    return (message, cfg) => new SubHasher(cfg).finalize(message);\n  }\n\n  /**\n   * Creates a shortcut function to the HMAC's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to use in this HMAC helper.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHmacHelper(SubHasher) {\n    return (message, key) => new HMAC(SubHasher, key).finalize(message);\n  }\n\n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *\n   *     hasher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n\n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {Hasher} This hasher.\n   *\n   * @example\n   *\n   *     hasher.update('message');\n   *     hasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    // Append\n    this._append(messageUpdate);\n\n    // Update the hash\n    this._process();\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The hash.\n   *\n   * @example\n   *\n   *     var hash = hasher.finalize();\n   *     var hash = hasher.finalize('message');\n   *     var hash = hasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n\n    // Perform concrete-hasher logic\n    const hash = this._doFinalize();\n\n    return hash;\n  }\n}\n\n/**\n * HMAC algorithm.\n */\nexport class HMAC extends Base {\n  /**\n   * Initializes a newly created HMAC.\n   *\n   * @param {Hasher} SubHasher The hash algorithm to use.\n   * @param {WordArray|string} key The secret key.\n   *\n   * @example\n   *\n   *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n   */\n  constructor(SubHasher, key) {\n    super();\n\n    const hasher = new SubHasher();\n    this._hasher = hasher;\n\n    // Convert string to WordArray, else assume WordArray already\n    let _key = key;\n    if (typeof _key === 'string') {\n      _key = Utf8.parse(_key);\n    }\n\n    // Shortcuts\n    const hasherBlockSize = hasher.blockSize;\n    const hasherBlockSizeBytes = hasherBlockSize * 4;\n\n    // Allow arbitrary length keys\n    if (_key.sigBytes > hasherBlockSizeBytes) {\n      _key = hasher.finalize(key);\n    }\n\n    // Clamp excess bits\n    _key.clamp();\n\n    // Clone key for inner and outer pads\n    const oKey = _key.clone();\n    this._oKey = oKey;\n    const iKey = _key.clone();\n    this._iKey = iKey;\n\n    // Shortcuts\n    const oKeyWords = oKey.words;\n    const iKeyWords = iKey.words;\n\n    // XOR keys with pad constants\n    for (let i = 0; i < hasherBlockSize; i += 1) {\n      oKeyWords[i] ^= 0x5c5c5c5c;\n      iKeyWords[i] ^= 0x36363636;\n    }\n    oKey.sigBytes = hasherBlockSizeBytes;\n    iKey.sigBytes = hasherBlockSizeBytes;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Resets this HMAC to its initial state.\n   *\n   * @example\n   *\n   *     hmacHasher.reset();\n   */\n  reset() {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Reset\n    hasher.reset();\n    hasher.update(this._iKey);\n  }\n\n  /**\n   * Updates this HMAC with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {HMAC} This HMAC instance.\n   *\n   * @example\n   *\n   *     hmacHasher.update('message');\n   *     hmacHasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    this._hasher.update(messageUpdate);\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the HMAC computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The HMAC.\n   *\n   * @example\n   *\n   *     var hmac = hmacHasher.finalize();\n   *     var hmac = hmacHasher.finalize('message');\n   *     var hmac = hmacHasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Compute HMAC\n    const innerHash = hasher.finalize(messageUpdate);\n    hasher.reset();\n    const hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n    return hmac;\n  }\n}\n","import {\n  WordArray,\n} from './core.js';\n\nconst parseLoop = (base64Str, base64StrLength, reverseMap) => {\n  const words = [];\n  let nBytes = 0;\n  for (let i = 0; i < base64StrLength; i += 1) {\n    if (i % 4) {\n      const bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n      const bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n      const bitsCombined = bits1 | bits2;\n      words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n      nBytes += 1;\n    }\n  }\n  return WordArray.create(words, nBytes);\n};\n\n/**\n * Base64 encoding strategy.\n */\nexport const Base64 = {\n  /**\n   * Converts a word array to a Base64 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Base64 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n    const map = this._map;\n\n    // Clamp excess bits\n    wordArray.clamp();\n\n    // Convert\n    const base64Chars = [];\n    for (let i = 0; i < sigBytes; i += 3) {\n      const byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      const byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n      const byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n      const triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n      for (let j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j += 1) {\n        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n      }\n    }\n\n    // Add padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      while (base64Chars.length % 4) {\n        base64Chars.push(paddingChar);\n      }\n    }\n\n    return base64Chars.join('');\n  },\n\n  /**\n   * Converts a Base64 string to a word array.\n   *\n   * @param {string} base64Str The Base64 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Base64.parse(base64String);\n   */\n  parse(base64Str) {\n    // Shortcuts\n    let base64StrLength = base64Str.length;\n    const map = this._map;\n    let reverseMap = this._reverseMap;\n\n    if (!reverseMap) {\n      this._reverseMap = [];\n      reverseMap = this._reverseMap;\n      for (let j = 0; j < map.length; j += 1) {\n        reverseMap[map.charCodeAt(j)] = j;\n      }\n    }\n\n    // Ignore padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      const paddingIndex = base64Str.indexOf(paddingChar);\n      if (paddingIndex !== -1) {\n        base64StrLength = paddingIndex;\n      }\n    }\n\n    // Convert\n    return parseLoop(base64Str, base64StrLength, reverseMap);\n  },\n\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n};\n","import {\n  Base,\n  WordArray,\n} from './core.js';\nimport { MD5Algo } from './md5.js';\n\n/**\n * This key derivation function is meant to conform with EVP_BytesToKey.\n * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n */\nexport class EvpKDFAlgo extends Base {\n  /**\n   * Initializes a newly created key derivation function.\n   *\n   * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n   *\n   * @example\n   *\n   *     const kdf = CryptoJS.algo.EvpKDF.create();\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n   */\n  constructor(cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    this.cfg = Object.assign(\n      new Base(),\n      {\n        keySize: 128 / 32,\n        hasher: MD5Algo,\n        iterations: 1,\n      },\n      cfg,\n    );\n  }\n\n  /**\n   * Derives a key from a password.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @example\n   *\n   *     const key = kdf.compute(password, salt);\n   */\n  compute(password, salt) {\n    let block;\n\n    // Shortcut\n    const { cfg } = this;\n\n    // Init hasher\n    const hasher = cfg.hasher.create();\n\n    // Initial values\n    const derivedKey = WordArray.create();\n\n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const { keySize, iterations } = cfg;\n\n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      if (block) {\n        hasher.update(block);\n      }\n      block = hasher.update(password).finalize(salt);\n      hasher.reset();\n\n      // Iterations\n      for (let i = 1; i < iterations; i += 1) {\n        block = hasher.finalize(block);\n        hasher.reset();\n      }\n\n      derivedKey.concat(block);\n    }\n    derivedKey.sigBytes = keySize * 4;\n\n    return derivedKey;\n  }\n}\n\n/**\n * Derives a key from a password.\n *\n * @param {WordArray|string} password The password.\n * @param {WordArray|string} salt A salt.\n * @param {Object} cfg (Optional) The configuration options to use for this computation.\n *\n * @return {WordArray} The derived key.\n *\n * @static\n *\n * @example\n *\n *     var key = CryptoJS.EvpKDF(password, salt);\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n */\nexport const EvpKDF = (password, salt, cfg) => EvpKDFAlgo.create(cfg).compute(password, salt);\n","/* eslint-disable no-use-before-define */\n\nimport {\n  Base,\n  WordArray,\n  BufferedBlockAlgorithm,\n} from './core.js';\nimport { Base64 } from './enc-base64.js';\nimport { EvpKDFAlgo } from './evpkdf.js';\n\n/**\n * Abstract base cipher template.\n *\n * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n */\nexport class Cipher extends BufferedBlockAlgorithm {\n  /**\n   * Initializes a newly created cipher.\n   *\n   * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.create(\n   *       CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray }\n   *     );\n   */\n  constructor(xformMode, key, cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {WordArray} iv The IV to use for this operation.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Store transform mode and key\n    this._xformMode = xformMode;\n    this._key = key;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createEncryptor(key, cfg) {\n    return this.create(this._ENC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createDecryptor(key, cfg) {\n    return this.create(this._DEC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates shortcut functions to a cipher's object interface.\n   *\n   * @param {Cipher} cipher The cipher to create a helper for.\n   *\n   * @return {Object} An object with encrypt and decrypt shortcut functions.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n   */\n  static _createHelper(SubCipher) {\n    const selectCipherStrategy = (key) => {\n      if (typeof key === 'string') {\n        return PasswordBasedCipher;\n      }\n      return SerializableCipher;\n    };\n\n    return {\n      encrypt(message, key, cfg) {\n        return selectCipherStrategy(key).encrypt(SubCipher, message, key, cfg);\n      },\n\n      decrypt(ciphertext, key, cfg) {\n        return selectCipherStrategy(key).decrypt(SubCipher, ciphertext, key, cfg);\n      },\n    };\n  }\n\n  /**\n   * Resets this cipher to its initial state.\n   *\n   * @example\n   *\n   *     cipher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-cipher logic\n    this._doReset();\n  }\n\n  /**\n   * Adds data to be encrypted or decrypted.\n   *\n   * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.process('data');\n   *     const encrypted = cipher.process(wordArray);\n   */\n  process(dataUpdate) {\n    // Append\n    this._append(dataUpdate);\n\n    // Process available blocks\n    return this._process();\n  }\n\n  /**\n   * Finalizes the encryption or decryption process.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after final processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.finalize();\n   *     const encrypted = cipher.finalize('data');\n   *     const encrypted = cipher.finalize(wordArray);\n   */\n  finalize(dataUpdate) {\n    // Final data update\n    if (dataUpdate) {\n      this._append(dataUpdate);\n    }\n\n    // Perform concrete-cipher logic\n    const finalProcessedData = this._doFinalize();\n\n    return finalProcessedData;\n  }\n}\nCipher._ENC_XFORM_MODE = 1;\nCipher._DEC_XFORM_MODE = 2;\nCipher.keySize = 128 / 32;\nCipher.ivSize = 128 / 32;\n\n/**\n * Abstract base stream cipher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n */\nexport class StreamCipher extends Cipher {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 1;\n  }\n\n  _doFinalize() {\n    // Process partial blocks\n    const finalProcessedBlocks = this._process(!!'flush');\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * Abstract base block cipher mode template.\n */\nexport class BlockCipherMode extends Base {\n  /**\n   * Initializes a newly created mode.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n   */\n  constructor(cipher, iv) {\n    super();\n\n    this._cipher = cipher;\n    this._iv = iv;\n  }\n\n  /**\n   * Creates this mode for encryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n   */\n  static createEncryptor(cipher, iv) {\n    return this.Encryptor.create(cipher, iv);\n  }\n\n  /**\n   * Creates this mode for decryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n   */\n  static createDecryptor(cipher, iv) {\n    return this.Decryptor.create(cipher, iv);\n  }\n}\n\nfunction xorBlock(words, offset, blockSize) {\n  const _words = words;\n  let block;\n\n  // Shortcut\n  const iv = this._iv;\n\n  // Choose mixing block\n  if (iv) {\n    block = iv;\n\n    // Remove IV for subsequent blocks\n    this._iv = undefined;\n  } else {\n    block = this._prevBlock;\n  }\n\n  // XOR blocks\n  for (let i = 0; i < blockSize; i += 1) {\n    _words[offset + i] ^= block[i];\n  }\n}\n\n/**\n * Cipher Block Chaining mode.\n */\n\n/**\n * Abstract base CBC mode.\n */\nexport class CBC extends BlockCipherMode {\n}\n/**\n * CBC encryptor.\n */\nCBC.Encryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // XOR and encrypt\n    xorBlock.call(this, words, offset, blockSize);\n    cipher.encryptBlock(words, offset);\n\n    // Remember this block to use with next block\n    this._prevBlock = words.slice(offset, offset + blockSize);\n  }\n};\n/**\n * CBC decryptor.\n */\nCBC.Decryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // Remember this block to use with next block\n    const thisBlock = words.slice(offset, offset + blockSize);\n\n    // Decrypt and XOR\n    cipher.decryptBlock(words, offset);\n    xorBlock.call(this, words, offset, blockSize);\n\n    // This block becomes the previous block\n    this._prevBlock = thisBlock;\n  }\n};\n\n/**\n * PKCS #5/7 padding strategy.\n */\nexport const Pkcs7 = {\n  /**\n   * Pads data using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to pad.\n   * @param {number} blockSize The multiple that the data should be padded to.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n   */\n  pad(data, blockSize) {\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n    // Create padding word\n    const paddingWord = (nPaddingBytes << 24)\n      | (nPaddingBytes << 16)\n      | (nPaddingBytes << 8)\n      | nPaddingBytes;\n\n    // Create padding\n    const paddingWords = [];\n    for (let i = 0; i < nPaddingBytes; i += 4) {\n      paddingWords.push(paddingWord);\n    }\n    const padding = WordArray.create(paddingWords, nPaddingBytes);\n\n    // Add padding\n    data.concat(padding);\n  },\n\n  /**\n   * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to unpad.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n   */\n  unpad(data) {\n    const _data = data;\n\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n\n/**\n * Abstract base block cipher template.\n *\n * @property {number} blockSize\n *\n *    The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n */\nexport class BlockCipher extends Cipher {\n  constructor(xformMode, key, cfg) {\n    /**\n     * Configuration options.\n     *\n     * @property {Mode} mode The block mode to use. Default: CBC\n     * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n     */\n    super(xformMode, key, Object.assign(\n      {\n        mode: CBC,\n        padding: Pkcs7,\n      },\n      cfg,\n    ));\n\n    this.blockSize = 128 / 32;\n  }\n\n  reset() {\n    let modeCreator;\n\n    // Reset cipher\n    super.reset.call(this);\n\n    // Shortcuts\n    const { cfg } = this;\n    const { iv, mode } = cfg;\n\n    // Reset block mode\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      modeCreator = mode.createEncryptor;\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      modeCreator = mode.createDecryptor;\n      // Keep at least one block in the buffer for unpadding\n      this._minBufferSize = 1;\n    }\n\n    this._mode = modeCreator.call(mode, this, iv && iv.words);\n    this._mode.__creator = modeCreator;\n  }\n\n  _doProcessBlock(words, offset) {\n    this._mode.processBlock(words, offset);\n  }\n\n  _doFinalize() {\n    let finalProcessedBlocks;\n\n    // Shortcut\n    const { padding } = this.cfg;\n\n    // Finalize\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      // Pad data\n      padding.pad(this._data, this.blockSize);\n\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n\n      // Unpad data\n      padding.unpad(finalProcessedBlocks);\n    }\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * A collection of cipher parameters.\n *\n * @property {WordArray} ciphertext The raw ciphertext.\n * @property {WordArray} key The key to this ciphertext.\n * @property {WordArray} iv The IV used in the ciphering operation.\n * @property {WordArray} salt The salt used with a key derivation function.\n * @property {Cipher} algorithm The cipher algorithm.\n * @property {Mode} mode The block mode used in the ciphering operation.\n * @property {Padding} padding The padding scheme used in the ciphering operation.\n * @property {number} blockSize The block size of the cipher.\n * @property {Format} formatter\n *    The default formatting strategy to convert this cipher params object to a string.\n */\nexport class CipherParams extends Base {\n  /**\n   * Initializes a newly created cipher params object.\n   *\n   * @param {Object} cipherParams An object with any of the possible cipher parameters.\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.lib.CipherParams.create({\n   *         ciphertext: ciphertextWordArray,\n   *         key: keyWordArray,\n   *         iv: ivWordArray,\n   *         salt: saltWordArray,\n   *         algorithm: CryptoJS.algo.AES,\n   *         mode: CryptoJS.mode.CBC,\n   *         padding: CryptoJS.pad.PKCS7,\n   *         blockSize: 4,\n   *         formatter: CryptoJS.format.OpenSSL\n   *     });\n   */\n  constructor(cipherParams) {\n    super();\n\n    this.mixIn(cipherParams);\n  }\n\n  /**\n   * Converts this cipher params object to a string.\n   *\n   * @param {Format} formatter (Optional) The formatting strategy to use.\n   *\n   * @return {string} The stringified cipher params.\n   *\n   * @throws Error If neither the formatter nor the default formatter is set.\n   *\n   * @example\n   *\n   *     var string = cipherParams + '';\n   *     var string = cipherParams.toString();\n   *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n   */\n  toString(formatter) {\n    return (formatter || this.formatter).stringify(this);\n  }\n}\n\n/**\n * OpenSSL formatting strategy.\n */\nexport const OpenSSLFormatter = {\n  /**\n   * Converts a cipher params object to an OpenSSL-compatible string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   *\n   * @return {string} The OpenSSL-compatible string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n   */\n  stringify(cipherParams) {\n    let wordArray;\n\n    // Shortcuts\n    const { ciphertext, salt } = cipherParams;\n\n    // Format\n    if (salt) {\n      wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n    } else {\n      wordArray = ciphertext;\n    }\n\n    return wordArray.toString(Base64);\n  },\n\n  /**\n   * Converts an OpenSSL-compatible string to a cipher params object.\n   *\n   * @param {string} openSSLStr The OpenSSL-compatible string.\n   *\n   * @return {CipherParams} The cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n   */\n  parse(openSSLStr) {\n    let salt;\n\n    // Parse base64\n    const ciphertext = Base64.parse(openSSLStr);\n\n    // Shortcut\n    const ciphertextWords = ciphertext.words;\n\n    // Test for salt\n    if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {\n      // Extract salt\n      salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n      // Remove salt from ciphertext\n      ciphertextWords.splice(0, 4);\n      ciphertext.sigBytes -= 16;\n    }\n\n    return CipherParams.create({ ciphertext, salt });\n  },\n};\n\n/**\n * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n */\nexport class SerializableCipher extends Base {\n  /**\n   * Encrypts a message.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key);\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, key, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Encrypt\n    const encryptor = cipher.createEncryptor(key, _cfg);\n    const ciphertext = encryptor.finalize(message);\n\n    // Shortcut\n    const cipherCfg = encryptor.cfg;\n\n    // Create and return serializable cipher params\n    return CipherParams.create({\n      ciphertext,\n      key,\n      iv: cipherCfg.iv,\n      algorithm: cipher,\n      mode: cipherCfg.mode,\n      padding: cipherCfg.padding,\n      blockSize: encryptor.blockSize,\n      formatter: _cfg.format,\n    });\n  }\n\n  /**\n   * Decrypts serialized ciphertext.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, key, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Decrypt\n    const plaintext = cipher.createDecryptor(key, _cfg).finalize(_ciphertext.ciphertext);\n\n    return plaintext;\n  }\n\n  /**\n   * Converts serialized ciphertext to CipherParams,\n   * else assumed CipherParams already and returns ciphertext unchanged.\n   *\n   * @param {CipherParams|string} ciphertext The ciphertext.\n   * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n   *\n   * @return {CipherParams} The unserialized ciphertext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       ._parse(ciphertextStringOrParams, format);\n   */\n  static _parse(ciphertext, format) {\n    if (typeof ciphertext === 'string') {\n      return format.parse(ciphertext, this);\n    }\n    return ciphertext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {Formatter} format\n *\n *    The formatting strategy to convert cipher param objects to and from a string.\n *    Default: OpenSSL\n */\nSerializableCipher.cfg = Object.assign(\n  new Base(),\n  { format: OpenSSLFormatter },\n);\n\n/**\n * OpenSSL key derivation function.\n */\nexport const OpenSSLKdf = {\n  /**\n   * Derives a key and IV from a password.\n   *\n   * @param {string} password The password to derive from.\n   * @param {number} keySize The size in words of the key to generate.\n   * @param {number} ivSize The size in words of the IV to generate.\n   * @param {WordArray|string} salt\n   *     (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n   *\n   * @return {CipherParams} A cipher params object with the key, IV, and salt.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n   */\n  execute(password, keySize, ivSize, salt) {\n    let _salt = salt;\n\n    // Generate random salt\n    if (!_salt) {\n      _salt = WordArray.random(64 / 8);\n    }\n\n    // Derive key and IV\n    const key = EvpKDFAlgo.create({ keySize: keySize + ivSize }).compute(password, _salt);\n\n    // Separate key and IV\n    const iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n    key.sigBytes = keySize * 4;\n\n    // Return params\n    return CipherParams.create({ key, iv, salt: _salt });\n  },\n};\n\n/**\n * A serializable cipher wrapper that derives the key from a password,\n * and returns ciphertext as a serializable cipher params object.\n */\nexport class PasswordBasedCipher extends SerializableCipher {\n  /**\n   * Encrypts a message using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password');\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, password, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Encrypt\n    const ciphertext = SerializableCipher.encrypt\n      .call(this, cipher, message, derivedParams.key, _cfg);\n\n    // Mix in derived params\n    ciphertext.mixIn(derivedParams);\n\n    return ciphertext;\n  }\n\n  /**\n   * Decrypts serialized ciphertext using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, password, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf\n      .execute(password, cipher.keySize, cipher.ivSize, _ciphertext.salt);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Decrypt\n    const plaintext = SerializableCipher.decrypt\n      .call(this, cipher, _ciphertext, derivedParams.key, _cfg);\n\n    return plaintext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {KDF} kdf\n *     The key derivation function to use to generate a key and IV from a password.\n *     Default: OpenSSL\n */\nPasswordBasedCipher.cfg = Object.assign(SerializableCipher.cfg, { kdf: OpenSSLKdf });\n","import {\n  BlockCipher,\n} from './cipher-core.js';\n\n// Lookup tables\nconst _SBOX = [];\nconst INV_SBOX = [];\nconst _SUB_MIX_0 = [];\nconst _SUB_MIX_1 = [];\nconst _SUB_MIX_2 = [];\nconst _SUB_MIX_3 = [];\nconst INV_SUB_MIX_0 = [];\nconst INV_SUB_MIX_1 = [];\nconst INV_SUB_MIX_2 = [];\nconst INV_SUB_MIX_3 = [];\n\n// Compute lookup tables\n\n// Compute double table\nconst d = [];\nfor (let i = 0; i < 256; i += 1) {\n  if (i < 128) {\n    d[i] = i << 1;\n  } else {\n    d[i] = (i << 1) ^ 0x11b;\n  }\n}\n\n// Walk GF(2^8)\nlet x = 0;\nlet xi = 0;\nfor (let i = 0; i < 256; i += 1) {\n  // Compute sbox\n  let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n  sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n  _SBOX[x] = sx;\n  INV_SBOX[sx] = x;\n\n  // Compute multiplication\n  const x2 = d[x];\n  const x4 = d[x2];\n  const x8 = d[x4];\n\n  // Compute sub bytes, mix columns tables\n  let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n  _SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n  _SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n  _SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n  _SUB_MIX_3[x] = t;\n\n  // Compute inv sub bytes, inv mix columns tables\n  t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n  INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n  INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n  INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n  INV_SUB_MIX_3[sx] = t;\n\n  // Compute next counter\n  if (!x) {\n    xi = 1;\n    x = xi;\n  } else {\n    x = x2 ^ d[d[d[x8 ^ x2]]];\n    xi ^= d[d[xi]];\n  }\n}\n\n// Precomputed Rcon lookup\nconst RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n/**\n * AES block cipher algorithm.\n */\nexport class AESAlgo extends BlockCipher {\n  _doReset() {\n    let t;\n\n    // Skip reset of nRounds has been set before and key did not change\n    if (this._nRounds && this._keyPriorReset === this._key) {\n      return;\n    }\n\n    // Shortcuts\n    this._keyPriorReset = this._key;\n    const key = this._keyPriorReset;\n    const keyWords = key.words;\n    const keySize = key.sigBytes / 4;\n\n    // Compute number of rounds\n    this._nRounds = keySize + 6;\n    const nRounds = this._nRounds;\n\n    // Compute number of key schedule rows\n    const ksRows = (nRounds + 1) * 4;\n\n    // Compute key schedule\n    this._keySchedule = [];\n    const keySchedule = this._keySchedule;\n    for (let ksRow = 0; ksRow < ksRows; ksRow += 1) {\n      if (ksRow < keySize) {\n        keySchedule[ksRow] = keyWords[ksRow];\n      } else {\n        t = keySchedule[ksRow - 1];\n\n        if (!(ksRow % keySize)) {\n          // Rot word\n          t = (t << 8) | (t >>> 24);\n\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n\n          // Mix Rcon\n          t ^= RCON[(ksRow / keySize) | 0] << 24;\n        } else if (keySize > 6 && ksRow % keySize === 4) {\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n        }\n\n        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n      }\n    }\n\n    // Compute inv key schedule\n    this._invKeySchedule = [];\n    const invKeySchedule = this._invKeySchedule;\n    for (let invKsRow = 0; invKsRow < ksRows; invKsRow += 1) {\n      const ksRow = ksRows - invKsRow;\n\n      if (invKsRow % 4) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = INV_SUB_MIX_0[_SBOX[t >>> 24]]\n          ^ INV_SUB_MIX_1[_SBOX[(t >>> 16) & 0xff]]\n          ^ INV_SUB_MIX_2[_SBOX[(t >>> 8) & 0xff]]\n          ^ INV_SUB_MIX_3[_SBOX[t & 0xff]];\n      }\n    }\n  }\n\n  encryptBlock(M, offset) {\n    this._doCryptBlock(\n      M, offset, this._keySchedule, _SUB_MIX_0, _SUB_MIX_1, _SUB_MIX_2, _SUB_MIX_3, _SBOX,\n    );\n  }\n\n  decryptBlock(M, offset) {\n    const _M = M;\n\n    // Swap 2nd and 4th rows\n    let t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n\n    this._doCryptBlock(\n      _M,\n      offset,\n      this._invKeySchedule,\n      INV_SUB_MIX_0,\n      INV_SUB_MIX_1,\n      INV_SUB_MIX_2,\n      INV_SUB_MIX_3,\n      INV_SBOX,\n    );\n\n    // Inv swap 2nd and 4th rows\n    t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n  }\n\n  _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n    const _M = M;\n\n    // Shortcut\n    const nRounds = this._nRounds;\n\n    // Get input, add round key\n    let s0 = _M[offset] ^ keySchedule[0];\n    let s1 = _M[offset + 1] ^ keySchedule[1];\n    let s2 = _M[offset + 2] ^ keySchedule[2];\n    let s3 = _M[offset + 3] ^ keySchedule[3];\n\n    // Key schedule row counter\n    let ksRow = 4;\n\n    // Rounds\n    for (let round = 1; round < nRounds; round += 1) {\n      // Shift rows, sub bytes, mix columns, add round key\n      const t0 = SUB_MIX_0[s0 >>> 24]\n        ^ SUB_MIX_1[(s1 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s2 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s3 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t1 = SUB_MIX_0[s1 >>> 24]\n        ^ SUB_MIX_1[(s2 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s3 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s0 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t2 = SUB_MIX_0[s2 >>> 24]\n        ^ SUB_MIX_1[(s3 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s0 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s1 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t3 = SUB_MIX_0[s3 >>> 24]\n        ^ SUB_MIX_1[(s0 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s1 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s2 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n\n      // Update state\n      s0 = t0;\n      s1 = t1;\n      s2 = t2;\n      s3 = t3;\n    }\n\n    // Shift rows, sub bytes, add round key\n    const t0 = (\n      (SBOX[s0 >>> 24] << 24)\n        | (SBOX[(s1 >>> 16) & 0xff] << 16)\n        | (SBOX[(s2 >>> 8) & 0xff] << 8)\n        | SBOX[s3 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t1 = (\n      (SBOX[s1 >>> 24] << 24)\n        | (SBOX[(s2 >>> 16) & 0xff] << 16)\n        | (SBOX[(s3 >>> 8) & 0xff] << 8)\n        | SBOX[s0 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t2 = (\n      (SBOX[s2 >>> 24] << 24)\n        | (SBOX[(s3 >>> 16) & 0xff] << 16)\n        | (SBOX[(s0 >>> 8) & 0xff] << 8)\n        | SBOX[s1 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t3 = (\n      (SBOX[s3 >>> 24] << 24)\n        | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n\n    // Set output\n    _M[offset] = t0;\n    _M[offset + 1] = t1;\n    _M[offset + 2] = t2;\n    _M[offset + 3] = t3;\n  }\n}\nAESAlgo.keySize = 256 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n */\nexport const AES = BlockCipher._createHelper(AESAlgo);\n","/**\n * Counter block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class CTR extends BlockCipherMode {\n}\nCTR.Encryptor = class extends CTR {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let counter = this._counter;\n\n    // Generate keystream\n    if (iv) {\n      this._counter = iv.slice(0);\n      counter = this._counter;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    const keystream = counter.slice(0);\n    cipher.encryptBlock(keystream, 0);\n\n    // Increment counter\n    counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0;\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nCTR.Decryptor = CTR.Encryptor;\n","import { concatUint8Array } from 'xgplayer-streaming-shared'\n\n/**\n * @interface\n */\nexport class IExternalDecryptor {\n  /**\n   * @param {Uint8Array} data\n   * @param {BufferSource} key\n   * @param {BufferSource} iv\n   * @returns {Promise.<Uint8Array>}\n   */\n  async decrypt (data, key, iv) {}\n}\n\nexport class Decryptor {\n  constructor () {\n    const crypto = window.crypto || window.msCrypto\n    this.subtle = crypto && (crypto.subtle || crypto.webkitSubtle)\n\n    /**\n     * @type {IExternalDecryptor}\n     */\n    this.externalDecryptor = null\n  }\n\n  destroy () {\n    if (this.externalDecryptor?.destroy) {\n      this.externalDecryptor.destroy()\n    }\n  }\n\n  decrypt (video, audio) {\n    if (!video && !audio) return\n    const ret = []\n    if (video) {\n      ret[0] = this._decryptSegment(video)\n    }\n    if (audio) {\n      ret[1] = this._decryptSegment(audio)\n    }\n    return Promise.all(ret)\n  }\n\n  async _decryptSegment (seg) {\n    let data = seg.data\n    if (seg.key) {\n      data = await this._decryptData(seg.data, seg.key, seg.keyIv)\n    }\n    if (!seg.map) return data\n    return concatUint8Array(seg.map, data)\n  }\n\n  async _decryptData (data, key, iv) {\n    if (this.externalDecryptor) {\n      return await this.externalDecryptor.decrypt(data, key, iv)\n    } else {\n      if (!this.subtle) throw new Error('crypto is not defined')\n      const aesKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt'])\n      return new Uint8Array(\n        await this.subtle.decrypt({ name: 'AES-CBC', iv }, aesKey, data)\n      )\n    }\n  }\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nexport const Event = {\n  ...EVENT,\n  STREAM_PARSED: 'core.streamparsed',\n  NO_AUDIO_TRACK: 'core.noaudiotrack',\n  SUBTITLE_SEGMENTS: 'core.subtitlesegments',\n  SUBTITLE_PLAYLIST: 'core.subtitleplaylist',\n  SEI_PAYLOAD_TIME: 'core.seipayloadtime',\n  APPEND_COST: 'core.appendcost'\n}\n","import { TsDemuxer, FMP4Demuxer, FMP4Remuxer, WarningType } from 'xgplayer-transmuxer'\nimport { ERR, StreamingError, Logger, concatUint8Array } from 'xgplayer-streaming-shared'\nimport { Event } from '../../constants'\n\nconst logger = new Logger('Transmuxer')\n\nexport class Transmuxer {\n  _initSegmentId = ''\n\n  constructor (hls, isMP4, needRemux) {\n    this.hls = hls\n    this._demuxer = isMP4 ? new FMP4Demuxer() : new TsDemuxer()\n    this._isMP4 = isMP4\n    if (needRemux) this._remuxer = new FMP4Remuxer(this._demuxer.videoTrack, this._demuxer.audioTrack)\n  }\n\n  transmux (videoChunk, audioChunk, discontinuity, contiguous, startTime, needInit) {\n    const demuxer = this._demuxer\n    try {\n      if (this._isMP4) {\n        demuxer.demux(videoChunk, audioChunk)\n      } else {\n        demuxer.demuxAndFix(concatUint8Array(videoChunk, audioChunk), discontinuity, contiguous, startTime)\n      }\n    } catch (error) {\n      throw new StreamingError(ERR.DEMUX, ERR.SUB_TYPES.HLS, error)\n    }\n\n    const { videoTrack, audioTrack, metadataTrack } = demuxer\n\n    const newId = `${videoTrack.codec}/${videoTrack.width}/${videoTrack.height}/${audioTrack.codec}/${audioTrack.config}`\n    if (newId !== this._initSegmentId) {\n      this._initSegmentId = newId\n      needInit = true\n    }\n\n    this._fireEvents(videoTrack, audioTrack, metadataTrack, discontinuity || needInit)\n\n    this.hls.emit(Event.DEMUXED_TRACK, {videoTrack, audioTrack})\n\n    if (this._remuxer) {\n      try {\n        const {\n          videoInitSegment,\n          videoSegment,\n          audioInitSegment,\n          audioSegment\n        } = this._remuxer.remux(needInit)\n        const v = concatUint8Array(videoInitSegment, videoSegment)\n        const a = concatUint8Array(audioInitSegment, audioSegment)\n        return [v ? { codec: videoTrack.codec, data: v } : undefined, a ? { codec: audioTrack.codec, data: a } : undefined]\n      } catch (error) {\n        throw new StreamingError(ERR.REMUX, ERR.SUB_TYPES.FMP4, error)\n      }\n    } else {\n      return [videoTrack, audioTrack]\n    }\n  }\n\n  _fireEvents (videoTrack, audioTrack, metadataTrack, discontinuity) {\n    logger.debug(videoTrack.samples, audioTrack.samples)\n\n    if (discontinuity) {\n      if (videoTrack.exist()) {\n        this.hls.emit(Event.METADATA_PARSED, {\n          type: 'video',\n          track: videoTrack,\n          meta: {\n            codec: videoTrack.codec,\n            timescale: videoTrack.timescale,\n            width: videoTrack.width,\n            height: videoTrack.height,\n            sarRatio: videoTrack.sarRatio,\n            baseDts: videoTrack.baseDts\n          }\n        })\n      }\n\n      if (audioTrack.exist()) {\n        this.hls.emit(Event.METADATA_PARSED, {\n          type: 'audio',\n          track: audioTrack,\n          meta: {\n            codec: audioTrack.codec,\n            channelCount: audioTrack.channelCount,\n            sampleRate: audioTrack.sampleRate,\n            timescale: audioTrack.timescale,\n            baseDts: audioTrack.baseDts\n          }\n        })\n      }\n\n      logger.debug('discontinuity', videoTrack, audioTrack)\n    }\n\n    videoTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AV_SHIFT:\n          type = Event.LARGE_AV_FIRST_FRAME_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP:\n          type = Event.LARGE_VIDEO_DTS_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK:\n          type = Event.MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT\n          break\n        default:\n      }\n\n      if (type) this.hls.emit(Event.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('video exception', warn)\n    })\n\n    audioTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AUDIO_GAP:\n          type = Event.LARGE_AUDIO_DTS_GAP_DETECT\n          break\n        case WarningType.AUDIO_FILLED:\n          type = Event.AUDIO_GAP_DETECT\n          break\n        case WarningType.AUDIO_DROPPED:\n          type = Event.AUDIO_OVERLAP_DETECT\n          break\n        default:\n      }\n\n      if (type) this.hls.emit(Event.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('audio exception', warn)\n    })\n\n    videoTrack.samples.forEach((sample) => {\n      if (sample.keyframe) {\n        this.hls.emit(Event.KEYFRAME, { pts: sample.pts })\n      }\n    })\n\n    metadataTrack.seiSamples.forEach(sei => {\n      this.hls.emit(Event.SEI, {\n        ...sei,\n        originPts: sei.originPts / 90, // sei 统一时间单位为毫秒\n        sei: {\n          code: sei.data.type,\n          content: sei.data.payload,\n          dts: sei.pts\n        }\n      })\n    })\n  }\n}\n","import { TsDemuxer, MP4Parser } from 'xgplayer-transmuxer'\nimport { MSE, Buffer, ERR, StreamingError, Logger, EVENT } from 'xgplayer-streaming-shared'\nimport { Decryptor } from './decrypt'\nimport { Transmuxer } from './transmuxer'\nimport { Event } from '../constants'\n\nconst logger = new Logger('BufferService')\n\nexport class BufferService {\n  _decryptor = new Decryptor()\n  /** @type {Transmuxer} */\n  _transmuxer = null\n  /** @type {MSE} */\n  _mse = null\n  _softVideo = null\n  _sourceCreated = false\n  _needInitSegment = true\n  _directAppend = false\n\n  constructor (hls) {\n    this.hls = hls\n    if (hls.config.softDecode) { // soft decode\n      this._softVideo = hls.media\n    } else {\n      this._mse = new MSE()\n\n      if (hls.config.url) {\n        this._mse.bindMedia(hls.media)\n      }\n    }\n\n    // If a third-party decryption module is configured, use it\n    if (hls.config.decryptor) {\n      this._decryptor.externalDecryptor = hls.config.decryptor\n    }\n  }\n\n  get baseDts () {\n    return this._transmuxer?._demuxer?._fixer?._baseDts\n  }\n\n  get nbSb () {\n    if (!this._mse?._sourceBuffer) return 0\n\n    return Object.keys(this._mse._sourceBuffer).length\n  }\n\n  get msIsOpend () {\n    return this._mse?.isOpened\n  }\n\n  async updateDuration (duration) {\n    logger.debug('update duration', duration)\n    if (this._mse) {\n      if (!this._mse.isOpened) {\n        await this._mse.open()\n      }\n      await this._mse.updateDuration(duration)\n    } else if (this._softVideo) {\n      this._softVideo.duration = duration\n    }\n  }\n\n  createSource (videoChunk, audioChunk, videoCodec, audioCodec) {\n    if (this._sourceCreated) return\n    const chunk = videoChunk || audioChunk\n    if (!chunk) return\n    if (TsDemuxer.probe(chunk)) {\n      if (!this._transmuxer) this._transmuxer = new Transmuxer(this.hls, false, !this._softVideo)\n    } else if (MP4Parser.probe(chunk)) {\n      if (this._softVideo) {\n        if (!this._transmuxer) this._transmuxer = new Transmuxer(this.hls, true)\n      } else {\n        this._directAppend = true\n        let mix = false\n        if (videoChunk && !videoCodec) {\n          MP4Parser.findBox(videoChunk, ['moov', 'trak']).forEach(t => {\n            const box = MP4Parser.findBox(t.data, ['trak', 'mdia', 'minf', 'stbl', 'stsd'])[0]\n            if (box) {\n              const e = MP4Parser.stsd(box).entries[0]\n              if (e) {\n                if (e.hvcC) {\n                  videoCodec = e.hvcC.codec || 'hev1.1.6.L93.B0'\n                } else if (e.avcC) {\n                  videoCodec = e.avcC.codec\n                } else if (e.sampleRate || e.esds) {\n                  audioCodec = e.esds?.codec || 'mp4a.40.2'\n                  mix = true\n                }\n              }\n            }\n          })\n        }\n        if (audioChunk && !audioCodec) {\n          MP4Parser.findBox(audioChunk, ['moov', 'trak', 'mdia', 'minf', 'stbl', 'stsd']).forEach(stsd => {\n            const e = MP4Parser.stsd(stsd).entries[0]\n            if (e && e.esds) audioCodec = e.esds.codec\n          })\n        }\n        if (videoChunk && !videoCodec) videoCodec = 'avc1.42e01e'\n        if (audioChunk && !audioCodec) audioCodec = 'mp4a.40.2'\n        if (mix) {\n          videoCodec += `, ${audioCodec}`\n          audioCodec = ''\n        }\n        this._createMseSource(videoCodec, audioCodec)\n      }\n    } else {\n      throw new StreamingError(ERR.OTHER, null, null, null, 'unsupported stream')\n    }\n    if (this._softVideo) this._sourceCreated = true\n  }\n\n  async appendBuffer (segment, audioSegment, videoChunk, audioChunk, discontinuity, contiguous, startTime) {\n    if (!videoChunk?.length && !audioChunk?.length) return\n    if (this._directAppend) {\n      const p = []\n      if (videoChunk) p.push(this._mse.append(MSE.VIDEO, videoChunk))\n      if (audioChunk) p.push(this._mse.append(MSE.AUDIO, audioChunk))\n      return Promise.all(p)\n    }\n    const needInit = this._needInitSegment || discontinuity\n    const [video, audio] = this._transmuxer.transmux(videoChunk, audioChunk, discontinuity, contiguous, startTime, this._needInitSegment || discontinuity)\n\n    if (audioChunk && audioSegment) {\n      audioSegment?.setTrackExist(false, true)\n    }\n\n    if (audioChunk && segment) {\n      segment?.setTrackExist(true, false)\n    }\n\n    if (!audioSegment) {\n      segment?.setTrackExist(!!video, !!audio)\n    }\n\n\n    if (video && !audio) {\n      this.hls.emit(Event.NO_AUDIO_TRACK)\n    }\n\n    if (this._softVideo) {\n      this._softVideo.appendBuffer(video, audio)\n      this._needInitSegment = false\n    } else if (this._mse) {\n      const isFirstAppend = !this._sourceCreated\n      if (isFirstAppend) {\n        this._createMseSource(video?.codec, audio?.codec)\n      }\n      this._needInitSegment = false\n      const mse = this._mse\n      const p = []\n\n      if (needInit && !isFirstAppend) {\n        // handle codec change during midstream\n        this._handleCodecChange(video, audio)\n      }\n\n      if (video) p.push(mse.append(MSE.VIDEO, video.data))\n      if (audio) p.push(mse.append(MSE.AUDIO, audio.data))\n      return Promise.all(p)\n    }\n  }\n\n  async removeBuffer (start = 0, end = Infinity) {\n    const media = this.hls.media\n    if (!this._mse || !media || start < 0 || end < start || start >= this._mse.duration) return\n\n    return this._mse\n      .clearBuffer(start, end)\n      .then(() => this.hls.emit(EVENT.REMOVE_BUFFER, { start, end, removeEnd: end }))\n  }\n\n  async evictBuffer (bufferBehind) {\n    const media = this.hls.media\n    if (!this._mse || !media || !bufferBehind || bufferBehind < 0) return\n    const currentTime = media.currentTime\n    const removeEnd = currentTime - bufferBehind\n    if (removeEnd <= 0) return\n    const start = Buffer.start(Buffer.get(media))\n    if (start + 1 >= removeEnd) return\n    return this.removeBuffer(0, removeEnd)\n  }\n\n  async clearAllBuffer () {\n    if (this._mse) return this._mse.clearAllBuffer()\n  }\n\n  decryptBuffer (video, audio) {\n    return this._decryptor.decrypt(video, audio)\n  }\n\n  async reset (reuseMse = false) {\n    if (this._mse && !reuseMse) {\n      this._transmuxer = null\n      this._sourceCreated = false\n      await this._mse.unbindMedia()\n      await this._mse.bindMedia(this.hls.media)\n    }\n    this._needInitSegment = true\n    this._directAppend = false\n  }\n\n  async endOfStream () {\n    if (this._mse) {\n      if (this._sourceCreated) {\n        await this._mse.endOfStream()\n        this.hls.emit(EVENT.BUFFEREOS)\n      }\n    }\n    if (this._softVideo) {\n      this._softVideo.endOfStream()\n    }\n  }\n\n  async setLiveSeekableRange (start, end) {\n    if (this._mse) this._mse.setLiveSeekableRange(start, end)\n  }\n\n  async destroy () {\n    this._decryptor?.destroy()\n    if (this._mse) {\n      await this._mse.unbindMedia()\n    }\n\n    this._decryptor = null\n    this._mse = null\n    this._softVideo = null\n  }\n\n  /**\n   * @private\n   */\n  _createMseSource (videoCodec, audioCodec) {\n    logger.debug(`create mse source, videoCodec=${videoCodec}, audioCodec=${audioCodec}`)\n    const mse = this._mse\n    if (!mse) return\n    if (videoCodec) {\n      mse.createSource(MSE.VIDEO, `video/mp4;codecs=${videoCodec}`)\n      this._sourceCreated = true\n    }\n    if (audioCodec) {\n      mse.createSource(MSE.AUDIO, `audio/mp4;codecs=${audioCodec}`)\n      this._sourceCreated = true\n    }\n    this.hls.emit(EVENT.SOURCEBUFFER_CREATED)\n  }\n\n  /**\n   * This makes it possible to change codecs or container type mid-stream.\n   * @private\n   */\n  _handleCodecChange (video, audio) {\n    const mse = this._mse\n    const codecList = [{\n      type: MSE.VIDEO,\n      codecs: video?.codec\n    }, {\n      type: MSE.AUDIO,\n      codecs: audio?.codec\n    }]\n\n    codecList.filter(item => !!item.codecs).forEach(({type, codecs}) => {\n      const sourceBuffer = mse.getSourceBuffer(type)\n      if (sourceBuffer) {\n        const codec = codecs.split(',')[0]\n        if (!new RegExp(codec, 'ig').test(sourceBuffer.mimeType)) {\n          mse.changeType(type, `${type}/mp4;codecs=${codecs}`)\n        }\n      }\n    })\n  }\n\n  seamlessSwitch () {\n    this._needInitSegment = true\n  }\n\n  isFull (mediaType = MSE.VIDEO){\n    return this._mse?.isFull(mediaType)\n  }\n}\n","export class MasterPlaylist {\n  version = 0\n  streams = [] // MasterStream\n  /**\n   * @readonly\n   */\n  isMaster = true\n}\n\n\nconst MediaType = {\n  Audio: 'AUDIO',\n  Video: 'VIDEO',\n  SubTitle: 'SUBTITLE',\n  ClosedCaptions: 'CLOSED-CAPTIONS'\n}\n\nexport class MediaStream {\n  id = 0\n  url = ''\n  default = false\n  autoSelect = false\n  forced = false\n  group = ''\n  name = ''\n  lang = ''\n  segments = []\n  endSN = 0\n}\n\nexport class AudioStream extends MediaStream {\n  mediaType = MediaType.Audio\n  channels = 0\n}\n\nexport class VideoStream extends MediaStream {\n  mediaType = MediaType.Video\n}\n\nexport class SubTitleStream extends MediaStream {\n  mediaType = MediaType.SubTitle\n}\n\nexport class ClosedCaptionsStream extends MediaStream {\n  mediaType = MediaType.ClosedCaptions\n}\n\nexport class MasterStream {\n  id = 0\n  bitrate = 0\n  width = 0\n  height = 0\n  name = ''\n  url = ''\n  audioCodec = ''\n  videoCodec = ''\n  textCodec = ''\n  audioGroup = ''\n\n  /** @type {AudioStream[]} */\n  audioStreams = []\n\n  /** @type {SubTitleStream[]} */\n  subtitleStreams = []\n\n  /** @type {ClosedCaptionsStream[]} */\n  closedCaptionsStream = []\n}\n\nexport class MediaPlaylist {\n  version = 0\n  url = ''\n  type = '' // upper case\n  startCC = 0\n  endCC = 0\n  startSN = 0\n  endSN = 0\n  totalDuration = 0\n  targetDuration = 0\n  partTargetDuration = 0\n  canSkipUntil = 0\n  canSkipDateRanges = false\n  skippedSegments = 0\n  canBlockReload = false\n  partHoldBack = 0\n  live = true\n  lowLatency = false\n  endPartIndex = 0\n  /** @type {Array.<MediaSegment>} */\n  segments = []\n}\n\nexport class MediaSegment {\n  sn = 0 // Media Sequence Number\n  cc = 0\n  url = ''\n  title = ''\n  start = 0\n  duration = 0\n  dataTime = ''\n  /** @type {?MediaSegmentKey} */\n  key = null\n  byteRange = null // [start, end]\n  isInitSegment = false\n  /** @type {?MediaSegment} */\n  initSegment = null\n  isLast = false\n  hasAudio = false\n  hasVideo = false\n\n  independent = false\n  partIndex = 0\n\n  get end () {\n    return this.start + this.duration\n  }\n\n  setTrackExist (v, a) {\n    this.hasVideo = v\n    this.hasAudio = a\n  }\n\n  setByteRange (data, prevSegment) {\n    this.byteRange = [0]\n    const bytes = data.split('@')\n    if (bytes.length === 1 && prevSegment && prevSegment.byteRange) {\n      this.byteRange[0] = prevSegment.byteRange[1] || 0\n      if (this.byteRange[0]) this.byteRange[0] += 1\n    } else {\n      this.byteRange[0] = parseInt(bytes[1])\n    }\n    this.byteRange[1] = this.byteRange[0] + parseInt(bytes[0]) - 1\n  }\n}\n\nexport class MediaSegmentKey {\n  method = ''\n  url = ''\n  /** @type {?Uint8Array} */\n  iv = null\n  keyFormat = ''\n  keyFormatVersions = ''\n\n  constructor (segKey) {\n    if (segKey instanceof MediaSegmentKey) {\n      this.method = segKey.method\n      this.url = segKey.url\n      this.keyFormat = segKey.keyFormat\n      this.keyFormatVersions = segKey.keyFormatVersions\n      if (segKey.iv) this.iv = new Uint8Array(segKey.iv)\n    }\n  }\n\n  clone (sn) {\n    const key = new MediaSegmentKey(this)\n    if (sn !== null && sn !== undefined) key.setIVFromSN(sn)\n    return key\n  }\n\n  setIVFromSN (sn) {\n    if (!this.iv && this.method === 'AES-128' && typeof sn === 'number' && this.url) {\n      this.iv = new Uint8Array(16)\n      for (let i = 12; i < 16; i++) {\n        this.iv[i] = (sn >> (8 * (15 - i))) & 0xff\n      }\n    }\n  }\n}\n","const REGEXP_TAG = /^#(EXT[^:]*)(?::(.*))?$/\nconst REGEXP_ATTR = /([^=]+)=(?:\"([^\"]*)\"|([^\",]*))(?:,|$)/g\nconst REGEXP_ABSOLUTE_URL = /^(?:[a-zA-Z0-9+\\-.]+:)?\\/\\//\nconst REGEXP_URL_PAIR = /^((?:[a-zA-Z0-9+\\-.]+:)?\\/\\/[^/?#]*)?([^?#]*\\/)?/\n\nexport function getLines (text) {\n  return text.split(/[\\r\\n]/).map((x) => x.trim()).filter(Boolean)\n}\n\nexport function parseTag (text) {\n  const ret = text.match(REGEXP_TAG)\n  if (!ret || !ret[1]) return\n  return [ret[1].replace('EXT-X-', ''), ret[2]]\n}\n\nexport function parseAttr (text) {\n  const ret = {}\n  let match = REGEXP_ATTR.exec(text)\n  while (match) {\n    ret[match[1]] = match[2] || match[3]\n    match = REGEXP_ATTR.exec(text)\n  }\n  return ret\n}\n\nexport function getAbsoluteUrl (url, parentUrl) {\n  if (!parentUrl || !url || REGEXP_ABSOLUTE_URL.test(url)) return url\n  const pairs = REGEXP_URL_PAIR.exec(parentUrl)\n  if (!pairs) return url\n  if (url[0] === '/') return pairs[1] + url\n  return pairs[1] + pairs[2] + url\n}\n\nconst CODECS_REGEXP = {\n  audio: [/^mp4a/, /^vorbis$/, /^opus$/, /^flac$/, /^[ae]c-3$/],\n  video: [/^avc/, /^hev/, /^hvc/, /^vp0?[89]/, /^av1$/],\n  text: [/^vtt$/, /^wvtt/, /^stpp/]\n}\n\n/**\n * @param {'audio' | 'video' | 'text'} type\n * @param {Array<string>} codecs\n * @returns {string | undefined}\n */\nexport function getCodecs (type, codecs) {\n  const re = CODECS_REGEXP[type]\n  if (!re || !codecs || !codecs.length) return\n  for (let i = 0; i < re.length; i++) {\n    for (let j = 0; j < codecs.length; j++) {\n      if (re[i].test(codecs[j])) return codecs[j]\n    }\n  }\n}\n","import { MasterPlaylist, MasterStream, AudioStream, SubTitleStream, MediaStream } from './model'\nimport { parseAttr, parseTag, getAbsoluteUrl, getCodecs } from './utils'\n\n/**\n * @param {Array<string>} lines\n * @param {string} parentUrl\n * @returns {MasterPlaylist}\n */\nexport function parseMasterPlaylist (lines, parentUrl) {\n  const master = new MasterPlaylist()\n  let index = 0\n  let line\n  const audioStreams = []\n  const subtitleStreams = []\n\n  // eslint-disable-next-line no-cond-assign\n  while (line = lines[index++]) {\n    const tag = parseTag(line)\n    if (!tag) continue\n    const [name, data] = tag\n    if (name === 'VERSION') {\n      master.version = parseInt(data)\n    } else if (name === 'MEDIA' && data) {\n      const attr = parseAttr(data)\n      let stream\n      switch (attr.TYPE) {\n        case 'AUDIO':\n          stream = new AudioStream()\n          break\n        case 'SUBTITLES':\n          stream = new SubTitleStream()\n          break\n        default:\n          stream = new MediaStream()\n      }\n\n      stream.url = getAbsoluteUrl(attr.URI, parentUrl)\n      stream.default = attr.DEFAULT === 'YES'\n      stream.autoSelect = attr.AUTOSELECT === 'YES'\n      stream.group = attr['GROUP-ID']\n      stream.name = attr.NAME\n      stream.lang = attr.LANGUAGE\n      if (attr.CHANNELS) {\n        stream.channels = Number(attr.CHANNELS.split('/')[0])\n        if (Number.isNaN(stream.channels)) stream.channels = 0\n      }\n\n      if (attr.TYPE === 'AUDIO' && attr.URI) {\n        audioStreams.push(stream)\n      }\n\n      if (attr.TYPE === 'SUBTITLES') {\n        subtitleStreams.push(stream)\n      }\n\n    } else if (name === 'STREAM-INF' && data) {\n      const stream = new MasterStream()\n      const attr = parseAttr(data)\n\n      stream.bitrate = parseInt(attr['AVERAGE-BANDWIDTH'] || attr.BANDWIDTH)\n      stream.name = attr.NAME\n      stream.url = getAbsoluteUrl(lines[index++], parentUrl)\n      if (attr.RESOLUTION) {\n        const [w, h] = attr.RESOLUTION.split('x')\n        stream.width = parseInt(w)\n        stream.height = parseInt(h)\n      }\n      if (attr.CODECS) {\n        const codecs = attr.CODECS.split(/[ ,]+/).filter(Boolean)\n        stream.videoCodec = getCodecs('video', codecs)\n        stream.audioCodec = getCodecs('audio', codecs)\n        stream.textCodec = getCodecs('text', codecs)\n      }\n      stream.audioGroup = attr.AUDIO\n      stream.subtitleGroup = attr.SUBTITLES\n\n      master.streams.push(stream)\n    }\n  }\n  master.streams.forEach((s, i) => { s.id = i })\n\n  if (audioStreams.length) {\n    audioStreams.forEach((s, i) => { s.id = i })\n    master.streams.forEach((stream) => {\n      if (stream.audioGroup) {\n        stream.audioStreams = audioStreams.filter(x => x.group === stream.audioGroup)\n      }\n    })\n  }\n\n  if (subtitleStreams.length) {\n    subtitleStreams.forEach((s, i) => { s.id = i })\n    master.streams.forEach((stream) => {\n      if (stream.subtitleGroup) {\n        stream.subtitleStreams = subtitleStreams.filter(x => x.group === stream.subtitleGroup)\n      }\n    })\n  }\n\n  return master\n}\n","import { MediaPlaylist, MediaSegment, MediaSegmentKey } from './model'\nimport { getAbsoluteUrl, parseAttr, parseTag } from './utils'\n\nexport function parseMediaPlaylist (lines, parentUrl, useLowLatency) {\n  const media = new MediaPlaylist()\n  media.url = parentUrl\n  let curSegment = new MediaSegment()\n  let curInitSegment = null\n  let curKey = null\n  let totalDuration = 0\n  let curSN = 0\n  let curCC = 0\n  let index = 0\n  let line\n  let endOfList = false\n  let partSegmentIndex = 0\n\n\n  // eslint-disable-next-line no-cond-assign\n  while (line = lines[index++]) {\n    if (endOfList) {\n      break\n    }\n    if (line[0] !== '#') { // url\n      if (media.lowLatency) {\n        curSN++\n        continue\n      }\n\n      curSegment.sn = curSN\n      curSegment.cc = curCC\n      curSegment.url = getAbsoluteUrl(line, parentUrl)\n      if (curKey) curSegment.key = curKey.clone(curSN)\n      if (curInitSegment) curSegment.initSegment = curInitSegment\n      media.segments.push(curSegment)\n      curSegment = new MediaSegment()\n      curSN++\n      continue\n    }\n\n    const tag = parseTag(line)\n    if (!tag) continue\n    const [name, data] = tag\n    switch (name) {\n      case 'VERSION':\n        media.version = parseInt(data)\n        break\n      case 'PLAYLIST-TYPE':\n        media.type = data?.toUpperCase()\n        break\n      case 'TARGETDURATION':\n        media.targetDuration = parseFloat(data)\n        break\n      case 'PART-INF': {\n        if (useLowLatency) {\n          media.lowLatency = true\n        }\n        const attr = parseAttr(data)\n        if (attr['PART-TARGET']) {\n          media.partTargetDuration = parseFloat(attr['PART-TARGET'])\n        }\n      }\n        break\n      case 'SERVER-CONTROL':{\n        const attr = parseAttr(data)\n        media.canBlockReload = attr['CAN-BLOCK-RELOAD'] === 'YES'\n        media.partHoldBack = parseFloat(attr['PART-HOLD-BACK'] || 0)\n        media.canSkipUntil = parseFloat(attr['CAN-SKIP-UNTIL'] || 0)\n        media.canSkipDateRanges = attr['CAN-SKIP-DATERANGES'] === 'YES'\n      }\n        break\n      case 'ENDLIST': {\n        const lastSegment = media.segments[media.segments.length - 1]\n        if (lastSegment) {\n          lastSegment.isLast = true\n        }\n        media.live = false\n        endOfList = true\n      }\n        break\n      case 'MEDIA-SEQUENCE':\n        curSN = media.startSN = parseInt(data)\n        break\n      case 'DISCONTINUITY-SEQUENCE':\n        curCC = media.startCC = parseInt(data)\n        break\n      case 'DISCONTINUITY':\n        curCC++\n        break\n      case 'BYTERANGE':\n        curSegment.setByteRange(data, media.segments[media.segments.length - 1])\n        break\n      case 'PART': {\n        if (!media.lowLatency) break\n        const attr = parseAttr(data)\n        curSegment.duration = parseFloat(attr['DURATION'])\n        curSegment.independent = attr['INDEPENDENT'] === 'YES'\n        curSegment.sn = curSN\n        curSegment.cc = curCC\n        curSegment.partIndex = partSegmentIndex\n        curSegment.start = totalDuration\n        curSegment.duration = parseFloat(attr['DURATION'])\n        totalDuration += curSegment.duration\n        curSegment.url = getAbsoluteUrl(attr['URI'], parentUrl)\n        if (curKey) curSegment.key = curKey.clone(curSN)\n        if (curInitSegment) curSegment.initSegment = curInitSegment\n        media.segments.push(curSegment)\n        curSegment = new MediaSegment()\n        partSegmentIndex++\n      }\n\n        break\n      case 'PRELOAD-HINT':\n        break\n      case 'PROGRAM-DATE-TIME':\n        curSegment.dataTime = data\n        break\n      case 'EXTINF': {\n        if (media.lowLatency) {\n          partSegmentIndex = 0\n          break\n        }\n        const [duration, title] = data.split(',')\n        curSegment.start = totalDuration\n        curSegment.duration = parseFloat(duration)\n        totalDuration += curSegment.duration\n        curSegment.title = title\n      }\n        break\n      case 'KEY': {\n        const attr = parseAttr(data)\n        if (attr.METHOD === 'NONE') {\n          curKey = null\n          break\n        }\n        if (attr.METHOD !== 'AES-128') throw new Error(`encrypt ${attr.METHOD}/${attr.KEYFORMAT} is not supported`)\n        curKey = new MediaSegmentKey()\n        curKey.method = attr.METHOD\n        curKey.url = /^blob:/.test(attr.URI) ? attr.URI : getAbsoluteUrl(attr.URI, parentUrl)\n        curKey.keyFormat = attr.KEYFORMAT || 'identity'\n        curKey.keyFormatVersions = attr.KEYFORMATVERSIONS\n        if (attr.IV) {\n          let str = attr.IV.slice(2)\n          str = (str.length & 1 ? '0' : '') + str\n          curKey.iv = new Uint8Array(str.length / 2)\n          for (let i = 0, l = str.length / 2; i < l; i++) {\n            curKey.iv[i] = parseInt(str.slice(i * 2, i * 2 + 2), 16)\n          }\n        }\n      }\n        break\n      case 'MAP': {\n        const attr = parseAttr(data)\n        curSegment.url = getAbsoluteUrl(attr.URI, parentUrl)\n        if (attr.BYTERANGE) curSegment.setByteRange(attr.BYTERANGE)\n        curSegment.isInitSegment = true\n        curSegment.sn = 0\n        if (curKey) {\n          curSegment.key = curKey.clone(0)\n        }\n        curInitSegment = curSegment\n        curSegment = new MediaSegment()\n      }\n        break\n      default:\n    }\n  }\n\n  media.segments = media.segments.filter(x => x.duration !== 0)\n\n  const lastSegment = media.segments[media.segments.length - 1]\n  if (lastSegment) {\n    media.endSN = lastSegment.sn\n    media.endPartIndex = lastSegment.partIndex\n  }\n\n  media.totalDuration = totalDuration\n  media.endCC = curCC\n\n  return media\n}\n","import { parseMasterPlaylist } from './master'\nimport { parseMediaPlaylist } from './media'\nimport { getLines } from './utils'\n\nexport class M3U8Parser {\n  static parse (text = '', parentUrl, useLowLatency) {\n    if (!text.includes('#EXTM3U')) throw new Error('Invalid m3u8 file')\n\n    const lines = getLines(text)\n\n    if (M3U8Parser.isMediaPlaylist(text)) {\n      return parseMediaPlaylist(lines, parentUrl, useLowLatency)\n    }\n    return parseMasterPlaylist(lines, parentUrl)\n  }\n\n  static isMediaPlaylist (text) {\n    return text.includes('#EXTINF:') || text.includes('#EXT-X-TARGETDURATION:')\n  }\n}\n","import { NetLoader, StreamingError, EVENT, ERR } from 'xgplayer-streaming-shared'\nimport { M3U8Parser } from './parser'\nimport { Event } from '../constants'\n\nexport class ManifestLoader {\n  constructor (hls) {\n    this.hls = hls\n    this._timer = null\n    this._useLowLatency = hls.config.useLowLatency\n\n    const { retryCount, retryDelay, manifestLoadTimeout, fetchOptions } = this.hls.config\n    this._loader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'text',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: manifestLoadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n    this._audioLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'text',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: manifestLoadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n\n    this._subtitleLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'text',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: manifestLoadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n\n  }\n\n  async load (url, audioUrl, subtitleUrl) {\n    const toLoad = [this._loader.load(url)]\n    if (audioUrl) {\n      toLoad.push(this._audioLoader.load(audioUrl))\n    }\n\n    if (subtitleUrl) {\n      toLoad.push(this._subtitleLoader.load(subtitleUrl))\n    }\n\n    let videoText\n    let audioText\n    let subtitleText\n    let videoResUrl\n    let audioResUrl\n    let subtitleResUrl\n\n    try {\n      const [video, audio, subtitle] = await Promise.all(toLoad)\n      if (!video) return []\n\n      this._emitOnLoaded(video, url)\n\n      videoText = video.data\n      videoResUrl = video.response.url || url\n\n      if (audioUrl) {\n        audioText = audio?.data\n        subtitleText = subtitle?.data\n        audioResUrl = audio?.response?.url || audioUrl\n        subtitleResUrl = subtitle?.response?.url || subtitleUrl\n        audioText && this._emitOnLoaded(audio, audioUrl)\n        subtitleText && this._emitOnLoaded(subtitle, subtitleUrl)\n      } else {\n        subtitleText = audio?.data\n        subtitleResUrl = audio?.response?.url || subtitleUrl\n        subtitleText && this._emitOnLoaded(audio, subtitleUrl)\n      }\n\n    } catch (error) {\n      throw StreamingError.network(error)\n    }\n\n    const { onPreM3U8Parse } = this.hls.config\n\n    let playlist\n    let audioPlaylist\n    let subtitlePlaylist\n    try {\n      if (onPreM3U8Parse) {\n        videoText = onPreM3U8Parse(videoText) || videoText\n        if (audioText) audioText = onPreM3U8Parse(audioText, true) || audioText\n        if (subtitleText) subtitleText = onPreM3U8Parse(subtitleText, true) || subtitleText\n      }\n      playlist = M3U8Parser.parse(videoText, videoResUrl, this._useLowLatency)\n      if (playlist?.live === false && playlist.segments && !playlist.segments.length) {\n        throw new Error('empty segments list')\n      }\n      if (audioText) {\n        audioPlaylist = M3U8Parser.parse(audioText, audioResUrl, this._useLowLatency)\n      }\n      if (subtitleText) {\n        subtitlePlaylist = M3U8Parser.parse(subtitleText, subtitleResUrl, this._useLowLatency)\n      }\n\n    } catch (error) {\n      throw new StreamingError(ERR.MANIFEST, ERR.SUB_TYPES.HLS, error)\n    }\n    if (playlist) {\n      if (playlist.isMaster) {\n        this.hls.emit(Event.HLS_MANIFEST_LOADED, { playlist })\n      } else {\n        this.hls.emit(Event.HLS_LEVEL_LOADED, { playlist })\n      }\n    }\n\n    return [playlist, audioPlaylist, subtitlePlaylist]\n  }\n\n  parseText (videoText, url) {\n    const { onPreM3U8Parse } = this.hls.config\n\n    let playlist\n    try {\n      if (onPreM3U8Parse) {\n        videoText = onPreM3U8Parse(videoText) || videoText\n      }\n      playlist = M3U8Parser.parse(videoText, url, this._useLowLatency)\n      if (playlist?.live === false && playlist.segments && !playlist.segments.length) {\n        throw new Error('empty segments list')\n      }\n    } catch (error) {\n      throw new StreamingError(ERR.MANIFEST, ERR.SUB_TYPES.HLS, error)\n    }\n    if (playlist) {\n      if (playlist.isMaster) {\n        this.hls.emit(Event.HLS_MANIFEST_LOADED, { playlist })\n      } else {\n        this.hls.emit(Event.HLS_LEVEL_LOADED, { playlist })\n      }\n    }\n    return [playlist]\n  }\n\n  poll (url, audioUrl, subtitleUrl, cb, errorCb, time) {\n    clearTimeout(this._timer)\n    time = time || 3000\n    let retryCount = this.hls.config.pollRetryCount\n    const fn = async () => {\n      clearTimeout(this._timer)\n      try {\n        const res = await this.load(url, audioUrl, subtitleUrl)\n        if (!res[0]) return\n        retryCount = this.hls.config.pollRetryCount\n        cb(res[0], res[1], res[2])\n      } catch (e) {\n        retryCount--\n        if (retryCount <= 0) {\n          errorCb(e)\n        }\n      }\n      this._timer = setTimeout(fn, time)\n    }\n    this._timer = setTimeout(fn, time)\n  }\n\n  stopPoll () {\n    clearTimeout(this._timer)\n    return this.cancel()\n  }\n\n  cancel () {\n    return Promise.all([\n      this._loader.cancel(),\n      this._audioLoader.cancel()\n    ])\n  }\n\n  _emitOnLoaded = (res, url) => {\n    const { response, options } = res\n    const { firstByteTime, startTime, endTime, contentLength } = options || {}\n    const time = endTime - startTime\n\n    this.hls.emit(EVENT.SPEED, { time, byteLength: contentLength, url })\n    this.hls.emit(EVENT.LOAD_COMPLETE, { url, elapsed: time || 0 })\n    this.hls.emit(EVENT.TTFB, { url, responseUrl: response.url, elapsed: firstByteTime - startTime })\n    this.hls.emit(EVENT.LOAD_RESPONSE_HEADERS, { headers: response.headers, url })\n  }\n\n  _onLoaderRetry = (error, retryTime) => {\n    this.hls.emit(Event.LOAD_RETRY, {\n      error: StreamingError.network(error),\n      retryTime\n    })\n  }\n}\n","export function clamp (num, min, max) {\n  if (min > max) {\n    max = min\n  }\n  return Math.min(Math.max(num, min), max)\n}\n","import { Logger } from 'xgplayer-streaming-shared'\n\nconst logger = new Logger('playlist')\n\nexport class Stream {\n  live = undefined\n  id = 0\n  bitrate = 0\n  width = 0\n  height = 0\n  name = ''\n  url = ''\n  audioCodec = ''\n  videoCodec = ''\n  textCodec = ''\n\n  startCC = 0\n  endCC = 0\n  startSN = 0\n  endSN = -1\n  totalDuration = 0\n  targetDuration = 0\n\n  partTargetDuration = 0\n  canSkipUntil = 0\n  canSkipDateRanges = false\n  skippedSegments = 0\n  canBlockReload = false\n  partHoldBack = 0\n  lowLatency = false\n  endPartIndex = 0\n\n  snDiff = null // number\n\n  segments = []\n\n  /** @type {import('../../parser/model').AudioStream[]} */\n  audioStreams = []\n\n  /** @type {import('../../parser/model').SubTitleStream[]} */\n  subtitleStreams = []\n\n  /** @type {import('../../parser/model').ClosedCaptionsStream[]} */\n  closedCaptions = []\n\n  /** @type {import('../../parser/model').AudioStream | null} */\n  currentAudioStream = null\n\n  /** @type {import('../../parser/model').subtitleStreams | null} */\n  currentSubtitleStream = null\n\n  /**\n   * asdasd {@link AudioStream}\n   */\n  get lastSegment () {\n    if (this.segments.length) {\n      return this.segments[this.segments.length - 1]\n    }\n    return null\n  }\n\n  get segmentDuration () {\n    return this.targetDuration || this.segments[0]?.duration || 0\n  }\n\n  get liveEdge () {\n    return this.endTime\n  }\n\n  get endTime () {\n    return this.lastSegment?.end || 0\n  }\n\n  get currentSubtitleEndSn () {\n    return this.currentSubtitleStream?.endSN || 0\n  }\n\n  constructor (playlist, audioPlaylist, subtitlePlaylist) {\n    this.update(this._setLLPlaybackPoint(playlist), audioPlaylist, subtitlePlaylist)\n  }\n\n  clearOldSegment (startTime, pointer) {\n    if (this.currentAudioStream) {\n      this._clearSegments(startTime, pointer)\n    }\n\n    return this._clearSegments(startTime, pointer)\n  }\n\n  getAudioSegment (seg) {\n    if (!seg || !this.currentAudioStream) return\n    const sn = seg.sn - this.snDiff\n    return this.currentAudioStream.segments.find(x => x.sn === sn)\n  }\n\n  update (playlist, audioPlaylist) {\n    this.url = playlist.url\n    if (Array.isArray(playlist.segments)) { // media\n      if (this.live === null || this.live === undefined) this.live = playlist.live\n      this._updateSegments(playlist, this)\n\n      this.startCC = playlist.startCC\n      this.endCC = playlist.endCC\n      this.startSN = playlist.startSN\n      this.endSN = playlist.endSN || -1\n      this.totalDuration = playlist.totalDuration\n      this.targetDuration = playlist.targetDuration\n      this.live = playlist.live\n\n      this.lowLatency = playlist.lowLatency\n      this.canBlockReload = playlist.canBlockReload\n      this.canSkipDateRanges = playlist.canSkipDateRanges\n      this.canSkipUntil = playlist.canSkipUntil\n      this.partHoldBack = playlist.partHoldBack\n      this.partTargetDuration = playlist.partTargetDuration\n      this.skippedSegments = playlist.skippedSegments\n      this.endPartIndex = playlist.endPartIndex\n\n      if (audioPlaylist && this.currentAudioStream && Array.isArray(audioPlaylist.segments)) {\n        this._updateSegments(audioPlaylist, this.currentAudioStream)\n        if ((this.snDiff === null || this.snDiff === undefined) && playlist.segments.length && audioPlaylist.segments.length) {\n          this.snDiff = playlist.segments[0].sn - audioPlaylist.segments[0].sn\n        }\n      }\n\n    } else { // master stream\n      this.id = playlist.id\n      this.bitrate = playlist.bitrate\n      this.width = playlist.width\n      this.height = playlist.height\n      this.name = playlist.name\n      this.audioCodec = playlist.audioCodec\n      this.videoCodec = playlist.videoCodec\n      this.textCodec = playlist.textCodec\n      this.audioStreams = playlist.audioStreams\n      this.subtitleStreams = playlist.subtitleStreams\n      if (!this.currentAudioStream && this.audioStreams.length) {\n        this.currentAudioStream = this.audioStreams.find(x => x.default) || this.audioStreams[0]\n      }\n\n      if (!this.currentSubtitleStream && this.subtitleStreams.length) {\n        this.currentSubtitleStream = this.subtitleStreams.find(x => x.default) || this.subtitleStreams[0]\n      }\n    }\n  }\n\n  updateSubtitle (subtitlePlaylist) {\n    if (!(subtitlePlaylist && this.currentSubtitleStream && Array.isArray(subtitlePlaylist.segments))) return\n\n    const newSegs = this._updateSegments(subtitlePlaylist, this.currentSubtitleStream)\n    const segs = this.currentSubtitleStream.segments\n    if (segs.length > 100 ) {\n      this.currentSubtitleStream.segments = segs.slice(100)\n    }\n\n    if (!newSegs) return\n\n    return newSegs.map(x => {\n      return {\n        sn: x.sn,\n        url: x.url,\n        duration: x.duration,\n        start: x.start,\n        end: x.end,\n        lang: this.currentSubtitleStream.lang\n      }\n    })\n  }\n\n\n  switchSubtitle (lang) {\n    const toSwitch = this.subtitleStreams.find(x => x.lang === lang)\n    const origin = this.currentSubtitleStream\n    if (toSwitch) {\n      this.currentSubtitleStream = toSwitch\n      origin.segments = []\n    }\n  }\n\n  _setLLPlaybackPoint (playlist) {\n    if (!playlist.lowLatency || !playlist.segments.length) return playlist\n\n    const maxStartPoint = playlist.totalDuration - playlist.partHoldBack\n    const segs = playlist.segments\n    let index = 0\n\n    for (let i = 0, l = segs.length; i < l; i++) {\n      if (segs[i].start <= maxStartPoint && segs[i].independent) {\n        index = i\n      }\n    }\n\n    const usefulSegs = segs.slice(index)\n    let endTime = 0\n\n    usefulSegs.forEach(s => {\n      s.start = endTime\n      endTime = s.end\n    })\n\n    playlist.segments = usefulSegs\n    playlist.totalDuration = endTime\n    playlist.startSN = usefulSegs[0].sn\n    playlist.startCC = usefulSegs[0].cc\n\n    logger.log(`set ll-hls playback point: SN=${playlist.startSN} partIndex=${usefulSegs[0].partIndex}, duration=${endTime}`)\n\n    return playlist\n\n  }\n\n  _clearSegments (startTime, pointer) {\n    let sliceStart = 0\n    const segments = this.segments\n    for (let i = 0, l = segments.length; i < l; i++) {\n      if (segments[i].end >= startTime) {\n        sliceStart = i\n        break\n      }\n    }\n\n    if (sliceStart > pointer) {\n      sliceStart = pointer\n    }\n\n    if (sliceStart) {\n      this.segments = this.segments.slice(sliceStart)\n      if (this.currentAudioStream) {\n        this.currentAudioStream.segments = this.currentAudioStream.segments.slice(sliceStart)\n      }\n    }\n\n    return pointer - sliceStart\n  }\n\n  _updateSegments (playlist, segObj) {\n    const segments = segObj.segments\n    if (this.live) {\n      const lowLatency = playlist.lowLatency\n      const endSeg = segments[segments.length - 1]\n      const endSN = endSeg?.sn || -1\n      const endPartIndex = endSeg?.partIndex || 0\n\n      let hasNew = endSN < playlist.endSN && playlist.segments.length\n\n      if (lowLatency) {\n        hasNew = hasNew || endPartIndex < playlist.endPartIndex\n      }\n\n      if (hasNew) {\n        logger.log(`update segments: endSN:${endSN}, partIndex:${endPartIndex} --> endSN:${playlist.endSN}, partIndex:${playlist.endPartIndex}`)\n        const index = playlist.segments.findIndex(x => x.sn === endSN && x.partIndex === endPartIndex)\n        const toAppend = index < 0 ? playlist.segments : playlist.segments.slice(index + 1)\n\n        if (segments.length && toAppend.length) {\n          let endTime = endSeg.end\n          const endTimeBeforeAppend = endTime\n          toAppend.forEach(seg => {\n            seg.start = endTime\n            endTime = seg.end\n          })\n\n          logger.log(`liveEdge: ${endTimeBeforeAppend} -> ${endTime}`)\n\n          const lastCC = endSeg?.cc || -1\n          if (lastCC > toAppend[0].cc) {\n            toAppend.forEach(seg => (seg.cc += lastCC))\n          }\n        }\n        segObj.endSN = playlist.endSN\n        segObj.segments = segments.concat(toAppend)\n\n        return toAppend\n      }\n    } else {\n      segObj.segments = playlist.segments\n    }\n  }\n\n}\n","import { clamp } from '../utils'\nimport { Stream } from './stream'\nimport { Event } from '../constants'\n\nexport class Playlist {\n  /** @type {import('./stream').Stream[]} */\n  streams = []\n\n  /** @type {import('./stream').Stream} */\n  currentStream = null\n\n  dvrWindow = 0\n\n  _segmentPointer = -1\n\n  constructor (hls) {\n    this.hls = hls\n  }\n\n  get lowLatency () {\n    return this.currentStream?.lowLatency\n  }\n\n  get lastSegment () {\n    return this.currentStream?.lastSegment\n  }\n\n  get currentSegment () {\n    return this.currentSegments?.[this._segmentPointer]\n  }\n\n  get nextSegment () {\n    return this.currentSegments?.[this._segmentPointer + 1]\n  }\n\n  get currentSegments () {\n    return this.currentStream?.segments\n  }\n\n  get currentSubtitleEndSn () {\n    return this.currentStream?.currentSubtitleEndSn\n  }\n\n  get liveEdge () {\n    return this.currentStream?.liveEdge\n  }\n\n  get totalDuration () {\n    return this.currentStream?.totalDuration || 0\n  }\n\n  get seekRange () {\n    const segments = this.currentSegments\n    if (!segments || !segments.length) return\n    return [\n      segments[0].start,\n      segments[segments.length - 1].end\n    ]\n  }\n\n  get nbSegments () {\n    return this.currentSegments?.length || 0\n  }\n\n  get isEmpty () {\n    return !this.currentSegments?.length\n  }\n\n  get isLive () {\n    return this.currentStream?.live\n  }\n\n  get hadSegmentLoaded () {\n    return this._segmentPointer !== -1\n  }\n\n  get hasSubtitle () {\n    return !!this.currentStream?.currentSubtitleStream\n  }\n\n  getAudioSegment (seg) {\n    return this.currentStream?.getAudioSegment(seg)\n  }\n\n  moveSegmentPointer (pos) {\n    if (pos === null || pos === undefined) pos = this._segmentPointer + 1\n    this._segmentPointer = clamp(pos, -1, this.currentSegments?.length)\n  }\n\n  reset () {\n    this.streams = []\n    this.currentStream = null\n    this.dvrWindow = 0\n    this._segmentPointer = -1\n  }\n\n  getSegmentByIndex (index) {\n    return this.currentSegments?.[index]\n  }\n\n  setNextSegmentByIndex (index = 0) {\n    this._segmentPointer = index - 1\n  }\n\n  findSegmentIndexByTime (time) {\n    const segments = this.currentSegments\n    if (segments) {\n      for (let i = 0, l = segments.length, seg; i < l; i++) {\n        seg = segments[i]\n        if (time >= seg.start && time < seg.end) {\n          return i\n        }\n      }\n\n      const lastSegment = segments[segments.length - 1]\n      if (Math.abs(time - lastSegment?.end) < 0.2) return segments.length - 1\n    }\n  }\n\n  upsertPlaylist (playlist, audioPlaylist, subtitlePlaylist) {\n    if (!playlist) return\n    if (playlist.isMaster) {\n      this.streams.length = playlist.streams.length\n      playlist.streams.filter(x => x.url).forEach((stream, i) => {\n        if (this.streams[i]) {\n          this.streams[i].update(stream)\n        } else {\n          this.streams[i] = new Stream(stream)\n        }\n      })\n      this.currentStream = this.streams[0]\n      // update media\n    } else if (Array.isArray(playlist.segments)) {\n      const stream = this.currentStream\n      if (stream) {\n        stream.update(playlist, audioPlaylist, subtitlePlaylist)\n        const newSubtitleSegs = stream.updateSubtitle(subtitlePlaylist)\n        if (newSubtitleSegs) {\n          this.hls.emit(Event.SUBTITLE_SEGMENTS, {\n            list: newSubtitleSegs\n          })\n        }\n      } else {\n        this.reset()\n        this.currentStream = this.streams[0] = new Stream(playlist, audioPlaylist, subtitlePlaylist)\n      }\n    }\n\n    const currentStream = this.currentStream\n\n    if (currentStream) {\n      if (this.hls.isLive && !this.dvrWindow) {\n        this.dvrWindow = this.currentSegments.reduce((a, c) => {\n          a += c.duration\n          return a\n        }, 0)\n      }\n    }\n  }\n\n  switchSubtitle (lang) {\n    this.currentStream?.switchSubtitle(lang)\n  }\n\n  clearOldSegment (maxPlaylistSize = 50) {\n    const stream = this.currentStream\n    if (!this.dvrWindow || !stream) return\n    const startTime = stream.endTime - this.dvrWindow\n    if (startTime <= 0) return\n    const segments = stream.segments\n    if (segments.length <= maxPlaylistSize) return\n\n    this._segmentPointer = stream.clearOldSegment(startTime, this._segmentPointer)\n  }\n\n  checkSegmentTrackChange (cTime, nbSb) {\n    const index = this.findSegmentIndexByTime(cTime)\n    const seg = this.getSegmentByIndex(index)\n\n    if (!seg) return\n\n    if (!seg.hasAudio && !seg.hasVideo) return\n\n    // when seek\n    if (nbSb !== 2 && seg.hasAudio && seg.hasVideo) return seg\n\n    // continuous play\n    if (seg.end - cTime > 0.3) return\n\n    const next = this.getSegmentByIndex(index + 1)\n\n    if (!next) return\n\n    if (!next.hasAudio && !next.hasVideo) return\n\n    if ((next.hasAudio !== seg.hasAudio || next.hasVideo !== seg.hasVideo)) return next\n\n  }\n\n}\n","import { NetLoader, EVENT, BandwidthService, StreamingError } from 'xgplayer-streaming-shared'\n\n\n/**\n * @typedef {import('../manifest-loader/parser/model').MediaSegment} MediaSegment\n */\n\nexport class SegmentLoader {\n  /** @type {Error} */\n  error = null\n\n  constructor (hls) {\n    this.hls = hls\n    this._bandwidthService = new BandwidthService()\n    this._mapCache = {}\n    this._keyCache = {}\n\n    const { retryCount, retryDelay, loadTimeout, fetchOptions } = this.hls.config\n    this._segmentLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'arraybuffer',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: loadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n    this._audioSegmentLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'arraybuffer',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: loadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n    this._keyLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'arraybuffer',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: loadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n  }\n\n  speedInfo () {\n    return {\n      speed: this._bandwidthService.getLatestSpeed(),\n      avgSpeed: this._bandwidthService.getAvgSpeed()\n    }\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {MediaSegment} audioSeg\n   * @param {boolean} loadInit\n   * @param {boolean} loadAudioInit\n   */\n  load (seg, audioSeg, loadInit, loadAudioInit = loadInit) {\n    const toLoad = []\n    if (seg) toLoad[0] = this.loadVideoSegment(seg, loadInit)\n    if (audioSeg) toLoad[1] = this.loadAudioSegment(audioSeg, loadAudioInit)\n    return Promise.all(toLoad)\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {boolean} loadInit\n   */\n  loadVideoSegment (seg, loadInit) {\n    return this._loadSegment(this._segmentLoader, seg, loadInit)\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {boolean} loadInit\n   */\n  loadAudioSegment (seg, loadInit) {\n    return this._loadSegment(this._audioSegmentLoader, seg, loadInit)\n  }\n\n  /**\n   * @param {NetLoader} segLoader\n   * @param {MediaSegment} seg\n   * @param {boolean} loadInit\n   */\n  async _loadSegment (segLoader, seg, loadInit) {\n    let map\n    let key\n    let keyIv\n    let mapKey\n    let mapKeyIv\n    const toLoad = []\n\n    this.hls.emit(EVENT.LOAD_START, { url: seg.url })\n    toLoad[0] = segLoader.load(seg.url)\n    if (loadInit && seg.initSegment) {\n      const mapUrl = seg.initSegment.url\n      map = this._mapCache[mapUrl]\n      if (!map) {\n        this.hls.emit(EVENT.LOAD_START, { url: mapUrl })\n        toLoad[1] = segLoader.load(mapUrl).then(r => {\n          if (r) {\n            const l = Object.keys(this._mapCache)\n            if (l > 30) this._mapCache = {}\n            map = this._mapCache[mapUrl] = r.data\n            this._emitOnLoaded(r, mapUrl)\n          }\n        })\n      }\n      const keyUrl = seg.initSegment.key?.url\n      if (keyUrl) {\n        mapKeyIv = seg.initSegment.key.iv\n        mapKey = this._keyCache[keyUrl]\n        if (!mapKey) {\n          this.hls.emit(EVENT.LOAD_START, { url: keyUrl })\n          toLoad[2] = this._keyLoader.load(keyUrl).then(r => {\n            if (r) {\n              mapKey = this._keyCache[keyUrl] = r.data\n              this._emitOnLoaded(r, keyUrl)\n            }\n          })\n        }\n      }\n    }\n\n    const keyUrl = seg.key?.url\n    if (keyUrl) {\n      keyIv = seg.key.iv\n      key = this._keyCache[keyUrl]\n      if (!key) {\n        this.hls.emit(EVENT.LOAD_START, { url: keyUrl })\n        toLoad[3] = this._keyLoader.load(keyUrl).then(r => {\n          if (r) {\n            key = this._keyCache[keyUrl] = r.data\n            this._emitOnLoaded(r, keyUrl)\n          }\n        })\n      }\n    }\n\n    const [s] = await Promise.all(toLoad)\n    if (!s) return\n    const data = s.data\n    this._emitOnLoaded(s, seg.url)\n\n    return {\n      data,\n      map,\n      key,\n      mapKey,\n      keyIv,\n      mapKeyIv\n    }\n  }\n\n  reset () {\n    this.error = null\n    this._mapCache = {}\n    this._keyCache = {}\n    this._bandwidthService.reset()\n  }\n\n  async cancel () {\n    await Promise.all([this._keyLoader.cancel(), this._segmentLoader.cancel(), this._audioSegmentLoader.cancel()])\n  }\n\n  _emitOnLoaded = (res, url) => {\n    const { data, response, options } = res\n    const { firstByteTime, startTime, endTime, contentLength } = options || {}\n    const time = endTime - startTime\n\n    this._bandwidthService.addRecord(contentLength || data.byteLength, time)\n    this.hls.emit(EVENT.SPEED, { time, byteLength: contentLength, url })\n    this.hls.emit(EVENT.LOAD_COMPLETE, { url, elapsed: time || 0 })\n    this.hls.emit(EVENT.TTFB, { url, responseUrl: response.url, elapsed: firstByteTime - startTime })\n    this.hls.emit(EVENT.LOAD_RESPONSE_HEADERS, { headers: response.headers, url })\n  }\n\n  _onLoaderRetry = (error, retryTime) => {\n    this.hls.emit(EVENT.LOAD_RETRY, {\n      error: StreamingError.network(error),\n      retryTime\n    })\n  }\n}\n","import EventEmitter from 'eventemitter3'\nimport { Buffer, ERR, GapService, getVideoPlaybackQuality, isMediaPlaying, Logger, MediaStatsService, MSE, SeiService, StreamingError } from 'xgplayer-streaming-shared'\nimport { Logger as TransmuxerLogger } from 'xgplayer-transmuxer'\nimport { BufferService } from './buffer-service'\nimport { getConfig } from './config'\nimport { Event } from './constants'\nimport { ManifestLoader } from './manifest-loader'\nimport { Playlist } from './playlist'\nimport { SegmentLoader } from './segment-loader'\nimport { clamp } from './utils'\n\n/**\n * @typedef {import('./manifest-loader/parser/model').MediaSegment} MediaSegment\n */\n/**\n * @typedef {import(\"../../../xgplayer-streaming-shared/es/services/stats\").StatsInfo} Stats\n */\n/**\n * @typedef {{\n *  seamless?: boolean,\n *  startTime?: number,\n *  bitrate?: number\n * }} SwitchUrlOptions\n */\n\nconst logger = new Logger('hls')\n\nexport class Hls extends EventEmitter {\n  static version = __VERSION__\n  version = Hls.version\n  /** @type {HTMLMediaElement | null} */\n  media = null\n  /** @type {import('./config').HlsOption} */\n  config = null\n\n  /** @type {ManifestLoader} */\n  _manifestLoader = null\n\n  /** @type {SegmentLoader} */\n  _segmentLoader = null\n\n  /** @type {Playlist} */\n  _playlist = null\n\n  /** @type {BufferService} */\n  _bufferService = null\n\n  /** @type {GapService} */\n  _gapService = null\n\n  /** @type {SeiService} */\n  _seiService = null\n\n  /** @type {MediaStatsService} */\n  _stats = null\n\n  _prevSegSn = null\n  _prevSegCc = null\n\n  _tickTimer = null\n  _tickInterval = 500\n\n  _segmentProcessing = false\n  _reloadOnPlay = false\n\n  _switchUrlOpts = null\n  _isProcessQuotaExceeded = false\n\n  constructor (cfg) {\n    super()\n    this.config = cfg = getConfig(cfg)\n    this.media = this.config.media\n\n    this._manifestLoader = new ManifestLoader(this)\n    this._segmentLoader = new SegmentLoader(this)\n    this._playlist = new Playlist(this)\n    this._bufferService = new BufferService(this)\n    if (cfg.seiInTime) {\n      this._seiService = new SeiService(this)\n    }\n    if (!cfg.softDecode) this._gapService = new GapService()\n\n    this._stats = new MediaStatsService(this, 90000)\n\n    this.media.addEventListener('play', this._onPlay)\n    this.media.addEventListener('pause', this._onPause)\n    this.media.addEventListener('seeking', this._onSeeking)\n    this.media.addEventListener('timeupdate', this._onTimeupdate)\n  }\n\n  get isLive () { return this._playlist.isLive }\n  get streams () { return this._playlist.streams }\n  get currentStream () { return this._playlist.currentStream }\n  get hasSubtitle () { return this._playlist.hasSubtitle}\n\n  get baseDts () {\n    return this._bufferService?.baseDts\n  }\n\n  speedInfo () {\n    return this._segmentLoader.speedInfo()\n  }\n\n  bufferInfo (maxHole = 0.1) {\n    return Buffer.info(Buffer.get(this.media), this.media?.currentTime, maxHole)\n  }\n\n  /**\n   * @returns {Stats}\n   */\n  getStats () {\n    return this._stats.getStats()\n  }\n\n  playbackQuality () {\n    return getVideoPlaybackQuality(this.media)\n  }\n\n  async load (url, reuseMse = false) {\n    if (url) this.config.url = url\n    url = this.config.url\n    await this._reset(reuseMse)\n    await this._loadData(url)\n    this._startTick()\n  }\n\n  /**\n   * @param {string} url\n   * @private\n   */\n  async _loadData (url) {\n    try {\n      if (url) url = url.trim()\n    } catch (e) {}\n\n    if (!url) throw this._emitError(new StreamingError(ERR.OTHER, ERR.SUB_TYPES.OPTION, null, null, 'm3u8 url is missing'))\n\n    const manifest = await this._loadM3U8(url)\n    const { currentStream } = this._playlist\n\n    if (this._urlSwitching) {\n      if (currentStream.bitrate === 0 && this._switchUrlOpts?.bitrate) {\n        currentStream.bitrate = this._switchUrlOpts?.bitrate\n      }\n      const switchTimePoint = this._getSeamlessSwitchPoint()\n      this.config.startTime = switchTimePoint\n\n      const segIdx = this._playlist.findSegmentIndexByTime(switchTimePoint)\n      const nextSeg = this._playlist.getSegmentByIndex(segIdx + 1)\n\n      if (nextSeg) {\n        // move to next segment in case of media stall\n        const bufferClearStartPoint = nextSeg.start\n        await this._bufferService.removeBuffer(bufferClearStartPoint)\n      }\n    }\n\n    if (!manifest) return\n\n    if (this.isLive) {\n      this._bufferService.setLiveSeekableRange(0, 0xffffffff)\n      logger.log('totalDuration first time got:', this._playlist.totalDuration)\n      logger.log('nb segments got:', this._playlist.nbSegments)\n\n      // 配置的目标延迟小于首次获取分片总时长\n      if (this.config.targetLatency < this._playlist.totalDuration) {\n        this.config.targetLatency = this._playlist.totalDuration\n        this.config.maxLatency = 1.5 * this.config.targetLatency\n      }\n\n      if (!manifest.isMaster) this._pollM3U8(url)\n      if (this._playlist.nbSegments < this.config.minSegmentsStartPlay) return\n\n      await this._loadSegment()\n      return\n    }\n\n    await this._bufferService.updateDuration(currentStream.totalDuration)\n\n    const { startTime } = this.config\n    if (startTime) {\n      if (!this._switchUrlOpts?.seamless) {\n        this.media.currentTime = startTime\n      }\n      this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(startTime) || 0)\n    }\n\n    await this._loadSegment()\n  }\n\n  async replay (isPlayEmit) {\n    this.config.startTime = 0\n    await this.load()\n    this._reloadOnPlay = false\n    return this.media.play(!isPlayEmit)\n  }\n\n  /**\n   * @param {string} url\n   * @param {?SwitchUrlOptions} options\n   * @returns\n   */\n  async switchURL (url, options = {}) {\n    const defaultOpts = {\n      seamless: false,\n      startTime: 0,\n      bitrate: 0\n    }\n    switch (typeof options) {\n      case 'number':\n        options = {startTime: options}\n        break\n      case 'boolean':\n        options = {seamless: options}\n        break\n      case 'object':\n        for (const key in options) {\n          if (options[key] === undefined || options[key] === null) {\n            delete options[key]\n          }\n        }\n        break\n      default:\n        throw `unsupported switchURL args: ${options}`\n    }\n\n    options = Object.assign({}, defaultOpts, options)\n    const { seamless, startTime } = options\n    this.config.url = url\n    this.config.startTime = startTime\n    this._switchUrlOpts = options\n\n    if (!seamless) {\n      let appended\n      try {\n        appended = this.config.softDecode ? this.load(url) : (await this.load(url))\n      } catch (error) {\n        this.emit(Event.SWITCH_URL_FAILED, error)\n        throw error\n      }\n      this._reloadOnPlay = false\n\n      if (appended) {\n        this.emit(Event.SWITCH_URL_SUCCESS, { url })\n      }\n      return this.media.play(true)\n    } else {\n      this._urlSwitching = true\n      this._prevSegSn = null\n      this._prevSegCc = null\n\n      this._playlist.reset()\n      this._bufferService.seamlessSwitch()\n      await this._clear()\n      await this._loadData(url)\n      this._startTick()\n    }\n\n    this._switchUrlOpts = null\n  }\n\n  async switchStream (id, force = true) {\n    const curStream = this.currentStream\n    const streams = this.streams\n    if (!curStream || curStream.id === id || !streams || streams.length < 2) return\n    const toSwitch = streams.find(x => x.id === id)\n    if (!toSwitch) return\n\n    try {\n      await this._clear()\n      if (force) await this._bufferService.clearAllBuffer()\n    } catch (error) {\n      throw this._emitError(StreamingError.create(error))\n    }\n\n    // 同步更新\n    if (curStream.currentAudioStream && toSwitch.audioStreams.length > 2) {\n      const curId = curStream.currentAudioStream.id\n      toSwitch.currentAudioStream = toSwitch.audioStreams.find(x => x.id === curId) || toSwitch.currentAudioStream\n    }\n\n    this._playlist.currentStream = toSwitch\n\n    try {\n      if (this.isLive || !toSwitch.segments.length) await this._refreshM3U8()\n      this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(this.media.currentTime) || 0)\n      this._prevSegCc = null\n      await this._loadSegmentDirect()\n    } catch (error) {\n      this._playlist.currentStream = curStream\n      throw error\n    }\n\n    this._startTick()\n    return toSwitch\n  }\n\n  async switchAudioStream (id, force = true) {\n    const curStream = this.currentStream\n    if (!curStream) return\n    const audioStream = curStream.currentAudioStream\n    if (!audioStream || audioStream.id === id || curStream.audioStreams.length < 2) return\n    const toSwitch = curStream.audioStreams.find(x => x.id === id)\n    if (!toSwitch) return\n\n    try {\n      await this._clear()\n      if (force) await this._bufferService.clearAllBuffer()\n    } catch (error) {\n      throw this._emitError(StreamingError.create(error))\n    }\n\n    curStream.currentAudioStream = toSwitch\n\n    try {\n      if (this.isLive || !toSwitch.segments.length) await this._refreshM3U8()\n      this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(this.media.currentTime) || 0)\n      this._prevSegCc = null\n      await this._loadSegmentDirect()\n    } catch (error) {\n      curStream.currentAudioStream = audioStream\n      throw error\n    }\n\n    this._startTick()\n    return toSwitch\n  }\n\n  async switchSubtitleStream (lang) {\n    this._playlist.switchSubtitle(lang)\n    await this._manifestLoader.stopPoll()\n    await this._refreshM3U8()\n  }\n\n  async destroy () {\n    if (!this.media) return\n    this.removeAllListeners()\n    this._playlist.reset()\n    this._segmentLoader.reset()\n    this._seiService?.reset()\n    this.media.removeEventListener('play', this._onPlay)\n    this.media.removeEventListener('pause', this._onPause)\n    this.media.removeEventListener('seeking', this._onSeeking)\n    this.media.removeEventListener('timeupdate', this._onTimeupdate)\n    await Promise.all([this._clear(), this._bufferService.destroy()])\n    this.media = null\n  }\n\n  /**\n   * @param {('video'|'audio')?} mediaType\n   * @returns {Boolean}\n   */\n  static isSupported (mediaType) {\n    if (!mediaType || mediaType === 'video' || mediaType === 'audio') {\n      return MSE.isSupported()\n    }\n\n    return typeof WebAssembly !== 'undefined'\n  }\n\n  static enableLogger () {\n    Logger.enable()\n    TransmuxerLogger.enable()\n  }\n\n  static disableLogger () {\n    Logger.disable()\n    TransmuxerLogger.disable()\n  }\n\n  /**\n   * @private\n   */\n  async _loadM3U8 (url) {\n    let playlist\n    try {\n      const manifest = this.config.manifestList?.filter(x => x.url === url)[0]?.manifest;\n\n      [playlist] = manifest\n        ? this._manifestLoader.parseText(manifest, url) :\n        await this._manifestLoader.load(url)\n    } catch (error) {\n      throw this._emitError(StreamingError.create(error))\n    }\n    if (!playlist) return\n    this._playlist.upsertPlaylist(playlist)\n\n    if (playlist.isMaster) {\n      if (this._playlist.currentStream.subtitleStreams?.length) {\n        this.emit(Event.SUBTITLE_PLAYLIST, {\n          list: this._playlist.currentStream.subtitleStreams\n        })\n      }\n      await this._refreshM3U8()\n    }\n    this.emit(Event.STREAM_PARSED)\n    return playlist\n  }\n\n  /**\n   * @private 首次更新 master playlist 的 media level\n   */\n  _refreshM3U8 () {\n    const stream = this._playlist.currentStream\n    if (!stream || !stream.url) throw this._emitError(StreamingError.create(null, null, new Error('m3u8 url is not defined')))\n    const url = stream.url\n    const audioUrl = stream.currentAudioStream?.url\n    const subtitleUrl = stream.currentSubtitleStream?.url\n    return this._manifestLoader.load(url, audioUrl, subtitleUrl).then(([mediaPlaylist, audioPlaylist, subtitlePlaylist]) => {\n      if (!mediaPlaylist) return\n      this._playlist.upsertPlaylist(mediaPlaylist, audioPlaylist, subtitlePlaylist)\n      if (!this.isLive) return\n      this._pollM3U8(url, audioUrl, subtitleUrl)\n    }).catch(err => {\n      throw this._emitError(StreamingError.create(err))\n    })\n  }\n\n  /**\n   * @private\n   */\n  _pollM3U8 (url, audioUrl, subtitleUrl) {\n    let isEmpty = this._playlist.isEmpty\n    let pollInterval\n\n    if (this._playlist.lowLatency) {\n      pollInterval = (this._playlist.currentStream.partTargetDuration * 2 || 0) * 1000\n    } else {\n      pollInterval = (this._playlist.lastSegment?.duration || 0) * 1000\n    }\n\n    this._manifestLoader.poll(\n      url,\n      audioUrl,\n      subtitleUrl,\n      (p1, p2, p3) => {\n        this._playlist.upsertPlaylist(p1, p2, p3)\n        this._playlist.clearOldSegment()\n        const switchToNoEmpty = p1 && isEmpty && !this._playlist.isEmpty\n        if (switchToNoEmpty || (!this._playlist.hadSegmentLoaded && this._playlist.nbSegments >= this.config.minSegmentsStartPlay)) {\n          this._loadSegment()\n        }\n        if (isEmpty) isEmpty = this._playlist.isEmpty\n      }, (err) => {\n        this._emitError(StreamingError.create(err))\n      },\n      // 刷新时间\n      pollInterval\n    )\n  }\n\n  /**\n   * @private\n   */\n  _loadSegment = async () => {\n    if (this._segmentProcessing || !this.media) return\n    const nextSeg = this._playlist.nextSegment\n\n    if (!nextSeg) return\n\n    if (!this.isLive) {\n      let bInfo = this.bufferInfo()\n      if (this.media.paused && !this.media.currentTime) {\n        bInfo = this.bufferInfo(bInfo.nextStart || 0.5)\n      }\n      const bufferThroughout = Math.abs(bInfo.end - this.media.duration) < 0.1\n      if (bInfo.remaining >= this.config.preloadTime || bufferThroughout) {\n        if (bufferThroughout && this._bufferService.msIsOpend) {\n          this._bufferService.endOfStream()\n        }\n        return\n      }\n\n      // reset segment pointer by buffer end\n      if (!this._urlSwitching &&\n        this._prevSegSn !== nextSeg.sn - 1 &&\n        bInfo.end &&\n        Math.abs(nextSeg.start - bInfo.end) > 1) {\n        this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(bInfo.end + 0.1))\n      }\n    }\n\n    return this._loadSegmentDirect()\n  }\n\n\n  /**\n   * @private\n   */\n  async _loadSegmentDirect (loadOnce) {\n    const seg = this._playlist.nextSegment\n    if (!seg) return\n\n    let appended = false\n    let cachedError = null\n    try {\n      this._segmentProcessing = true\n      logger.log(`load segment, sn:${seg.sn}, partIndex:${seg.partIndex}`)\n      appended = await this._reqAndBufferSegment(seg, this._playlist.getAudioSegment(seg))\n    } catch (error) {\n      // If an exception is thrown here, other reference functions\n      // need to handle the exception, so the error stops here\n      cachedError = error\n    } finally {\n      this._segmentProcessing = false\n    }\n\n    if (cachedError) {\n      if (this._bufferService.isFull()) {\n        logger.log(`load segment, sn:${seg.sn}, partIndex:${seg.partIndex}`)\n        // if buffer is full, stop request new fragments\n        this._segmentProcessing = true\n        this._isProcessQuotaExceeded = true\n        return false\n      }\n      return this._emitError(StreamingError.create(cachedError))\n    }\n    if (appended) {\n      if (this._urlSwitching) {\n        this._urlSwitching = false\n        this.emit(Event.SWITCH_URL_SUCCESS, { url: this.config.url })\n      }\n\n      this._playlist.moveSegmentPointer()\n      if (seg.isLast) {\n        this._end()\n      } else if (!loadOnce) {\n        this._loadSegment()\n      }\n    }\n\n    return appended\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {MediaSegment} audioSeg\n   * @private\n   */\n  async _reqAndBufferSegment (seg, audioSeg) {\n    const cc = seg ? seg.cc : audioSeg.cc\n    const discontinuity = this._prevSegCc !== cc\n    let responses = []\n    try {\n      responses = await this._segmentLoader.load(seg, audioSeg, discontinuity)\n    } catch (e) {\n      e.fatal = false\n      this._segmentLoader.error = e\n      throw e\n    }\n    if (!responses[0]) return\n    const data = await this._bufferService.decryptBuffer(...responses)\n    if (!data) return\n    const sn = seg ? seg.sn : audioSeg.sn\n    const start = seg ? seg.start : audioSeg.start\n    const stream = this._playlist.currentStream\n    this._bufferService.createSource(data[0], data[1], stream?.videoCodec, stream?.audioCodec)\n    const before = Date.now()\n    await this._bufferService.appendBuffer(seg, audioSeg, data[0], data[1], discontinuity, this._prevSegSn === sn - 1, start)\n    this.emit(Event.APPEND_COST, {elapsed: Date.now() - before, url: seg.url})\n    await this._bufferService.evictBuffer(this.config.bufferBehind)\n    this._prevSegCc = cc\n    this._prevSegSn = sn\n    return true\n  }\n\n  /**\n   * @private\n   */\n  _onPlay = async () => {\n    // fix replay 重复请求问题\n    if (this.media.seeking && this.media.currentTime === 0){\n      logger.debug('replay currentTime 0, return')\n      return\n    }\n    clearTimeout(this._disconnectTimer)\n    if (this._reloadOnPlay) {\n      this._reloadOnPlay = false\n      this.replay(true)\n    } else {\n      await this._loadSegment()\n      this._startTick()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onPause = () => {\n    if (this.isLive) {\n      if (!this._reloadOnPlay) {\n        let { disconnectTime } = this.config\n        if (disconnectTime === null || disconnectTime === undefined) disconnectTime = this._playlist.dvrWindow\n        if (!Number.isFinite(disconnectTime)) return\n        clearTimeout(this._disconnectTimer)\n        this._disconnectTimer = setTimeout(() => {\n          this._reloadOnPlay = true\n          this._clear()\n        }, disconnectTime || 0)\n      }\n    } else {\n      this._stopTick()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onSeeking = async () => {\n    if (!this.media) return\n    this._onCheckQuotaExceeded()\n    const seekTime = this.media.currentTime\n    const seekRange = this._playlist.seekRange\n    if (seekRange) {\n      const newSeekTime = clamp(seekTime, seekRange[0], this.isLive ? seekRange[1] : this.media.duration)\n      if (\n        // if newSeekTime less than 0, media.currentTime will be 0, this causes an infinite loop\n        newSeekTime >= 0 &&\n        Math.abs(seekTime - newSeekTime) >= 0.1\n      ) {\n        this.media.currentTime = newSeekTime\n        return\n      }\n    }\n\n    const curSeg = this._playlist.currentSegment\n    const info = Buffer.info(Buffer.get(this.media), seekTime, 0.1)\n    if (curSeg) {\n      if (info.end && Math.abs(info.end - curSeg.end) < 0.2) return\n    }\n\n    const segIndex = this._playlist.findSegmentIndexByTime(seekTime)\n    const seg = this._playlist.getSegmentByIndex(segIndex)\n    if (segIndex === null || segIndex === undefined || !seg || (this._segmentProcessing && seg === this._playlist.nextSegment)) return\n\n    logger.debug('seek to', seekTime, seg)\n\n    this._playlist.setNextSegmentByIndex(segIndex)\n\n    this._stopTick()\n    await this._segmentLoader.cancel()\n\n    this._segmentProcessing = false\n    if (!info.end || this.isLive) {\n      await this._loadSegmentDirect(true)\n    }\n    this._startTick()\n  }\n\n  async _onCheckQuotaExceeded (){\n    const seekTime = this.media.currentTime\n    // handle buffer QuotaExceeded when seek\n    const buffered = this.media.buffered\n    let inBuffered = false\n    for (let i = 0; i < buffered.length; i++){\n      if (buffered.start(0) >= seekTime && seekTime < buffered.end(i)){\n        inBuffered = true\n        break\n      }\n    }\n    if (this._bufferService.isFull() ) {\n      const bufferBehind = inBuffered ? this.config.bufferBehind : 5\n      const mediaTime = this.media.currentTime\n      if (mediaTime - bufferBehind > 0){\n        await this._bufferService.removeBuffer(0, mediaTime - bufferBehind)\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onTimeupdate = () => {\n    if (!this.media) return\n    const cfg = this.config\n    if (cfg.isLive && cfg.maxLatency && cfg.targetLatency && this.media) {\n      const liveEdge = this._playlist.liveEdge\n      if (!liveEdge) return\n      const latency = liveEdge - this.media.currentTime\n      if (latency >= cfg.maxLatency) {\n        logger.debug(`latency jump, currentTime:${this.media.currentTime}, liveEdge:${liveEdge},  latency=${latency}`)\n        this.media.currentTime = liveEdge - cfg.targetLatency\n      }\n    }\n\n    if (cfg.seiInTime) {\n      this._seiService?.throw(this.media.currentTime)\n    }\n\n    if (this.config.allowedStreamTrackChange && !this.config.softDecode) {\n      this._checkStreamTrackChange(this.media.currentTime)\n    }\n\n  }\n\n  _checkStreamTrackChange (time) {\n    const changedSeg = this._playlist.checkSegmentTrackChange(time, this._bufferService.nbSb)\n    if (!changedSeg) return\n    this.switchURL(this.config.url, changedSeg.start + 0.2)\n  }\n\n  /**\n   * @private\n   */\n  async _clear () {\n    clearTimeout(this._disconnectTimer)\n    this._stopTick()\n    await Promise.all([\n      this._segmentLoader.cancel(),\n      this._manifestLoader.stopPoll()\n    ])\n    this._segmentProcessing = false\n  }\n\n  /**\n   * @private\n   */\n  async _reset (reuseMse = false) {\n    this._reloadOnPlay = false\n    this._prevSegSn = null\n    this._prevSegCc = null\n    this._switchUrlOpts = null\n    this._playlist.reset()\n    this._segmentLoader.reset()\n    this._seiService?.reset()\n    this._stats.reset()\n    await this._clear()\n    return this._bufferService.reset(reuseMse)\n  }\n\n  /**\n   * @private\n   */\n  _end () {\n    this._clear()\n    this._bufferService.endOfStream()\n    if (this.media.readyState <= 2 || this.media.buffered.length > 1) {\n      this._startTick()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _stopTick () {\n    if (this._tickTimer) {\n      clearTimeout(this._tickTimer)\n    }\n    this._tickTimer = null\n  }\n\n  /**\n   * @private\n   */\n  _startTick () {\n    this._stopTick()\n    this._tickTimer = setTimeout(this._tick, this._tickInterval)\n  }\n\n  /**\n   * @private\n   */\n  _tick = () => {\n    if (!this.media) return\n    this._startTick()\n    const media = this.media\n    const buffered = Buffer.get(media)\n    const segLoaderError = this._segmentLoader.error\n    this._onCheckQuotaExceeded()\n    // change _segmentProcessing to false\n    if (this._isProcessQuotaExceeded){\n      if (!this._bufferService.isFull()){\n        this._isProcessQuotaExceeded = false\n        this._segmentProcessing = false\n      }\n    }\n    if (segLoaderError) {\n      // Compatible with the case where the buffer does not start from 0\n      const bufferMaxHoleTolerance = 0.5\n\n      if (!media.readyState || this.bufferInfo(bufferMaxHoleTolerance).remaining < 1) {\n        segLoaderError.fatal = true\n        this._emitError(StreamingError.network(segLoaderError))\n      }\n      return\n    }\n\n    if (Buffer.end(buffered) < 0.1 || !media.readyState) return\n\n    if (isMediaPlaying(media)) {\n      this._loadSegment()\n      if (this._gapService) {\n        this._gapService.do(media, this.config.maxJumpDistance, this.isLive)\n      }\n    } else {\n      if (media.readyState < 2 && this._gapService) {\n        this._gapService.do(media, this.config.maxJumpDistance, !media.currentTime ? true : this.isLive)\n      }\n    }\n  }\n\n  /**\n   * @param {StreamingError} error\n   * @param {boolean?} endOfStream\n   * @private\n   */\n  _emitError (error, endOfStream = false) {\n    if (error.originError?.fatal === false) {\n      logger.warn(error)\n    } else {\n      logger.table(error)\n      logger.error(error)\n      logger.error(this.media?.error)\n\n      if (this.media?.readyState) {\n        this.media.pause()\n      }\n      this._stopTick()\n      if (this._urlSwitching) {\n        this._urlSwitching = false\n        this.emit(Event.SWITCH_URL_FAILED, error)\n      }\n      this.emit(Event.ERROR, error)\n      if (endOfStream) this._end()\n      this._seiService?.reset()\n    }\n    return error\n  }\n\n  /**\n   * @private\n   */\n  _getSeamlessSwitchPoint () {\n    const { media } = this\n    let nextLoadPoint = media.currentTime\n    if (!media.paused) {\n      const segIdx = this._playlist.findSegmentIndexByTime(media.currentTime)\n      const curSeg = this._playlist.getSegmentByIndex(segIdx)\n      const latestKbps = this._stats?.getStats().downloadSpeed // latest download speed\n      if (latestKbps && curSeg) {\n        const delay = (curSeg.duration * this._playlist.currentStream.bitrate) / latestKbps + 1\n\n        nextLoadPoint += delay\n      } else {\n        nextLoadPoint += 5\n      }\n    }\n\n    return nextLoadPoint\n  }\n}\n\ntry {\n  if (localStorage.getItem('xgd')) {\n    Hls.enableLogger()\n  } else {\n    Hls.disableLogger()\n  }\n} catch (error) {\n  // ignore\n}\n","/**\n * @typedef {{\n *  media: HTMLMediaElement,\n *  url?: string,\n *  isLive?: boolean,\n *  softDecode?: boolean,\n *  targetLatency?: number,\n *  maxPlaylistSize?: number,\n *  maxLatency?: number,\n *  bufferBehind?: number,\n *  maxJumpDistance?: number,\n *  startTime?: number,\n *  retryCount?: number,\n *  retryDelay?: number,\n *  loadTimeout?: number,\n *  manifestLoadTimeout?:number,\n *  preloadTime?: number,\n *  disconnectTime?: number,\n *  allowedStreamTrackChange?: boolean,\n *  seiInTime?: boolean,\n *  manifestList?: Array<{url: string, manifest: string}>\n *  fetchOptions?: RequestInit\n *  onPreM3U8Parse?: (m3u8: string) => string | void\n *  decryptor?: Decryptor,\n *  minSegmentsStartPlay?: number\n * }} HlsOption\n */\n\n/**\n * @param {HlsOption} cfg\n * @returns {HlsOption}\n */\nexport function getConfig (cfg) {\n  const media = cfg?.media || document.createElement('video')\n  return {\n    maxPlaylistSize: 50,\n    retryCount: 3,\n    retryDelay: 1000,\n    pollRetryCount: 2,\n    loadTimeout: 10000,\n    manifestLoadTimeout:10000,\n    preloadTime: 30,\n    softDecode: false,\n    bufferBehind: 10,\n    maxJumpDistance: 3,\n    startTime: 0,\n    useLowLatency: true,\n    targetLatency: 10,\n    maxLatency: 20,\n    allowedStreamTrackChange: true,\n    seiInTime: false,\n    manifestList: [],\n    minSegmentsStartPlay: 3,\n    ...cfg,\n    media\n  }\n}\n","import { Event } from './hls/constants'\n\nexport default class PluginExtension {\n  _opts = null\n  _plugin = null\n\n  constructor (opts, plugin) {\n    this._opts = opts\n    this._plugin = plugin\n    this._init()\n  }\n\n  _init () {\n    const { media, preloadTime, innerDegrade, isLive } = this._opts\n\n    if (!media) return\n\n    if (!isLive && media.setPlayMode) {\n      media.setPlayMode('VOD')\n      return\n    }\n\n    if (innerDegrade) {\n      media.setAttribute('innerdegrade', innerDegrade)\n    }\n    if (preloadTime) {\n      media.setAttribute('preloadtime', preloadTime)\n    }\n\n    this._bindEvents()\n  }\n\n  _bindEvents () {\n    const { media } = this._opts\n\n    media.addEventListener('lowdecode', this._onLowDecode)\n  }\n\n  _onLowDecode = () => {\n    const { media, innerDegrade } = this._opts\n\n    this._plugin?.player?.emit('lowdecode', media.degradeInfo)\n    this._plugin?.player?.emit('core_event', {\n      ...media.degradeInfo,\n      eventName: Event.LOWDECODE\n    })\n\n    if (innerDegrade === 1) {\n      this._degrade(media.src)\n    }\n  }\n\n  /**\n   * @param {string | undefined} url\n   */\n  _degrade = (url) => {\n    const { player } = this._plugin\n    const originVideo = player.video\n\n    if (originVideo && originVideo.TAG !== 'MVideo') return\n\n    const newVideo = player.video.degradeVideo\n\n    player.video = newVideo\n\n    originVideo.degrade(url)\n\n    if (url) {\n      player.config.url = url\n    }\n\n    // replace live-video to video element\n    const firstChild = player.root.firstChild\n\n    if (firstChild.TAG === 'MVideo') {\n      player.root.replaceChild(newVideo, firstChild)\n    }\n    const hlsPlugin = this._plugin.constructor.pluginName.toLowerCase()\n    player.unRegisterPlugin(hlsPlugin)\n\n    // play\n    player.once('canplay', () => {\n      player.play()\n    })\n  }\n\n  forceDegradeToVideo = (url) => {\n    const { innerDegrade } = this._opts\n\n    // 降级to video+m3u8\n    if (innerDegrade === 1) {\n      this._degrade(url)\n    }\n  }\n\n  destroy () {\n    this._opts?.media?.removeEventListener('lowdecode', this._onLowDecode)\n    this._plugin = null\n  }\n}\n","import { BasePlugin, Events, Errors } from 'xgplayer'\nimport { EVENT } from 'xgplayer-streaming-shared'\nimport { Hls } from './hls'\nimport { Event } from './hls/constants'\nimport PluginExtension from './plugin-extension'\n\nexport function parseSwitchUrlArgs (args, plugin) {\n  const { player } = plugin\n  const curTime = player.currentTime\n  const options = {\n    startTime: curTime\n  }\n\n  switch (typeof args) {\n    case 'boolean':\n      options.seamless = args\n      break\n    case 'object':\n      Object.assign(options, args)\n      break\n    default:\n      break\n  }\n  return options\n}\n\nexport class HlsPlugin extends BasePlugin {\n  static Hls = Hls\n\n  static EVENT = Event\n\n  /**\n   * @type {Hls}\n   */\n  hls = null\n\n  pluginExtension = null\n\n  static get pluginName () {\n    return 'hls'\n  }\n\n  get core () {\n    return this.hls\n  }\n\n  get version () {\n    return this.hls?.version\n  }\n\n  get softDecode () {\n    const mediaType = this.player?.config?.mediaType\n    return !!mediaType && mediaType !== 'video' && mediaType !== 'audio'\n  }\n\n  beforePlayerInit () {\n    const config = this.player.config\n\n    if (!config.url &&\n      // private config key\n      !config.__allowHlsEmptyUrl__) {\n      return\n    }\n\n    if (this.hls) this.hls.destroy()\n    this.player.switchURL = this._onSwitchURL\n\n    const hlsOpts = config.hls || {}\n    hlsOpts.innerDegrade = hlsOpts.innerDegrade || config.innerDegrade\n    if (hlsOpts.disconnectTime === null || hlsOpts.disconnectTime === undefined) hlsOpts.disconnectTime = 0\n\n    this.hls = new Hls({\n      softDecode: this.softDecode,\n      isLive: config.isLive,\n      media: this.player.media || this.player.video,\n      startTime: config.startTime,\n      url: config.url,\n      ...hlsOpts\n    })\n\n    if (!this.softDecode) {\n      BasePlugin.defineGetterOrSetter(this.player, {\n        url: {\n          get: () => this.hls?.media?.src,\n          configurable: true\n        }\n      })\n    }\n\n    if (this.softDecode) {\n      this.pluginExtension = new PluginExtension({\n        isLive: config.isLive,\n        media: this.player.video,\n        ...hlsOpts\n      }, this)\n      this.player.forceDegradeToVideo = (...args) => this.pluginExtension?.forceDegradeToVideo(...args)\n    }\n\n    if (config.isLive) {\n      // This is a heavy operation for the vod flow, which may cause seeked event never emit\n      this.player?.useHooks('replay', () => this.hls?.replay())\n    }\n\n    this.on(Events.SWITCH_SUBTITLE || 'switch_subtitle', this._onSwitchSubtitle)\n    this.on(Events.URL_CHANGE, this._onSwitchURL)\n    this.on(Events.DESTROY, this.destroy.bind(this))\n\n    this._transError()\n    this._transCoreEvent(EVENT.TTFB)\n    this._transCoreEvent(EVENT.LOAD_START)\n    this._transCoreEvent(EVENT.LOAD_RESPONSE_HEADERS)\n    this._transCoreEvent(EVENT.LOAD_COMPLETE)\n    this._transCoreEvent(EVENT.LOAD_RETRY)\n    this._transCoreEvent(EVENT.SOURCEBUFFER_CREATED)\n    this._transCoreEvent(EVENT.REMOVE_BUFFER)\n    this._transCoreEvent(EVENT.BUFFEREOS)\n    this._transCoreEvent(EVENT.KEYFRAME)\n    this._transCoreEvent(EVENT.METADATA_PARSED)\n    this._transCoreEvent(EVENT.DEMUXED_TRACK)\n    this._transCoreEvent(EVENT.SEI)\n    this._transCoreEvent(EVENT.SEI_IN_TIME)\n    this._transCoreEvent(EVENT.SPEED)\n    this._transCoreEvent(EVENT.HLS_MANIFEST_LOADED)\n    this._transCoreEvent(EVENT.HLS_LEVEL_LOADED)\n    this._transCoreEvent(EVENT.STREAM_EXCEPTION)\n    this._transCoreEvent(EVENT.SWITCH_URL_SUCCESS)\n    this._transCoreEvent(EVENT.SWITCH_URL_FAILED)\n    this._transCoreEvent(Event.NO_AUDIO_TRACK)\n    this._transCoreEvent(Event.STREAM_PARSED)\n    this._transCoreEvent(Event.SUBTITLE_SEGMENTS)\n    this._transCoreEvent(Event.SUBTITLE_PLAYLIST)\n    this._transCoreEvent(Event.APPEND_COST)\n\n    if (config.url) {\n      this.hls.load(config.url, true).catch(e => {})\n    }\n  }\n\n  /**\n   * It needs to be supported as a subclass to be inherited externally, so don't write it as an attribute here\n   */\n  destroy () {\n    if (this.hls) {\n      this.hls.destroy()\n      this.hls = null\n    }\n\n    this.pluginExtension?.destroy()\n    this.pluginExtension = null\n  }\n\n  /**\n   * @returns {import('./hls').Stats |  undefined}\n   */\n  getStats = () => {\n    return this.hls?.getStats()\n  }\n\n\n  /**\n   * @param {string | boolean} [mediaType]\n   * @param {string} [codec]\n   * @returns {boolean}\n   * - mediaType: 默认检测 MSE 对 H264 codec是否支持，传入 true 或者配置参数的mediaType的取值检测 WebAssembly是否支持\n   * - codec: 暂无使用\n   */\n  static isSupported (mediaType, codec) {\n    return Hls.isSupported(mediaType, codec)\n  }\n\n  _onSwitchSubtitle = ({lang}) => {\n    this.hls?.switchSubtitleStream(lang)\n  }\n\n  _onSwitchURL = (url, args) => {\n    const { player, hls } = this\n    if (hls) {\n      const options = parseSwitchUrlArgs(args, this)\n      player.config.url = url\n      hls.switchURL(url, options).catch(e => {})\n\n      if (!options.seamless && this.player.config?.hls?.keepStatusAfterSwitch) {\n        this._keepPauseStatus()\n      }\n    }\n  }\n\n  _keepPauseStatus = () => {\n    const paused = this.player.paused\n    if (!paused) return\n    this.player.once('canplay', () => {\n      this.player.pause()\n    })\n  }\n\n  _transError () {\n    this.hls.on(Event.ERROR, (err) => {\n      if (this.player) {\n        this.player.emit(Events.ERROR, new Errors(this.player, err))\n      }\n    })\n  }\n\n  _transCoreEvent (eventName) {\n    this.hls.on(eventName, (e) => {\n      if (this.player) {\n        this.player.emit('core_event', {\n          ...e,\n          eventName\n        })\n\n        if (eventName === EVENT.SEI_IN_TIME && this.hls.hasSubtitle) {\n          this._emitSeiPaylodTime(e)\n        }\n      }\n    })\n  }\n\n  _emitSeiPaylodTime (e) {\n    try {\n      const seiJson = JSON.parse(Array.from(e.data.payload).map(x=>String.fromCharCode(x)).join('').slice(0,-1))\n      if (!seiJson['rtmp_dts']) return\n      this.player.emit('core_event', {\n        eventName: Event.SEI_PAYLOAD_TIME,\n        time: seiJson['rtmp_dts']\n      })\n    } catch (e) {}\n  }\n\n}\n"],"names":["createPublicPromise","res","rej","promise","Promise","resolve","reject","used","apply","arguments","nowTime","parseInt","performance","now","e","Date","getTime","Buffer","_classCallCheck","key","value","buf","length","end","start","b","buffered","error","maxHole","buffers","i","l","bufLen","last","lastEnd","push","reduce","a","c","pos","undefined","index","nextStart","nextEnd","prevStart","prevEnd","item","currentTime","behind","remaining","totalLength","ERR","FLV","HLS","MP4","FMP4","MSE_ADD_SB","MSE_APPEND_BUFFER","MSE_OTHER","MSE_FULL","OPTION","DASH","LICENSE","CUSTOM_LICENSE","MSE_HIJACK","EME_HIJACK","SIDX","NO_CANPLAY_ERROR","BUFFERBREAK_ERROR","WAITING_TIMEOUT_ERROR","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_CODEC_NOT_SUPPORTED","MEDIA_ERR_URL_EMPTY","ERR_CODE","_defineProperty","_ERR_CODE","StreamingError","_Error","_inherits","_super","_createSuper","type","subType","origin","payload","msg","_this","call","message","errorType","originError","ext","errorCode","errorMessage","Error","_error$response","isTimeout","url","response","httpCode","status","isBrowser","window","LogCacheLevel","DEBUG","LOG","WARN","ERROR","SIMPLE_TYPE","Logger","name","config","this","_prefix","concat","logCacheLevel","logMaxSize","logSize","logTextArray","_createClass","_console","_len","args","Array","_key","logCache","disabled","console","debug","_console2","_len2","_key2","log","_console3","_len3","_key3","warn","_console4","_len4","_key4","text","_len5","logText","_key5","finLogText","map","logable","JSON","stringify","delLog","shift","join","reset","_console5","group","table","groupEnd","val","toLocaleString","reduceDepth","_typeof","objType","Object","prototype","toString","slice","obj","maxDepth","depth","result","includes","hasOwnProperty","MediaSource","getMediaSource","OP_NAME","MSE","media","_this2","create","queue","_queue","op","opName","costtime","_opst","_logger","context","_startQueue","event","_config","assign","getDefaultConfig","bindMedia","openLog","enable","_enqueueBlockingOp2","_unbindMedia","_bindMedia","get","_this$mediaSource","mediaSource","readyState","_url","_this$mediaSource2","duration","_mseFullFlag","VIDEO","_this3","isReduceDuration","bufferEnd","keys","_sourceBuffer","forEach","k","Math","max","_enqueueBlockingOp","isEnded","_this4","_openPromise","isOpened","ms","addEventListener","onOpen","_st","removeEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this5","wrap","_context","prev","next","unbindMedia","revokeObjectURL","src","URL","createObjectURL","abrupt","stop","_x","_callee2","hasMetadata","mseOpen","_this6","_context2","t","x","_x$promise","_x$promise$resolve","endOfStream","removeSourceBuffer","removeAttribute","load","mimeType","sb","addSourceBuffer","_onSBUpdateEnd","bind","_onSBUpdateError","_this7","changeType","_enqueueOp","createSource","buffer","_this8","byteLength","_this8$_sourceBuffer$","appendBuffer","startTime","endTime","_this9","isInsertHead","remove","p","_this10","_this11","allClear","_this$_queue$type","initOpque","isinit","reason","_this12","setLiveSeekableRange","exec","_this13","splice","then","_callee3","types","waiters","_this14","_context3","prom","all","updating","_x2","_x3","_x4","indexOf","timestampOffset","_this15","_this16","abort","mime","isTypeSupported","LoaderType","ResponseType","NetError","request","_assertThisInitialized","isPlainObject","getPrototypeOf","getRangeValue","ret","encode","encodeURIComponent","replace","setUrlParams","params","v","str","isArray","toISOString","isObject","filter","Boolean","hashIndex","createResponse","data","done","contentLength","age","firstByteTime","range","vid","priOptions","parseFloat","Number","isNaN","options","calculateSpeed","byteLen","millisec","round","EVENT","TTFB","LOAD_START","LOAD_RESPONSE_HEADERS","LOAD_COMPLETE","LOAD_RETRY","SOURCEBUFFER_CREATED","ANALYZE_DURATION_EXCEEDED","REMOVE_BUFFER","BUFFEREOS","KEYFRAME","METADATA_PARSED","SEI","SEI_IN_TIME","FLV_SCRIPT_DATA","LOWDECODE","SWITCH_URL_SUCCESS","SWITCH_URL_FAILED","SPEED","HLS_MANIFEST_LOADED","HLS_LEVEL_LOADED","DEMUXED_TRACK","STREAM_EXCEPTION","LARGE_AV_FIRST_FRAME_GAP_DETECT","LARGE_VIDEO_DTS_GAP_DETECT","LARGE_AUDIO_DTS_GAP_DETECT","AUDIO_GAP_DETECT","AUDIO_OVERLAP_DETECT","MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT","REAL_TIME_SPEED","has","prefix","Events","EE","fn","once","addListener","emitter","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","removeListener","j","on","removeAllListeners","off","prefixed","module","exports","CACHESIZE","FetchLoader","_EventEmitter","_cancel","_ref","_this$_abortControlle","timeout","responseType","onProgress","onTimeout","onCancel","transformResponse","logger","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","onProcessMinLen","_aborted","_onProcessMinLen","_onCancel","_abortController","AbortController","_running","_index","_range","_vid","_priOptions","init","signal","clearTimeout","_timeoutTimer","rangeValue","Headers","append","Range","setTimeout","cancel","fetch","_ref2","costTime","speed","_response","ok","sent","json","_loadChunk","arrayBuffer","Uint8Array","time","catch","_error","_reader","t0","st","getReader","err","_cache","_writeIdx","reader","pump","_ref3","_this3$_range","startRange","startByte","curLen","retData","temp","read","_receivedLength","set","XhrLoader","req","_onProgress","_headers","_withCredentials","_body","_method","_timeout","_runing","_responseType","_firstRtt","_onTimeout","_request","_loadCompleteResolve","_loadCompleteReject","_startLoad","chunkSize","_currentChunkSizeKB","from","to","_internalOpen","_startTime","xhr","_xhr","XMLHttpRequest","open","withCredentials","onload","_onLoad","onreadystatechange","_onReadyStatechange","onerror","errorEvent","_errorEvent$currentTa","_errorEvent$currentTa2","_errorEvent$currentTa3","currentTarget","statusText","ontimeout","setRequestHeader","send","target","_this$_range","_objectSpread","byteStart","_this$_range2","chunk","responseURL","_getHeaders","_transformResponse","_getPrototypeOf","_step","_iterator","_createForOfIteratorHelper","getAllResponseHeaders","trim","split","s","n","parts","toLowerCase","f","Task","alive","_loaderType","_loader","_retryCount","_retryTimer","_canceled","_retryCheckFunc","retryCheckFunc","_this$_config","retry","retryDelay","onRetryError","transformError","rest","_objectWithoutProperties","_excluded","isRetry","running","loaderType","retryCount","concatUint8Array","arr","prevLen","d","sleep","NetLoader","cfg","transformRequest","integrity","getConfig","isSupported","task","loader","_currentTask","_processTask","cancels","_alive","finally","_this3$_currentTask","_this3$_alive","GapService","maxJumpDistance","isLive","seekThreshold","jumpTo","_prevCurrentTime","info","seeking","SeiService","Set","sei","_seiSet","add","size","min","toThrow","delete","clear","BandwidthService","totalByte","_speeds","_chunkSpeeds","Stats","timescale","_timescale","encodeType","audioCodec","videoCodec","domain","fps","bitrate","width","height","samplerate","channelCount","gop","_data$onMetaData","onMetaData","framerate","track","codec","codecType","fpsNum","fpsDen","sampleRate","responseUrl","samples","sample","_startGopId","gopId","_bitsAccumulateDuration","_bitsAccumulateSize","units","MediaStatsService","core","_core","_stats","_bindEvents","_this$_core","_this$_core2","_this$_core2$speedInf","_this$_core3","_this$_core3$speedInf","_this$_core4","_this$_core4$bufferIn","_ref2$currentTime","_ref2$decodeFps","decodeFps","getStats","downloadSpeed","speedInfo","avgSpeed","bufferInfo","videoTrack","updateBitrate","setFpsFromScriptData","setVideoMeta","setAudioMeta","setDomain","_samples","TrackType","VideoCodecType","AudioCodecType","WarningType","VideoTrack","sequenceNumber","baseMediaDecodeTime","present","pid","pps","sps","vps","sarRatio","warnings","hvcC","isVideoEncryption","AudioTrack","sampleDuration","isAudioEncryption","VideoSample","pts","dts","originPts","originDts","keyframe","flag","dependsOn","isNonSyncSample","AudioSample","sampleOffset","Sample","FlvScriptSample","_Sample","SeiSample","_Sample2","_super2","MetadataTrack","flvScriptSamples","seiSamples","ExpGolomb","_data","_bytesAvailable","_loadWord","_bitsAvailable","position","availableBytes","workingBytes","subarray","_word","DataView","getUint32","count","skipBytes","floor","bits","readBits","leadingZeroCount","skipLZ","skipBits","clz","readUEG","lastScale","nextScale","readEG","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs2","checkLength","array","ua","navigator","userAgent","toLocaleLowerCase","isSafari","test","isFirefox","isAndroid","MAX_SIZE","pow","readBig16","readBig32","readBig64","getAvcCodec","codecs","h","parse","NALu","offset","dataLen","unit","isHevc","uuid","uint","emulationPreventionBytesPositions","newLength","newData","sourceIndex","AVC","nalUnitSize","spsParsed","spsSize","spsArr","ppsArr","spsCount","parseSPS","removeEPB","ppsSize","ppsCount","eg","readUByte","profileIdc","profileCompatibility","levelIdc","skipUEG","chromaFormat","chromaFormatIdc","readBool","scalingListCount","skipScalingList","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","fixedFrame","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","aspectRatioIdc","numUnitsInTick","timeScale","ceil","AAC","rate","FREQ","skip","frames","samplingFrequencyIndex","protectionSkipBytes","frameLength","objectType","_AAC$_getConfig","_getConfig","frameIndex","getFrameDuration","originCodec","_AAC$_getConfig2","samplingIndex","originObjectType","extensionSamplingIndex","HEVC","vpsParsed","nalUnitType","numNalus","nalSize","vpsArr","numOfArrays","parseVPS","vpsMaxSubLayersMinus1","numTemporalLayers","_parseProfileTierLevel","spsMaxSubLayersMinus1","temporalIdNested","separateColourPlaneFlag","confWinLeftOffset","confWinRightOffset","confWinTopOffset","confWinBottomOffset","conformanceWindowFlag","bitDepthLumaMinus8","bitDepthChromaMinus8","subWidthC","subHeightC","maxSubLayersMinus1","generalTierFlag","generalProfileSpace","generalProfileIdc","generalProfileCompatibilityFlags","generalConstraintIndicatorFlags","generalLevelIdc","subLayerProfilePresentFlag","subLayerLevelPresentFlag","bitsAvailable","MAX_SILENT_FRAME_DURATION","AUDIO_EXCETION_LOG_EMIT_DURATION","FlvFixer","audioTrack","metadataTrack","_baseDts","_baseDtsInited","_audioNextPts","_videoNextDts","_audioTimestampBreak","_videoTimestampBreak","_lastVideoDuration","_keyFrameInNextChunk","_lastAudioExceptionGapDot","Infinity","_lastAudioExceptionOverlapDot","_lastAudioExceptionLargeGapDot","_lastVideoExceptionLargeGapDot","_lastVideoExceptionChunkFirstDtsDot","discontinuity","contiguous","_videoLastSample","_calculateBaseDts","resetBaseDts","exist","_resetBaseDtsWhenStreamBreaked","_fixAudio","_fixVideo","refSampleDurationInt","first","lastSample","pop","unshift","samp0","firstSample","vDelta","abs","_samples$","nextDts","firstSampleDts","nextSampleDts","nextSample","refSampleDuration","_doFixAudioInternal","audioSamps","videoSamps","audioBasePts","videoBaseDts","baseDts","delta","isFinite","_getG711Duration","sampleDurationInSampleRate","nextPts","silentFrame","_getSilentFrame","silentSample","sampleSize","getSilentFrame","AMF","_parseValue","byteOffset","view","isEnd","getUint8","getFloat64","_AMF$_parseString","_parseString","terminal","_AMF$_parseObject","_parseObject","_terminal","_AMF$_parseObject2","strictArrayLength","_AMF$_parseValue","timestamp","getInt16","decode","getUint16","FlvDemuxer","_fixer","_remainingData","_headerParsed","probe","tagType","dataSize","bodyData","prevTagSize","_parseAudio","_parseVideo","_parseScript","formatTimescale","hasSample","fix","demux","format","soundRate","soundSize","soundType","AUDIO_RATE","_parseAac","_parseG711","parseAudioSpecificConfig","sampleRateIndex","frameType","codecId","packetType","cts","configData","parseHEVCDecoderConfigurationRecord","parseAVCDecoderConfigurationRecord","parseAvcC","_checkAddMetaNalToUnits","setToKeyframe","parseSEI","_gopId","hevc","_needAddMetaBeforeKeyFrameNal","MAX_VIDEO_FRAME_DURATION","TsFixer","vSamples","aSamples","firstVideoSample","firstAudioSample","vaDelta","vDeltaToNextDts","aDeltaToNextDts","_samples$i","prevDts","second","expectFragEnd","_audioLastSample","TsDemuxer","_pmtId","_remainingPacketData","_videoPesData","_audioPesData","remainingLength","videoPid","audioPid","payloadUnitStartIndicator","adaptationFiledControl","tableEnd","programInfoLength","esPid","_parseVideoData","_parseAudioData","pes","_parsePES","_toConsumableArray","parseAnnexB","_createVideoSample","spsInfo","_pushVideoSample","_parseAacData","_track$samples","parseADTS","headerDataLen","pesLen","ptsDtsFlags","MP4Parser","headerSize","subData","findBox","box","parseBox","trackId","baseDataOffsetPresent","flags","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","baseDataOffset","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","reference_ID","version","earliest_presentation_time","first_offset","references","ref","tmp32","reference_type","referenced_size","subsegment_duration","starts_with_SAP","SAP_type","SAP_delta_time","mvhd","trak","pssh","nextTrackId","tkhd","mdia","mdhd","hdlr","minf","lang","language","handlerType","vmhd","smhd","stbl","graphicsmode","opcolor","balance","_ret$stsd$entries$","_ret$stsd$entries$$si","_ret$stsd$entries$$si2","stsd","stts","ctts","stsc","stsz","stco","co64","default_IV_size","entries","sinf","schi","tenc","stss","senc","iv","sampleCount","InitializationVector","subsamples","subsampleCount","subsample","BytesOfClearData","BytesOfProtectedData","keyIds","systemId","toHex","numKeyIds","keyId","data_size","kid","system_id","entryCount","avc1","hvc1","mp4a","alaw","samplesize","esds","horizresolution","vertresolution","avcC","pasp","default_IsEncrypted","default_KID","frma","data_format","bodyStart","parseVisualSampleEntry","configurationVersion","AVCProfileIndication","AVCLevelIndication","lengthSizeMinusOne","spsLength","ppsLength","tmp","generalProfileCompatibility","avgFrameRate","_ret$vps","nalus","_ret$sps","_ret$pps","hSpacing","vSpacing","parseAudioSampleEntry","byteRead","tag","substring","padStart","firstChunk","samplesPerChunk","entrySizes","mfhd","traf","tfhd","tfdt","trun","dataOffset","firstSampleFlags","isLeading","isDependedOn","hasRedundancy","paddingValue","degradationPriority","moov","_e$esds","_e$esds2","tracks","vTrack","find","_t$mdia","_t$mdia$hdlr","aTrack","_t$mdia2","_t$mdia2$hdlr","_vTrack$tkhd","_vTrack$mdia","_vTrack$mdia$minf","_vTrack$mdia$minf$stb","_vTrack$mdia2","_vTrack$mdia2$minf","_vTrack$mdia2$minf$st","_vTrackId","id","tkhdDuration","mvhdDurtion","mvhdTimecale","_e1$sinf","_e1$sinf$schi","_e1$sinf2","_e1$sinf2$schi","_e1$sinf3","_e1$sinf3$schi","_e1$sinf4","_e1$sinf4$frma","e1","videoSenc","useEME","kidValue","encv","_aTrack$tkhd","_e$esds3","_e$esds4","_aTrack$mdia","_aTrack$mdia$minf","_aTrack$mdia$minf$stb","_aTrack$mdia2","_aTrack$mdia2$minf","_aTrack$mdia2$minf$st","_aTrackId","_e$sinf","_e$sinf$frma","_e$sinf2","_e$sinf2$schi","_e$sinf3","_e$sinf3$schi","_e$sinf4","_e$sinf4$schi","getRateIndexByRate","audioSenc","enca","_videoTrack$encv","_audioTrack$enca","vkid","akid","videoSampleCount","_audioTrack$samples","audioSampleCount","moof","defaultSize","defaultDuration","evaluateDefaultDuration","_t$mdia3","_t$mdia3$hdlr","_t$mdia4","_t$mdia4$hdlr","videoSamples","audioSamples","_vTrack$mdia3","_vTrack$mdia3$minf","videoStbl","getSamples","_aTrack$mdia3","_aTrack$mdia3$minf","_aTrack$mdia$mdhd","audioStbl","keyframeMap","cttsArr","cttsEntries","stscEntries","stcoEntries","stszEntrySizes","stssEntries","chunkIndex","chunkRunIndex","offsetInChunk","lastSampleInChunk","lastChunkInRun","dataReferenceIndex","frameCount","isFullBox","readBig24","pad","charstr","maxlen","chars","r","hex","FMP4Demuxer","videoData","audioData","videoExist","audioExist","moovBox","moovToTrack","moofBox","moofToSamples","baseOffset","sampleData","videoBaseMediaDecodeTime","audioBaseMediaDecodeTime","Concat","ResultConstructor","arrays","self","UINT32_MAX","FTYPHEV1","FTYPAVC1","ftyp","content","mvex","HDLR_TYPES","VMHD","SMHD","DINF","extBox","STTS","STSC","STSZ","STCO","avc1hev1","_concat$concat","avcc","btrt","charCodeAt","schm","typ","boxes","fiel","_concat$concat2","ArrayBuffer","pcf","cif","write","_ref4","_slicedToArray","trex","sencLength","isVideo","videoSencLength","saiz","saio","trun1","sbgp","sdtp","extension","writeUint32","samplesLength","writeUint16","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","sampleLen","_samples$i$flag","_samples$i$cts","trackMP4","mdiaMP4","minfMP4","stblMP4","_ref5","_ref6","sampleDescIndex","samplesSizes","offsets","keyframeIndexes","_ref7","styp","durationCount","earliestTime","mdatSize","sidx","mdat","video","audio","dinf","dref","StblTable","FMP4Remuxer","browserVersions","forceFirstIDR","createInit","videoInitSegment","audioInitSegment","initSegment","videoSegment","audioSegment","hasVideo","hasAudio","initMerge","_remuxVideo","_remuxAudio","mdata","mdatView","_loop","_offset","_sample","u","setUint32","Base","properties","clone","constructor","_construct","WordArray","_Base","words","sigBytes","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","typedArrayByteLength","_words","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","_get","nBytes","rcache","m_w","_m_w","_m_z","mask","random","_r","hexChars","bite","hexStr","hexStrLength","substr","Latin1","latin1Str","latin1StrLength","Utf8","utf8Str","unescape","BufferedBlockAlgorithm","_Base2","_minBufferSize","_nDataBytes","m_data","doFlush","processedWords","blockSize","dataWords","dataSigBytes","nBlocksReady","nWordsReady","nBytesReady","_doProcessBlock","Hasher","_BufferedBlockAlgorit","_super3","_doReset","messageUpdate","_append","_process","hash","_doFinalize","SubHasher","finalize","HMAC","_Base3","_super4","hasher","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","update","innerHash","hmac","Base64","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","parseLoop","bits1","bitsCombined","T","sin","FF","GG","HH","II","MD5Algo","_Hasher","_hash","M","_M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","_createHelper","_createHmacHelper","EvpKDFAlgo","keySize","iterations","password","salt","derivedKeyWords","block","derivedKey","Cipher","xformMode","_xformMode","dataUpdate","finalProcessedData","_ENC_XFORM_MODE","_DEC_XFORM_MODE","SubCipher","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","encrypt","decrypt","ciphertext","ivSize","BlockCipherMode","cipher","_cipher","_iv","Encryptor","Decryptor","xorBlock","_prevBlock","CBC","_BlockCipherMode","_CBC","_class","_super5","encryptBlock","_CBC2","_class2","_super6","thisBlock","decryptBlock","Pkcs7","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","_Cipher2","_super7","modeCreator","createEncryptor","createDecryptor","_mode","__creator","processBlock","finalProcessedBlocks","CipherParams","_super8","cipherParams","mixIn","formatter","OpenSSLFormatter","openSSLStr","ciphertextWords","_super9","_cfg","encryptor","cipherCfg","algorithm","_ciphertext","plaintext","_parse","OpenSSLKdf","execute","_salt","compute","_SerializableCipher","_super10","derivedParams","kdf","_SBOX","INV_SBOX","_SUB_MIX_0","_SUB_MIX_1","_SUB_MIX_2","_SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AESAlgo","_BlockCipher","_nRounds","_keyPriorReset","keyWords","ksRows","_keySchedule","keySchedule","ksRow","_invKeySchedule","invKeySchedule","invKsRow","_doCryptBlock","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","SBOX","nRounds","s0","s1","s2","s3","t1","t2","t3","CTR","_CTR","counter","_counter","keystream","crypto","msCrypto","subtle","webkitSubtle","externalDecryptor","_decryptData2","_decryptSegment2","_this$externalDecrypt","destroy","_decryptSegment","seg","_decryptData","keyIv","aesKey","importKey","_x5","_x6","_x7","Event","STREAM_PARSED","NO_AUDIO_TRACK","SUBTITLE_SEGMENTS","SUBTITLE_PLAYLIST","SEI_PAYLOAD_TIME","APPEND_COST","Transmuxer","hls","isMP4","needRemux","_demuxer","_isMP4","_remuxer","videoChunk","audioChunk","needInit","demuxer","demuxAndFix","newId","_initSegmentId","_fireEvents","_this$_remuxer$remux","remux","meta","code","BufferService","softDecode","_softVideo","_mse","decryptor","_decryptor","_destroy","_setLiveSeekableRange","_endOfStream","_reset","_clearAllBuffer","_evictBuffer","_removeBuffer","_appendBuffer","_updateDuration","_this$_transmuxer","_this$_transmuxer$_de","_this$_transmuxer$_de2","_transmuxer","_this$_mse","_this$_mse2","updateDuration","_sourceCreated","_directAppend","mix","_createMseSource","segment","_this$_transmuxer$tra","_this$_transmuxer$tra2","isFirstAppend","mse","_p","AUDIO","_needInitSegment","transmux","setTrackExist","_handleCodecChange","_x8","_args3","clearBuffer","removeEnd","_callee4","bufferBehind","_context4","removeBuffer","_x9","_callee5","_context5","clearAllBuffer","_callee6","reuseMse","_args6","_context6","_callee7","_context7","_callee8","_context8","_x10","_x11","_callee9","_this$_decryptor","_context9","sourceBuffer","getSourceBuffer","RegExp","_this$_mse3","mediaType","isFull","MasterPlaylist","MediaType","MediaStream","AudioStream","_MediaStream","SubTitleStream","_MediaStream3","MasterStream","MediaPlaylist","MediaSegment","prevSegment","byteRange","bytes","MediaSegmentKey","segKey","keyFormat","keyFormatVersions","sn","setIVFromSN","REGEXP_TAG","REGEXP_ATTR","REGEXP_ABSOLUTE_URL","REGEXP_URL_PAIR","getLines","parseTag","match","parseAttr","getAbsoluteUrl","parentUrl","pairs","CODECS_REGEXP","getCodecs","re","parseMasterPlaylist","lines","line","master","audioStreams","subtitleStreams","_tag","attr","stream","TYPE","URI","default","DEFAULT","autoSelect","AUTOSELECT","NAME","LANGUAGE","CHANNELS","channels","BANDWIDTH","RESOLUTION","_attr$RESOLUTION$spli2","w","CODECS","textCodec","audioGroup","subtitleGroup","SUBTITLES","streams","parseMediaPlaylist","useLowLatency","curSegment","curInitSegment","curKey","totalDuration","curSN","curCC","endOfList","partSegmentIndex","toUpperCase","targetDuration","lowLatency","partTargetDuration","canBlockReload","partHoldBack","canSkipUntil","canSkipDateRanges","lastSegment","segments","isLast","live","startSN","startCC","setByteRange","independent","cc","partIndex","dataTime","_data$split2","title","METHOD","KEYFORMAT","KEYFORMATVERSIONS","IV","BYTERANGE","isInitSegment","endSN","endPartIndex","endCC","M3U8Parser","isMediaPlaylist","ManifestLoader","elapsed","retryTime","network","_timer","_useLowLatency","_this$hls$config","manifestLoadTimeout","fetchOptions","_onLoaderRetry","_audioLoader","_subtitleLoader","_load","audioUrl","subtitleUrl","toLoad","videoText","audioText","subtitleText","videoResUrl","audioResUrl","subtitleResUrl","_yield$Promise$all","_yield$Promise$all2","subtitle","_audio$response","_subtitle$response","_audio$response2","onPreM3U8Parse","playlist","audioPlaylist","subtitlePlaylist","_playlist","_emitOnLoaded","isMaster","_playlist2","cb","errorCb","pollRetryCount","num","Stream","_setLLPlaybackPoint","_this$segments$","_this$lastSegment","_this$currentSubtitle","currentSubtitleStream","pointer","currentAudioStream","_clearSegments","snDiff","_updateSegments","skippedSegments","newSegs","segs","toSwitch","maxStartPoint","usefulSegs","sliceStart","segObj","endSeg","hasNew","findIndex","toAppend","endTimeBeforeAppend","lastCC","Playlist","_this$currentStream","currentStream","_this$currentStream2","_this$currentSegments","currentSegments","_segmentPointer","_this$currentSegments2","_this$currentStream3","_this$currentStream4","currentSubtitleEndSn","_this$currentStream5","liveEdge","_this$currentStream6","_this$currentSegments3","_this$currentSegments4","_this$currentStream7","_this$currentStream8","_this$currentStream9","getAudioSegment","_this$currentSegments5","dvrWindow","_this$currentSegments6","newSubtitleSegs","updateSubtitle","list","_this$currentStream10","switchSubtitle","maxPlaylistSize","clearOldSegment","cTime","nbSb","findSegmentIndexByTime","getSegmentByIndex","SegmentLoader","_bandwidthService","addRecord","_mapCache","_keyCache","loadTimeout","_segmentLoader","_audioSegmentLoader","_keyLoader","_loadSegment2","getLatestSpeed","getAvgSpeed","audioSeg","loadInit","loadAudioInit","loadVideoSegment","loadAudioSegment","_loadSegment","segLoader","_seg$key","mapKey","mapKeyIv","_seg$initSegment$key","mapUrl","_keyUrl","keyUrl","Hls","_reset2","_clear2","_onCheckQuotaExceeded2","_reqAndBufferSegment2","_loadSegmentDirect2","_loadM3U","_switchSubtitleStream","_switchAudioStream","_switchStream","_switchURL","_replay","_loadData2","nextSeg","bInfo","bufferThroughout","_segmentProcessing","nextSegment","paused","preloadTime","_bufferService","msIsOpend","_urlSwitching","_prevSegSn","setNextSegmentByIndex","_loadSegmentDirect","_disconnectTimer","_reloadOnPlay","replay","_startTick","disconnectTime","_clear","_stopTick","seekTime","seekRange","newSeekTime","curSeg","segIndex","_onCheckQuotaExceeded","currentSegment","_this$_seiService","maxLatency","targetLatency","latency","seiInTime","_seiService","throw","allowedStreamTrackChange","_checkStreamTrackChange","segLoaderError","_isProcessQuotaExceeded","fatal","_emitError","ended","playbackRate","isMediaPlaying","_gapService","do","document","createElement","manifestList","minSegmentsStartPlay","_manifestLoader","_onPlay","_onPause","_onSeeking","_onTimeupdate","hasSubtitle","_this$_bufferService","_this$media","getVideoPlaybackQuality","droppedVideoFrames","corruptedVideoFrames","totalVideoFrames","creationTime","webkitDroppedFrameCount","webkitDecodedFrameCount","_args4","_loadData","manifest","_this$_switchUrlOpts","_this$_switchUrlOpts2","switchTimePoint","segIdx","bufferClearStartPoint","_this$_switchUrlOpts3","_loadM3U8","_switchUrlOpts","_getSeamlessSwitchPoint","nbSegments","_pollM3U8","seamless","isPlayEmit","play","defaultOpts","_options","appended","_args7","_prevSegCc","seamlessSwitch","force","curStream","curId","_args8","_refreshM3U8","audioStream","_args9","_callee10","_context10","stopPoll","_callee11","_this$_seiService2","_context11","_callee12","_this$config$manifest","_this$config$manifest2","_this$_playlist$curre","_context12","parseText","upsertPlaylist","_stream$currentAudioS","_stream$currentSubtit","mediaPlaylist","pollInterval","_this$_playlist$lastS","isEmpty","poll","p1","p2","p3","hadSegmentLoaded","_callee13","loadOnce","cachedError","_context13","_reqAndBufferSegment","finish","moveSegmentPointer","_end","_callee14","_this$_bufferService2","responses","before","_context14","decryptBuffer","evictBuffer","_callee15","inBuffered","mediaTime","_context15","changedSeg","checkSegmentTrackChange","switchURL","_callee16","_context16","_callee17","_this$_seiService3","_args17","_context17","_tickTimer","_tick","_tickInterval","_error$originError","_this$media2","_this$media3","_this$_seiService4","pause","nextLoadPoint","_this$_stats","latestKbps","delay","WebAssembly","TransmuxerLogger","disable","localStorage","getItem","enableLogger","disableLogger","PluginExtension","opts","plugin","_this$_plugin","_this$_plugin$player","_this$_plugin2","_this$_plugin2$player","_this$_opts","_opts","innerDegrade","_plugin","player","degradeInfo","eventName","_degrade","originVideo","TAG","newVideo","degradeVideo","degrade","firstChild","root","replaceChild","hlsPlugin","pluginName","unRegisterPlugin","_init","_this$_opts2","setPlayMode","setAttribute","_onLowDecode","_this$_opts3","_this$_opts3$media","parseSwitchUrlArgs","HlsPlugin","_BasePlugin","_args","_this$hls","_this$hls2","switchSubtitleStream","_assertThisInitialize","_this$player$config","_this$player$config$h","keepStatusAfterSwitch","_keepPauseStatus","_this$hls3","_this$player","_this$player$config2","__allowHlsEmptyUrl__","_onSwitchURL","hlsOpts","_this$player2","defineGetterOrSetter","_this2$hls","_this2$hls$media","configurable","pluginExtension","forceDegradeToVideo","_this2$pluginExtensio","useHooks","_this2$hls2","SWITCH_SUBTITLE","_onSwitchSubtitle","URL_CHANGE","DESTROY","_transError","_transCoreEvent","_this$pluginExtension","Errors","_emitSeiPaylodTime","seiJson","BasePlugin"],"mappings":"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"}